public class MyMembershipProvider : System.Web.Security.MembershipProvider
{
    //---for database access use---

    private string connStrName;

    public override void Initialize(string name, System.Collections.Specialized.NameValueCollection config)
    {
        //===retrives the attribute values set in
        //web.config and assign to local variables===

        //connStrName = config("connectionStringName")
        base.Initialize(name, config);
    }

    public override string ApplicationName
    {
        get { }

        set { }
    }

    public override bool ChangePassword(string username, string oldPassword, string newPassword)
    {
    }

    public override bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer)
    {
    }

    public override System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, ref System.Web.Security.MembershipCreateStatus status)
    {
    }

    public override bool DeleteUser(string username, bool deleteAllRelatedData)
    {
    }

    public override bool EnablePasswordReset
    {
        get { }
    }

    public override bool EnablePasswordRetrieval
    {
        get { }
    }

    public override System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int pageIndex, int pageSize, ref int totalRecords)
    {
    }

    public override System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int pageIndex, int pageSize, ref int totalRecords)
    {
    }

    public override System.Web.Security.MembershipUserCollection GetAllUsers(int pageIndex, int pageSize, ref int totalRecords)
    {
    }

    public override int GetNumberOfUsersOnline()
    {
    }

    public override string GetPassword(string username, string answer)
    {
    }

    public override System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline)
    {
    }

    public override System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline)
    {
    }

    public override string GetUserNameByEmail(string email)
    {
    }

    public override int MaxInvalidPasswordAttempts
    {
        get { }
    }

    public override int MinRequiredNonAlphanumericCharacters
    {
        get { }
    }

    public override int MinRequiredPasswordLength
    {
        get { }
    }

    public override int PasswordAttemptWindow
    {
        get { }
    }

    public override System.Web.Security.MembershipPasswordFormat PasswordFormat
    {
        get { }
    }

    public override string PasswordStrengthRegularExpression
    {
        get { }
    }

    public override bool RequiresQuestionAndAnswer
    {
        get { }
    }

    public override bool RequiresUniqueEmail
    {
        get { }
    }

    public override string ResetPassword(string username, string answer)
    {
    }

    public override bool UnlockUser(string userName)
    {
    }

    public override void UpdateUser(System.Web.Security.MembershipUser user)
    {
    }

    public override bool ValidateUser(string username, string password)
    {
        TbEmployeeDAL dal = new TbEmployeeDAL();
        TbEmployee employee = dal.getTbEmployeeByUsername(username);

        if ((employee == null))
        {
            return false;
        }
        else
        {
            if (employee.PASSWD.Equals(password))
            {
                return true;
            }
            else
            {
                return false;
            }
        }
    }
}