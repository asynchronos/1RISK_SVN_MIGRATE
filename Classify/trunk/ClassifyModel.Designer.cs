//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ClassifyModel", "FK_CATE_AND_APP_APPLICATION", "APPLICATION", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(UserSystem.APPLICATION), "CATE_AND_APP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UserSystem.CATE_AND_APP))]
[assembly: EdmRelationshipAttribute("ClassifyModel", "FK_CATE_AND_APP_CATEGORY", "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(UserSystem.CATEGORY), "CATE_AND_APP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UserSystem.CATE_AND_APP))]
[assembly: EdmRelationshipAttribute("ClassifyModel", "FK_CATE_AND_CUS_CATEGORY", "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UserSystem.CATEGORY), "CATE_AND_CUS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UserSystem.CATE_AND_CUS))]
[assembly: EdmRelationshipAttribute("ClassifyModel", "FK_CATE_AND_EMP_CATEGORY", "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UserSystem.CATEGORY), "CATE_AND_EMP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UserSystem.CATE_AND_EMP))]
[assembly: EdmRelationshipAttribute("ClassifyModel", "FK_CATE_AND_EMP_USER_DATA", "USER_DATA", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UserSystem.USER_DATA), "CATE_AND_EMP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UserSystem.CATE_AND_EMP))]
[assembly: EdmRelationshipAttribute("ClassifyModel", "FK_CATE_AND_MENU_CATEGORY", "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(UserSystem.CATEGORY), "CATE_AND_MENU", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UserSystem.CATE_AND_MENU))]
[assembly: EdmRelationshipAttribute("ClassifyModel", "FK_CATE_AND_MENU_MENU_MASTER", "MENU_MASTER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(UserSystem.MENU_MASTER), "CATE_AND_MENU", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UserSystem.CATE_AND_MENU))]
[assembly: EdmRelationshipAttribute("ClassifyModel", "FK_CATEGORY_CATEGORY_TYPE", "CATEGORY_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(UserSystem.CATEGORY_TYPE), "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UserSystem.CATEGORY))]
[assembly: EdmRelationshipAttribute("ClassifyModel", "FK_CATEGORY_RECURSIVE_CATEGORY", "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UserSystem.CATEGORY), "LINKED_CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UserSystem.LINKED_CATEGORY))]
[assembly: EdmRelationshipAttribute("ClassifyModel", "FK_CATEGORY_RECURSIVE_CATEGORY1", "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UserSystem.CATEGORY), "LINKED_CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UserSystem.LINKED_CATEGORY))]
[assembly: EdmRelationshipAttribute("ClassifyModel", "FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_TYPE", "CATEGORY_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UserSystem.CATEGORY_TYPE), "LINKED_CATEGORY_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UserSystem.LINKED_CATEGORY_TYPE))]
[assembly: EdmRelationshipAttribute("ClassifyModel", "FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_TYPE1", "CATEGORY_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UserSystem.CATEGORY_TYPE), "LINKED_CATEGORY_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UserSystem.LINKED_CATEGORY_TYPE))]
[assembly: EdmRelationshipAttribute("ClassifyModel", "FK_CATEGORY_RECURSIVE_CATEGORY_RECURSIVE_TYPE", "LINKED_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UserSystem.LINKED_TYPE), "LINKED_CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UserSystem.LINKED_CATEGORY))]
[assembly: EdmRelationshipAttribute("ClassifyModel", "FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_RECURSIVE_TYPE", "LINKED_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(UserSystem.LINKED_TYPE), "LINKED_CATEGORY_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UserSystem.LINKED_CATEGORY_TYPE))]
[assembly: EdmRelationshipAttribute("ClassifyModel", "FK_MENU_MASTER_MENU_MASTER", "MENU_MASTER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(UserSystem.MENU_MASTER), "MENU_MASTER1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(UserSystem.MENU_MASTER))]

#endregion

namespace UserSystem
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RISKEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RISKEntities object using the connection string found in the 'RISKEntities' section of the application configuration file.
        /// </summary>
        public RISKEntities() : base("name=RISKEntities", "RISKEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RISKEntities object.
        /// </summary>
        public RISKEntities(string connectionString) : base(connectionString, "RISKEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RISKEntities object.
        /// </summary>
        public RISKEntities(EntityConnection connection) : base(connection, "RISKEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CATE_AND_APP> CATE_AND_APP
        {
            get
            {
                if ((_CATE_AND_APP == null))
                {
                    _CATE_AND_APP = base.CreateObjectSet<CATE_AND_APP>("CATE_AND_APP");
                }
                return _CATE_AND_APP;
            }
        }
        private ObjectSet<CATE_AND_APP> _CATE_AND_APP;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CATE_AND_CUS> CATE_AND_CUS
        {
            get
            {
                if ((_CATE_AND_CUS == null))
                {
                    _CATE_AND_CUS = base.CreateObjectSet<CATE_AND_CUS>("CATE_AND_CUS");
                }
                return _CATE_AND_CUS;
            }
        }
        private ObjectSet<CATE_AND_CUS> _CATE_AND_CUS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CATE_AND_EMP> CATE_AND_EMP
        {
            get
            {
                if ((_CATE_AND_EMP == null))
                {
                    _CATE_AND_EMP = base.CreateObjectSet<CATE_AND_EMP>("CATE_AND_EMP");
                }
                return _CATE_AND_EMP;
            }
        }
        private ObjectSet<CATE_AND_EMP> _CATE_AND_EMP;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CATE_AND_MENU> CATE_AND_MENU
        {
            get
            {
                if ((_CATE_AND_MENU == null))
                {
                    _CATE_AND_MENU = base.CreateObjectSet<CATE_AND_MENU>("CATE_AND_MENU");
                }
                return _CATE_AND_MENU;
            }
        }
        private ObjectSet<CATE_AND_MENU> _CATE_AND_MENU;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CATEGORY> CATEGORies
        {
            get
            {
                if ((_CATEGORies == null))
                {
                    _CATEGORies = base.CreateObjectSet<CATEGORY>("CATEGORies");
                }
                return _CATEGORies;
            }
        }
        private ObjectSet<CATEGORY> _CATEGORies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CATEGORY_TYPE> CATEGORY_TYPE
        {
            get
            {
                if ((_CATEGORY_TYPE == null))
                {
                    _CATEGORY_TYPE = base.CreateObjectSet<CATEGORY_TYPE>("CATEGORY_TYPE");
                }
                return _CATEGORY_TYPE;
            }
        }
        private ObjectSet<CATEGORY_TYPE> _CATEGORY_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LINKED_CATEGORY> LINKED_CATEGORY
        {
            get
            {
                if ((_LINKED_CATEGORY == null))
                {
                    _LINKED_CATEGORY = base.CreateObjectSet<LINKED_CATEGORY>("LINKED_CATEGORY");
                }
                return _LINKED_CATEGORY;
            }
        }
        private ObjectSet<LINKED_CATEGORY> _LINKED_CATEGORY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LINKED_CATEGORY_TYPE> LINKED_CATEGORY_TYPE
        {
            get
            {
                if ((_LINKED_CATEGORY_TYPE == null))
                {
                    _LINKED_CATEGORY_TYPE = base.CreateObjectSet<LINKED_CATEGORY_TYPE>("LINKED_CATEGORY_TYPE");
                }
                return _LINKED_CATEGORY_TYPE;
            }
        }
        private ObjectSet<LINKED_CATEGORY_TYPE> _LINKED_CATEGORY_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LINKED_TYPE> LINKED_TYPE
        {
            get
            {
                if ((_LINKED_TYPE == null))
                {
                    _LINKED_TYPE = base.CreateObjectSet<LINKED_TYPE>("LINKED_TYPE");
                }
                return _LINKED_TYPE;
            }
        }
        private ObjectSet<LINKED_TYPE> _LINKED_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<USER_DATA> USER_DATA
        {
            get
            {
                if ((_USER_DATA == null))
                {
                    _USER_DATA = base.CreateObjectSet<USER_DATA>("USER_DATA");
                }
                return _USER_DATA;
            }
        }
        private ObjectSet<USER_DATA> _USER_DATA;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<APPLICATION> APPLICATIONs
        {
            get
            {
                if ((_APPLICATIONs == null))
                {
                    _APPLICATIONs = base.CreateObjectSet<APPLICATION>("APPLICATIONs");
                }
                return _APPLICATIONs;
            }
        }
        private ObjectSet<APPLICATION> _APPLICATIONs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MENU_MASTER> MENU_MASTER
        {
            get
            {
                if ((_MENU_MASTER == null))
                {
                    _MENU_MASTER = base.CreateObjectSet<MENU_MASTER>("MENU_MASTER");
                }
                return _MENU_MASTER;
            }
        }
        private ObjectSet<MENU_MASTER> _MENU_MASTER;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_001_EXPANDED_CATEGORY_TYPE_1> V_001_EXPANDED_CATEGORY_TYPE_1
        {
            get
            {
                if ((_V_001_EXPANDED_CATEGORY_TYPE_1 == null))
                {
                    _V_001_EXPANDED_CATEGORY_TYPE_1 = base.CreateObjectSet<V_001_EXPANDED_CATEGORY_TYPE_1>("V_001_EXPANDED_CATEGORY_TYPE_1");
                }
                return _V_001_EXPANDED_CATEGORY_TYPE_1;
            }
        }
        private ObjectSet<V_001_EXPANDED_CATEGORY_TYPE_1> _V_001_EXPANDED_CATEGORY_TYPE_1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_002_CATEGORY_MAP_TYPE> V_002_CATEGORY_MAP_TYPE
        {
            get
            {
                if ((_V_002_CATEGORY_MAP_TYPE == null))
                {
                    _V_002_CATEGORY_MAP_TYPE = base.CreateObjectSet<V_002_CATEGORY_MAP_TYPE>("V_002_CATEGORY_MAP_TYPE");
                }
                return _V_002_CATEGORY_MAP_TYPE;
            }
        }
        private ObjectSet<V_002_CATEGORY_MAP_TYPE> _V_002_CATEGORY_MAP_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_004_LINKED_CATEGORY_TYPE_2_INFO> V_004_LINKED_CATEGORY_TYPE_2_INFO
        {
            get
            {
                if ((_V_004_LINKED_CATEGORY_TYPE_2_INFO == null))
                {
                    _V_004_LINKED_CATEGORY_TYPE_2_INFO = base.CreateObjectSet<V_004_LINKED_CATEGORY_TYPE_2_INFO>("V_004_LINKED_CATEGORY_TYPE_2_INFO");
                }
                return _V_004_LINKED_CATEGORY_TYPE_2_INFO;
            }
        }
        private ObjectSet<V_004_LINKED_CATEGORY_TYPE_2_INFO> _V_004_LINKED_CATEGORY_TYPE_2_INFO;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<V_003_LINKED_CATEGORY_TYPE_1_INFO> V_003_LINKED_CATEGORY_TYPE_1_INFO
        {
            get
            {
                if ((_V_003_LINKED_CATEGORY_TYPE_1_INFO == null))
                {
                    _V_003_LINKED_CATEGORY_TYPE_1_INFO = base.CreateObjectSet<V_003_LINKED_CATEGORY_TYPE_1_INFO>("V_003_LINKED_CATEGORY_TYPE_1_INFO");
                }
                return _V_003_LINKED_CATEGORY_TYPE_1_INFO;
            }
        }
        private ObjectSet<V_003_LINKED_CATEGORY_TYPE_1_INFO> _V_003_LINKED_CATEGORY_TYPE_1_INFO;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MASTER_EMPLOYEE> MASTER_EMPLOYEE
        {
            get
            {
                if ((_MASTER_EMPLOYEE == null))
                {
                    _MASTER_EMPLOYEE = base.CreateObjectSet<MASTER_EMPLOYEE>("MASTER_EMPLOYEE");
                }
                return _MASTER_EMPLOYEE;
            }
        }
        private ObjectSet<MASTER_EMPLOYEE> _MASTER_EMPLOYEE;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CATE_AND_APP EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCATE_AND_APP(CATE_AND_APP cATE_AND_APP)
        {
            base.AddObject("CATE_AND_APP", cATE_AND_APP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CATE_AND_CUS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCATE_AND_CUS(CATE_AND_CUS cATE_AND_CUS)
        {
            base.AddObject("CATE_AND_CUS", cATE_AND_CUS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CATE_AND_EMP EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCATE_AND_EMP(CATE_AND_EMP cATE_AND_EMP)
        {
            base.AddObject("CATE_AND_EMP", cATE_AND_EMP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CATE_AND_MENU EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCATE_AND_MENU(CATE_AND_MENU cATE_AND_MENU)
        {
            base.AddObject("CATE_AND_MENU", cATE_AND_MENU);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CATEGORies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCATEGORies(CATEGORY cATEGORY)
        {
            base.AddObject("CATEGORies", cATEGORY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CATEGORY_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCATEGORY_TYPE(CATEGORY_TYPE cATEGORY_TYPE)
        {
            base.AddObject("CATEGORY_TYPE", cATEGORY_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LINKED_CATEGORY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLINKED_CATEGORY(LINKED_CATEGORY lINKED_CATEGORY)
        {
            base.AddObject("LINKED_CATEGORY", lINKED_CATEGORY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LINKED_CATEGORY_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLINKED_CATEGORY_TYPE(LINKED_CATEGORY_TYPE lINKED_CATEGORY_TYPE)
        {
            base.AddObject("LINKED_CATEGORY_TYPE", lINKED_CATEGORY_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LINKED_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLINKED_TYPE(LINKED_TYPE lINKED_TYPE)
        {
            base.AddObject("LINKED_TYPE", lINKED_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the USER_DATA EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUSER_DATA(USER_DATA uSER_DATA)
        {
            base.AddObject("USER_DATA", uSER_DATA);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the APPLICATIONs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAPPLICATIONs(APPLICATION aPPLICATION)
        {
            base.AddObject("APPLICATIONs", aPPLICATION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MENU_MASTER EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMENU_MASTER(MENU_MASTER mENU_MASTER)
        {
            base.AddObject("MENU_MASTER", mENU_MASTER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_001_EXPANDED_CATEGORY_TYPE_1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_001_EXPANDED_CATEGORY_TYPE_1(V_001_EXPANDED_CATEGORY_TYPE_1 v_001_EXPANDED_CATEGORY_TYPE_1)
        {
            base.AddObject("V_001_EXPANDED_CATEGORY_TYPE_1", v_001_EXPANDED_CATEGORY_TYPE_1);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_002_CATEGORY_MAP_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_002_CATEGORY_MAP_TYPE(V_002_CATEGORY_MAP_TYPE v_002_CATEGORY_MAP_TYPE)
        {
            base.AddObject("V_002_CATEGORY_MAP_TYPE", v_002_CATEGORY_MAP_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_004_LINKED_CATEGORY_TYPE_2_INFO EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_004_LINKED_CATEGORY_TYPE_2_INFO(V_004_LINKED_CATEGORY_TYPE_2_INFO v_004_LINKED_CATEGORY_TYPE_2_INFO)
        {
            base.AddObject("V_004_LINKED_CATEGORY_TYPE_2_INFO", v_004_LINKED_CATEGORY_TYPE_2_INFO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the V_003_LINKED_CATEGORY_TYPE_1_INFO EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToV_003_LINKED_CATEGORY_TYPE_1_INFO(V_003_LINKED_CATEGORY_TYPE_1_INFO v_003_LINKED_CATEGORY_TYPE_1_INFO)
        {
            base.AddObject("V_003_LINKED_CATEGORY_TYPE_1_INFO", v_003_LINKED_CATEGORY_TYPE_1_INFO);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MASTER_EMPLOYEE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMASTER_EMPLOYEE(MASTER_EMPLOYEE mASTER_EMPLOYEE)
        {
            base.AddObject("MASTER_EMPLOYEE", mASTER_EMPLOYEE);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassifyModel", Name="APPLICATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class APPLICATION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new APPLICATION object.
        /// </summary>
        /// <param name="aPP_KEY">Initial value of the APP_KEY property.</param>
        /// <param name="aPP_DESC">Initial value of the APP_DESC property.</param>
        public static APPLICATION CreateAPPLICATION(global::System.Int32 aPP_KEY, global::System.String aPP_DESC)
        {
            APPLICATION aPPLICATION = new APPLICATION();
            aPPLICATION.APP_KEY = aPP_KEY;
            aPPLICATION.APP_DESC = aPP_DESC;
            return aPPLICATION;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 APP_KEY
        {
            get
            {
                return _APP_KEY;
            }
            set
            {
                if (_APP_KEY != value)
                {
                    OnAPP_KEYChanging(value);
                    ReportPropertyChanging("APP_KEY");
                    _APP_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("APP_KEY");
                    OnAPP_KEYChanged();
                }
            }
        }
        private global::System.Int32 _APP_KEY;
        partial void OnAPP_KEYChanging(global::System.Int32 value);
        partial void OnAPP_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String APP_DESC
        {
            get
            {
                return _APP_DESC;
            }
            set
            {
                OnAPP_DESCChanging(value);
                ReportPropertyChanging("APP_DESC");
                _APP_DESC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("APP_DESC");
                OnAPP_DESCChanged();
            }
        }
        private global::System.String _APP_DESC;
        partial void OnAPP_DESCChanging(global::System.String value);
        partial void OnAPP_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PRIORITY
        {
            get
            {
                return _PRIORITY;
            }
            set
            {
                OnPRIORITYChanging(value);
                ReportPropertyChanging("PRIORITY");
                _PRIORITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRIORITY");
                OnPRIORITYChanged();
            }
        }
        private Nullable<global::System.Int32> _PRIORITY;
        partial void OnPRIORITYChanging(Nullable<global::System.Int32> value);
        partial void OnPRIORITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATE_AND_APP_APPLICATION", "CATE_AND_APP")]
        public EntityCollection<CATE_AND_APP> CATE_AND_APP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATE_AND_APP>("ClassifyModel.FK_CATE_AND_APP_APPLICATION", "CATE_AND_APP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATE_AND_APP>("ClassifyModel.FK_CATE_AND_APP_APPLICATION", "CATE_AND_APP", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassifyModel", Name="CATE_AND_APP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATE_AND_APP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CATE_AND_APP object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static CATE_AND_APP CreateCATE_AND_APP(global::System.Int32 id)
        {
            CATE_AND_APP cATE_AND_APP = new CATE_AND_APP();
            cATE_AND_APP.ID = id;
            return cATE_AND_APP;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATE_AND_APP_APPLICATION", "APPLICATION")]
        public APPLICATION APPLICATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPLICATION>("ClassifyModel.FK_CATE_AND_APP_APPLICATION", "APPLICATION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPLICATION>("ClassifyModel.FK_CATE_AND_APP_APPLICATION", "APPLICATION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<APPLICATION> APPLICATIONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPLICATION>("ClassifyModel.FK_CATE_AND_APP_APPLICATION", "APPLICATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<APPLICATION>("ClassifyModel.FK_CATE_AND_APP_APPLICATION", "APPLICATION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATE_AND_APP_CATEGORY", "CATEGORY")]
        public CATEGORY CATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("ClassifyModel.FK_CATE_AND_APP_CATEGORY", "CATEGORY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("ClassifyModel.FK_CATE_AND_APP_CATEGORY", "CATEGORY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY> CATEGORYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("ClassifyModel.FK_CATE_AND_APP_CATEGORY", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY>("ClassifyModel.FK_CATE_AND_APP_CATEGORY", "CATEGORY", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassifyModel", Name="CATE_AND_CUS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATE_AND_CUS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CATE_AND_CUS object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="cIF">Initial value of the CIF property.</param>
        public static CATE_AND_CUS CreateCATE_AND_CUS(global::System.Int32 id, global::System.Int32 cIF)
        {
            CATE_AND_CUS cATE_AND_CUS = new CATE_AND_CUS();
            cATE_AND_CUS.ID = id;
            cATE_AND_CUS.CIF = cIF;
            return cATE_AND_CUS;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CIF
        {
            get
            {
                return _CIF;
            }
            set
            {
                OnCIFChanging(value);
                ReportPropertyChanging("CIF");
                _CIF = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CIF");
                OnCIFChanged();
            }
        }
        private global::System.Int32 _CIF;
        partial void OnCIFChanging(global::System.Int32 value);
        partial void OnCIFChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATE_AND_CUS_CATEGORY", "CATEGORY")]
        public CATEGORY CATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("ClassifyModel.FK_CATE_AND_CUS_CATEGORY", "CATEGORY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("ClassifyModel.FK_CATE_AND_CUS_CATEGORY", "CATEGORY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY> CATEGORYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("ClassifyModel.FK_CATE_AND_CUS_CATEGORY", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY>("ClassifyModel.FK_CATE_AND_CUS_CATEGORY", "CATEGORY", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassifyModel", Name="CATE_AND_EMP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATE_AND_EMP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CATE_AND_EMP object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static CATE_AND_EMP CreateCATE_AND_EMP(global::System.Int32 id)
        {
            CATE_AND_EMP cATE_AND_EMP = new CATE_AND_EMP();
            cATE_AND_EMP.ID = id;
            return cATE_AND_EMP;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HEAD_PRIORITY
        {
            get
            {
                return _HEAD_PRIORITY;
            }
            set
            {
                OnHEAD_PRIORITYChanging(value);
                ReportPropertyChanging("HEAD_PRIORITY");
                _HEAD_PRIORITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HEAD_PRIORITY");
                OnHEAD_PRIORITYChanged();
            }
        }
        private Nullable<global::System.Int32> _HEAD_PRIORITY;
        partial void OnHEAD_PRIORITYChanging(Nullable<global::System.Int32> value);
        partial void OnHEAD_PRIORITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATE_AND_EMP_CATEGORY", "CATEGORY")]
        public CATEGORY CATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("ClassifyModel.FK_CATE_AND_EMP_CATEGORY", "CATEGORY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("ClassifyModel.FK_CATE_AND_EMP_CATEGORY", "CATEGORY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY> CATEGORYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("ClassifyModel.FK_CATE_AND_EMP_CATEGORY", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY>("ClassifyModel.FK_CATE_AND_EMP_CATEGORY", "CATEGORY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATE_AND_EMP_USER_DATA", "USER_DATA")]
        public USER_DATA USER_DATA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USER_DATA>("ClassifyModel.FK_CATE_AND_EMP_USER_DATA", "USER_DATA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USER_DATA>("ClassifyModel.FK_CATE_AND_EMP_USER_DATA", "USER_DATA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<USER_DATA> USER_DATAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USER_DATA>("ClassifyModel.FK_CATE_AND_EMP_USER_DATA", "USER_DATA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<USER_DATA>("ClassifyModel.FK_CATE_AND_EMP_USER_DATA", "USER_DATA", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassifyModel", Name="CATE_AND_MENU")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATE_AND_MENU : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CATE_AND_MENU object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static CATE_AND_MENU CreateCATE_AND_MENU(global::System.Int32 id)
        {
            CATE_AND_MENU cATE_AND_MENU = new CATE_AND_MENU();
            cATE_AND_MENU.ID = id;
            return cATE_AND_MENU;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATE_AND_MENU_CATEGORY", "CATEGORY")]
        public CATEGORY CATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("ClassifyModel.FK_CATE_AND_MENU_CATEGORY", "CATEGORY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("ClassifyModel.FK_CATE_AND_MENU_CATEGORY", "CATEGORY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY> CATEGORYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("ClassifyModel.FK_CATE_AND_MENU_CATEGORY", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY>("ClassifyModel.FK_CATE_AND_MENU_CATEGORY", "CATEGORY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATE_AND_MENU_MENU_MASTER", "MENU_MASTER")]
        public MENU_MASTER MENU_MASTER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MENU_MASTER>("ClassifyModel.FK_CATE_AND_MENU_MENU_MASTER", "MENU_MASTER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MENU_MASTER>("ClassifyModel.FK_CATE_AND_MENU_MENU_MASTER", "MENU_MASTER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MENU_MASTER> MENU_MASTERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MENU_MASTER>("ClassifyModel.FK_CATE_AND_MENU_MENU_MASTER", "MENU_MASTER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MENU_MASTER>("ClassifyModel.FK_CATE_AND_MENU_MENU_MASTER", "MENU_MASTER", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassifyModel", Name="CATEGORY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATEGORY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CATEGORY object.
        /// </summary>
        /// <param name="cATEGORY_KEY">Initial value of the CATEGORY_KEY property.</param>
        public static CATEGORY CreateCATEGORY(global::System.Int32 cATEGORY_KEY)
        {
            CATEGORY cATEGORY = new CATEGORY();
            cATEGORY.CATEGORY_KEY = cATEGORY_KEY;
            return cATEGORY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CATEGORY_KEY
        {
            get
            {
                return _CATEGORY_KEY;
            }
            set
            {
                if (_CATEGORY_KEY != value)
                {
                    OnCATEGORY_KEYChanging(value);
                    ReportPropertyChanging("CATEGORY_KEY");
                    _CATEGORY_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CATEGORY_KEY");
                    OnCATEGORY_KEYChanged();
                }
            }
        }
        private global::System.Int32 _CATEGORY_KEY;
        partial void OnCATEGORY_KEYChanging(global::System.Int32 value);
        partial void OnCATEGORY_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_DESC
        {
            get
            {
                return _CATEGORY_DESC;
            }
            set
            {
                OnCATEGORY_DESCChanging(value);
                ReportPropertyChanging("CATEGORY_DESC");
                _CATEGORY_DESC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_DESC");
                OnCATEGORY_DESCChanged();
            }
        }
        private global::System.String _CATEGORY_DESC;
        partial void OnCATEGORY_DESCChanging(global::System.String value);
        partial void OnCATEGORY_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_DESC_TH
        {
            get
            {
                return _CATEGORY_DESC_TH;
            }
            set
            {
                OnCATEGORY_DESC_THChanging(value);
                ReportPropertyChanging("CATEGORY_DESC_TH");
                _CATEGORY_DESC_TH = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_DESC_TH");
                OnCATEGORY_DESC_THChanged();
            }
        }
        private global::System.String _CATEGORY_DESC_TH;
        partial void OnCATEGORY_DESC_THChanging(global::System.String value);
        partial void OnCATEGORY_DESC_THChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_VALUE
        {
            get
            {
                return _CATEGORY_VALUE;
            }
            set
            {
                OnCATEGORY_VALUEChanging(value);
                ReportPropertyChanging("CATEGORY_VALUE");
                _CATEGORY_VALUE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_VALUE");
                OnCATEGORY_VALUEChanged();
            }
        }
        private global::System.String _CATEGORY_VALUE;
        partial void OnCATEGORY_VALUEChanging(global::System.String value);
        partial void OnCATEGORY_VALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PRIORITY
        {
            get
            {
                return _PRIORITY;
            }
            set
            {
                OnPRIORITYChanging(value);
                ReportPropertyChanging("PRIORITY");
                _PRIORITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRIORITY");
                OnPRIORITYChanged();
            }
        }
        private Nullable<global::System.Int32> _PRIORITY;
        partial void OnPRIORITYChanging(Nullable<global::System.Int32> value);
        partial void OnPRIORITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATE_AND_APP_CATEGORY", "CATE_AND_APP")]
        public EntityCollection<CATE_AND_APP> CATE_AND_APP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATE_AND_APP>("ClassifyModel.FK_CATE_AND_APP_CATEGORY", "CATE_AND_APP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATE_AND_APP>("ClassifyModel.FK_CATE_AND_APP_CATEGORY", "CATE_AND_APP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATE_AND_CUS_CATEGORY", "CATE_AND_CUS")]
        public EntityCollection<CATE_AND_CUS> CATE_AND_CUS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATE_AND_CUS>("ClassifyModel.FK_CATE_AND_CUS_CATEGORY", "CATE_AND_CUS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATE_AND_CUS>("ClassifyModel.FK_CATE_AND_CUS_CATEGORY", "CATE_AND_CUS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATE_AND_EMP_CATEGORY", "CATE_AND_EMP")]
        public EntityCollection<CATE_AND_EMP> CATE_AND_EMP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATE_AND_EMP>("ClassifyModel.FK_CATE_AND_EMP_CATEGORY", "CATE_AND_EMP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATE_AND_EMP>("ClassifyModel.FK_CATE_AND_EMP_CATEGORY", "CATE_AND_EMP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATE_AND_MENU_CATEGORY", "CATE_AND_MENU")]
        public EntityCollection<CATE_AND_MENU> CATE_AND_MENU
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATE_AND_MENU>("ClassifyModel.FK_CATE_AND_MENU_CATEGORY", "CATE_AND_MENU");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATE_AND_MENU>("ClassifyModel.FK_CATE_AND_MENU_CATEGORY", "CATE_AND_MENU", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATEGORY_CATEGORY_TYPE", "CATEGORY_TYPE")]
        public CATEGORY_TYPE CATEGORY_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY_TYPE>("ClassifyModel.FK_CATEGORY_CATEGORY_TYPE", "CATEGORY_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY_TYPE>("ClassifyModel.FK_CATEGORY_CATEGORY_TYPE", "CATEGORY_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY_TYPE> CATEGORY_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY_TYPE>("ClassifyModel.FK_CATEGORY_CATEGORY_TYPE", "CATEGORY_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY_TYPE>("ClassifyModel.FK_CATEGORY_CATEGORY_TYPE", "CATEGORY_TYPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATEGORY_RECURSIVE_CATEGORY", "LINKED_CATEGORY")]
        public EntityCollection<LINKED_CATEGORY> LINKED_CATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LINKED_CATEGORY>("ClassifyModel.FK_CATEGORY_RECURSIVE_CATEGORY", "LINKED_CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LINKED_CATEGORY>("ClassifyModel.FK_CATEGORY_RECURSIVE_CATEGORY", "LINKED_CATEGORY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATEGORY_RECURSIVE_CATEGORY1", "LINKED_CATEGORY")]
        public EntityCollection<LINKED_CATEGORY> LINKED_CATEGORY1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LINKED_CATEGORY>("ClassifyModel.FK_CATEGORY_RECURSIVE_CATEGORY1", "LINKED_CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LINKED_CATEGORY>("ClassifyModel.FK_CATEGORY_RECURSIVE_CATEGORY1", "LINKED_CATEGORY", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassifyModel", Name="CATEGORY_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATEGORY_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CATEGORY_TYPE object.
        /// </summary>
        /// <param name="cATEGORY_TYPE_KEY">Initial value of the CATEGORY_TYPE_KEY property.</param>
        public static CATEGORY_TYPE CreateCATEGORY_TYPE(global::System.Int32 cATEGORY_TYPE_KEY)
        {
            CATEGORY_TYPE cATEGORY_TYPE = new CATEGORY_TYPE();
            cATEGORY_TYPE.CATEGORY_TYPE_KEY = cATEGORY_TYPE_KEY;
            return cATEGORY_TYPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CATEGORY_TYPE_KEY
        {
            get
            {
                return _CATEGORY_TYPE_KEY;
            }
            set
            {
                if (_CATEGORY_TYPE_KEY != value)
                {
                    OnCATEGORY_TYPE_KEYChanging(value);
                    ReportPropertyChanging("CATEGORY_TYPE_KEY");
                    _CATEGORY_TYPE_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CATEGORY_TYPE_KEY");
                    OnCATEGORY_TYPE_KEYChanged();
                }
            }
        }
        private global::System.Int32 _CATEGORY_TYPE_KEY;
        partial void OnCATEGORY_TYPE_KEYChanging(global::System.Int32 value);
        partial void OnCATEGORY_TYPE_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_TYPE_DESC
        {
            get
            {
                return _CATEGORY_TYPE_DESC;
            }
            set
            {
                OnCATEGORY_TYPE_DESCChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_DESC");
                _CATEGORY_TYPE_DESC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_TYPE_DESC");
                OnCATEGORY_TYPE_DESCChanged();
            }
        }
        private global::System.String _CATEGORY_TYPE_DESC;
        partial void OnCATEGORY_TYPE_DESCChanging(global::System.String value);
        partial void OnCATEGORY_TYPE_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_TYPE_DESC_TH
        {
            get
            {
                return _CATEGORY_TYPE_DESC_TH;
            }
            set
            {
                OnCATEGORY_TYPE_DESC_THChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_DESC_TH");
                _CATEGORY_TYPE_DESC_TH = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_TYPE_DESC_TH");
                OnCATEGORY_TYPE_DESC_THChanged();
            }
        }
        private global::System.String _CATEGORY_TYPE_DESC_TH;
        partial void OnCATEGORY_TYPE_DESC_THChanging(global::System.String value);
        partial void OnCATEGORY_TYPE_DESC_THChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_TYPE_VALUE
        {
            get
            {
                return _CATEGORY_TYPE_VALUE;
            }
            set
            {
                OnCATEGORY_TYPE_VALUEChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_VALUE");
                _CATEGORY_TYPE_VALUE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_TYPE_VALUE");
                OnCATEGORY_TYPE_VALUEChanged();
            }
        }
        private global::System.String _CATEGORY_TYPE_VALUE;
        partial void OnCATEGORY_TYPE_VALUEChanging(global::System.String value);
        partial void OnCATEGORY_TYPE_VALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PRIORITY
        {
            get
            {
                return _PRIORITY;
            }
            set
            {
                OnPRIORITYChanging(value);
                ReportPropertyChanging("PRIORITY");
                _PRIORITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRIORITY");
                OnPRIORITYChanged();
            }
        }
        private Nullable<global::System.Int32> _PRIORITY;
        partial void OnPRIORITYChanging(Nullable<global::System.Int32> value);
        partial void OnPRIORITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATEGORY_CATEGORY_TYPE", "CATEGORY")]
        public EntityCollection<CATEGORY> CATEGORies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATEGORY>("ClassifyModel.FK_CATEGORY_CATEGORY_TYPE", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATEGORY>("ClassifyModel.FK_CATEGORY_CATEGORY_TYPE", "CATEGORY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_TYPE", "LINKED_CATEGORY_TYPE")]
        public EntityCollection<LINKED_CATEGORY_TYPE> LINKED_CATEGORY_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LINKED_CATEGORY_TYPE>("ClassifyModel.FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_TYPE", "LINKED_CATEGORY_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LINKED_CATEGORY_TYPE>("ClassifyModel.FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_TYPE", "LINKED_CATEGORY_TYPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_TYPE1", "LINKED_CATEGORY_TYPE")]
        public EntityCollection<LINKED_CATEGORY_TYPE> LINKED_CATEGORY_TYPE1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LINKED_CATEGORY_TYPE>("ClassifyModel.FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_TYPE1", "LINKED_CATEGORY_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LINKED_CATEGORY_TYPE>("ClassifyModel.FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_TYPE1", "LINKED_CATEGORY_TYPE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassifyModel", Name="LINKED_CATEGORY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LINKED_CATEGORY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LINKED_CATEGORY object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static LINKED_CATEGORY CreateLINKED_CATEGORY(global::System.Int32 id)
        {
            LINKED_CATEGORY lINKED_CATEGORY = new LINKED_CATEGORY();
            lINKED_CATEGORY.ID = id;
            return lINKED_CATEGORY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATEGORY_RECURSIVE_CATEGORY", "CATEGORY")]
        public CATEGORY CATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("ClassifyModel.FK_CATEGORY_RECURSIVE_CATEGORY", "CATEGORY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("ClassifyModel.FK_CATEGORY_RECURSIVE_CATEGORY", "CATEGORY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY> CATEGORYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("ClassifyModel.FK_CATEGORY_RECURSIVE_CATEGORY", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY>("ClassifyModel.FK_CATEGORY_RECURSIVE_CATEGORY", "CATEGORY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATEGORY_RECURSIVE_CATEGORY1", "CATEGORY")]
        public CATEGORY CATEGORY1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("ClassifyModel.FK_CATEGORY_RECURSIVE_CATEGORY1", "CATEGORY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("ClassifyModel.FK_CATEGORY_RECURSIVE_CATEGORY1", "CATEGORY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY> CATEGORY1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("ClassifyModel.FK_CATEGORY_RECURSIVE_CATEGORY1", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY>("ClassifyModel.FK_CATEGORY_RECURSIVE_CATEGORY1", "CATEGORY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATEGORY_RECURSIVE_CATEGORY_RECURSIVE_TYPE", "LINKED_TYPE")]
        public LINKED_TYPE LINKED_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LINKED_TYPE>("ClassifyModel.FK_CATEGORY_RECURSIVE_CATEGORY_RECURSIVE_TYPE", "LINKED_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LINKED_TYPE>("ClassifyModel.FK_CATEGORY_RECURSIVE_CATEGORY_RECURSIVE_TYPE", "LINKED_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LINKED_TYPE> LINKED_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LINKED_TYPE>("ClassifyModel.FK_CATEGORY_RECURSIVE_CATEGORY_RECURSIVE_TYPE", "LINKED_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LINKED_TYPE>("ClassifyModel.FK_CATEGORY_RECURSIVE_CATEGORY_RECURSIVE_TYPE", "LINKED_TYPE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassifyModel", Name="LINKED_CATEGORY_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LINKED_CATEGORY_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LINKED_CATEGORY_TYPE object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static LINKED_CATEGORY_TYPE CreateLINKED_CATEGORY_TYPE(global::System.Int32 id)
        {
            LINKED_CATEGORY_TYPE lINKED_CATEGORY_TYPE = new LINKED_CATEGORY_TYPE();
            lINKED_CATEGORY_TYPE.ID = id;
            return lINKED_CATEGORY_TYPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_TYPE", "CATEGORY_TYPE")]
        public CATEGORY_TYPE CATEGORY_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY_TYPE>("ClassifyModel.FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_TYPE", "CATEGORY_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY_TYPE>("ClassifyModel.FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_TYPE", "CATEGORY_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY_TYPE> CATEGORY_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY_TYPE>("ClassifyModel.FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_TYPE", "CATEGORY_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY_TYPE>("ClassifyModel.FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_TYPE", "CATEGORY_TYPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_TYPE1", "CATEGORY_TYPE")]
        public CATEGORY_TYPE CATEGORY_TYPE1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY_TYPE>("ClassifyModel.FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_TYPE1", "CATEGORY_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY_TYPE>("ClassifyModel.FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_TYPE1", "CATEGORY_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY_TYPE> CATEGORY_TYPE1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY_TYPE>("ClassifyModel.FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_TYPE1", "CATEGORY_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY_TYPE>("ClassifyModel.FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_TYPE1", "CATEGORY_TYPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_RECURSIVE_TYPE", "LINKED_TYPE")]
        public LINKED_TYPE LINKED_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LINKED_TYPE>("ClassifyModel.FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_RECURSIVE_TYPE", "LINKED_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LINKED_TYPE>("ClassifyModel.FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_RECURSIVE_TYPE", "LINKED_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LINKED_TYPE> LINKED_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LINKED_TYPE>("ClassifyModel.FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_RECURSIVE_TYPE", "LINKED_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LINKED_TYPE>("ClassifyModel.FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_RECURSIVE_TYPE", "LINKED_TYPE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassifyModel", Name="LINKED_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LINKED_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LINKED_TYPE object.
        /// </summary>
        /// <param name="lINKED_TYPE_KEY">Initial value of the LINKED_TYPE_KEY property.</param>
        /// <param name="dESCRIPTION">Initial value of the DESCRIPTION property.</param>
        public static LINKED_TYPE CreateLINKED_TYPE(global::System.Int32 lINKED_TYPE_KEY, global::System.String dESCRIPTION)
        {
            LINKED_TYPE lINKED_TYPE = new LINKED_TYPE();
            lINKED_TYPE.LINKED_TYPE_KEY = lINKED_TYPE_KEY;
            lINKED_TYPE.DESCRIPTION = dESCRIPTION;
            return lINKED_TYPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LINKED_TYPE_KEY
        {
            get
            {
                return _LINKED_TYPE_KEY;
            }
            set
            {
                if (_LINKED_TYPE_KEY != value)
                {
                    OnLINKED_TYPE_KEYChanging(value);
                    ReportPropertyChanging("LINKED_TYPE_KEY");
                    _LINKED_TYPE_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LINKED_TYPE_KEY");
                    OnLINKED_TYPE_KEYChanged();
                }
            }
        }
        private global::System.Int32 _LINKED_TYPE_KEY;
        partial void OnLINKED_TYPE_KEYChanging(global::System.Int32 value);
        partial void OnLINKED_TYPE_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATEGORY_RECURSIVE_CATEGORY_RECURSIVE_TYPE", "LINKED_CATEGORY")]
        public EntityCollection<LINKED_CATEGORY> LINKED_CATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LINKED_CATEGORY>("ClassifyModel.FK_CATEGORY_RECURSIVE_CATEGORY_RECURSIVE_TYPE", "LINKED_CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LINKED_CATEGORY>("ClassifyModel.FK_CATEGORY_RECURSIVE_CATEGORY_RECURSIVE_TYPE", "LINKED_CATEGORY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_RECURSIVE_TYPE", "LINKED_CATEGORY_TYPE")]
        public EntityCollection<LINKED_CATEGORY_TYPE> LINKED_CATEGORY_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LINKED_CATEGORY_TYPE>("ClassifyModel.FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_RECURSIVE_TYPE", "LINKED_CATEGORY_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LINKED_CATEGORY_TYPE>("ClassifyModel.FK_CATEGORY_TYPE_RECURSIVE_CATEGORY_RECURSIVE_TYPE", "LINKED_CATEGORY_TYPE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassifyModel", Name="MASTER_EMPLOYEE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MASTER_EMPLOYEE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MASTER_EMPLOYEE object.
        /// </summary>
        /// <param name="eMP_ID">Initial value of the EMP_ID property.</param>
        public static MASTER_EMPLOYEE CreateMASTER_EMPLOYEE(global::System.String eMP_ID)
        {
            MASTER_EMPLOYEE mASTER_EMPLOYEE = new MASTER_EMPLOYEE();
            mASTER_EMPLOYEE.EMP_ID = eMP_ID;
            return mASTER_EMPLOYEE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMP_ID
        {
            get
            {
                return _EMP_ID;
            }
            set
            {
                if (_EMP_ID != value)
                {
                    OnEMP_IDChanging(value);
                    ReportPropertyChanging("EMP_ID");
                    _EMP_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EMP_ID");
                    OnEMP_IDChanged();
                }
            }
        }
        private global::System.String _EMP_ID;
        partial void OnEMP_IDChanging(global::System.String value);
        partial void OnEMP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IEMPID
        {
            get
            {
                return _IEMPID;
            }
            set
            {
                OnIEMPIDChanging(value);
                ReportPropertyChanging("IEMPID");
                _IEMPID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IEMPID");
                OnIEMPIDChanged();
            }
        }
        private Nullable<global::System.Int32> _IEMPID;
        partial void OnIEMPIDChanging(Nullable<global::System.Int32> value);
        partial void OnIEMPIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NTTITLE
        {
            get
            {
                return _NTTITLE;
            }
            set
            {
                OnNTTITLEChanging(value);
                ReportPropertyChanging("NTTITLE");
                _NTTITLE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NTTITLE");
                OnNTTITLEChanged();
            }
        }
        private global::System.String _NTTITLE;
        partial void OnNTTITLEChanging(global::System.String value);
        partial void OnNTTITLEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NTNAME
        {
            get
            {
                return _NTNAME;
            }
            set
            {
                OnNTNAMEChanging(value);
                ReportPropertyChanging("NTNAME");
                _NTNAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NTNAME");
                OnNTNAMEChanged();
            }
        }
        private global::System.String _NTNAME;
        partial void OnNTNAMEChanging(global::System.String value);
        partial void OnNTNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NTSURN
        {
            get
            {
                return _NTSURN;
            }
            set
            {
                OnNTSURNChanging(value);
                ReportPropertyChanging("NTSURN");
                _NTSURN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NTSURN");
                OnNTSURNChanged();
            }
        }
        private global::System.String _NTSURN;
        partial void OnNTSURNChanging(global::System.String value);
        partial void OnNTSURNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EEPOSIT
        {
            get
            {
                return _EEPOSIT;
            }
            set
            {
                OnEEPOSITChanging(value);
                ReportPropertyChanging("EEPOSIT");
                _EEPOSIT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EEPOSIT");
                OnEEPOSITChanged();
            }
        }
        private global::System.String _EEPOSIT;
        partial void OnEEPOSITChanging(global::System.String value);
        partial void OnEEPOSITChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EESECTION
        {
            get
            {
                return _EESECTION;
            }
            set
            {
                OnEESECTIONChanging(value);
                ReportPropertyChanging("EESECTION");
                _EESECTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EESECTION");
                OnEESECTIONChanged();
            }
        }
        private global::System.String _EESECTION;
        partial void OnEESECTIONChanging(global::System.String value);
        partial void OnEESECTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EEDEPT
        {
            get
            {
                return _EEDEPT;
            }
            set
            {
                OnEEDEPTChanging(value);
                ReportPropertyChanging("EEDEPT");
                _EEDEPT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EEDEPT");
                OnEEDEPTChanged();
            }
        }
        private global::System.String _EEDEPT;
        partial void OnEEDEPTChanging(global::System.String value);
        partial void OnEEDEPTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NETITLE
        {
            get
            {
                return _NETITLE;
            }
            set
            {
                OnNETITLEChanging(value);
                ReportPropertyChanging("NETITLE");
                _NETITLE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NETITLE");
                OnNETITLEChanged();
            }
        }
        private global::System.String _NETITLE;
        partial void OnNETITLEChanging(global::System.String value);
        partial void OnNETITLEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NENAME
        {
            get
            {
                return _NENAME;
            }
            set
            {
                OnNENAMEChanging(value);
                ReportPropertyChanging("NENAME");
                _NENAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NENAME");
                OnNENAMEChanged();
            }
        }
        private global::System.String _NENAME;
        partial void OnNENAMEChanging(global::System.String value);
        partial void OnNENAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NESURN
        {
            get
            {
                return _NESURN;
            }
            set
            {
                OnNESURNChanging(value);
                ReportPropertyChanging("NESURN");
                _NESURN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NESURN");
                OnNESURNChanged();
            }
        }
        private global::System.String _NESURN;
        partial void OnNESURNChanging(global::System.String value);
        partial void OnNESURNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EEPOSITE
        {
            get
            {
                return _EEPOSITE;
            }
            set
            {
                OnEEPOSITEChanging(value);
                ReportPropertyChanging("EEPOSITE");
                _EEPOSITE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EEPOSITE");
                OnEEPOSITEChanged();
            }
        }
        private global::System.String _EEPOSITE;
        partial void OnEEPOSITEChanging(global::System.String value);
        partial void OnEEPOSITEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EESECTIONE
        {
            get
            {
                return _EESECTIONE;
            }
            set
            {
                OnEESECTIONEChanging(value);
                ReportPropertyChanging("EESECTIONE");
                _EESECTIONE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EESECTIONE");
                OnEESECTIONEChanged();
            }
        }
        private global::System.String _EESECTIONE;
        partial void OnEESECTIONEChanging(global::System.String value);
        partial void OnEESECTIONEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EEDEPE
        {
            get
            {
                return _EEDEPE;
            }
            set
            {
                OnEEDEPEChanging(value);
                ReportPropertyChanging("EEDEPE");
                _EEDEPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EEDEPE");
                OnEEDEPEChanged();
            }
        }
        private global::System.String _EEDEPE;
        partial void OnEEDEPEChanging(global::System.String value);
        partial void OnEEDEPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String POSITION
        {
            get
            {
                return _POSITION;
            }
            set
            {
                OnPOSITIONChanging(value);
                ReportPropertyChanging("POSITION");
                _POSITION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("POSITION");
                OnPOSITIONChanged();
            }
        }
        private global::System.String _POSITION;
        partial void OnPOSITIONChanging(global::System.String value);
        partial void OnPOSITIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String POSITION_CODE
        {
            get
            {
                return _POSITION_CODE;
            }
            set
            {
                OnPOSITION_CODEChanging(value);
                ReportPropertyChanging("POSITION_CODE");
                _POSITION_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("POSITION_CODE");
                OnPOSITION_CODEChanged();
            }
        }
        private global::System.String _POSITION_CODE;
        partial void OnPOSITION_CODEChanging(global::System.String value);
        partial void OnPOSITION_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IESECTION
        {
            get
            {
                return _IESECTION;
            }
            set
            {
                OnIESECTIONChanging(value);
                ReportPropertyChanging("IESECTION");
                _IESECTION = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IESECTION");
                OnIESECTIONChanged();
            }
        }
        private global::System.String _IESECTION;
        partial void OnIESECTIONChanging(global::System.String value);
        partial void OnIESECTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PHONE_OFFICE
        {
            get
            {
                return _PHONE_OFFICE;
            }
            set
            {
                OnPHONE_OFFICEChanging(value);
                ReportPropertyChanging("PHONE_OFFICE");
                _PHONE_OFFICE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PHONE_OFFICE");
                OnPHONE_OFFICEChanged();
            }
        }
        private global::System.String _PHONE_OFFICE;
        partial void OnPHONE_OFFICEChanging(global::System.String value);
        partial void OnPHONE_OFFICEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMAIL
        {
            get
            {
                return _EMAIL;
            }
            set
            {
                OnEMAILChanging(value);
                ReportPropertyChanging("EMAIL");
                _EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMAIL");
                OnEMAILChanged();
            }
        }
        private global::System.String _EMAIL;
        partial void OnEMAILChanging(global::System.String value);
        partial void OnEMAILChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassifyModel", Name="MENU_MASTER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MENU_MASTER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MENU_MASTER object.
        /// </summary>
        /// <param name="mENU_KEY">Initial value of the MENU_KEY property.</param>
        public static MENU_MASTER CreateMENU_MASTER(global::System.Int32 mENU_KEY)
        {
            MENU_MASTER mENU_MASTER = new MENU_MASTER();
            mENU_MASTER.MENU_KEY = mENU_KEY;
            return mENU_MASTER;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MENU_KEY
        {
            get
            {
                return _MENU_KEY;
            }
            set
            {
                if (_MENU_KEY != value)
                {
                    OnMENU_KEYChanging(value);
                    ReportPropertyChanging("MENU_KEY");
                    _MENU_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MENU_KEY");
                    OnMENU_KEYChanged();
                }
            }
        }
        private global::System.Int32 _MENU_KEY;
        partial void OnMENU_KEYChanging(global::System.Int32 value);
        partial void OnMENU_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MENU_TITLE
        {
            get
            {
                return _MENU_TITLE;
            }
            set
            {
                OnMENU_TITLEChanging(value);
                ReportPropertyChanging("MENU_TITLE");
                _MENU_TITLE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MENU_TITLE");
                OnMENU_TITLEChanged();
            }
        }
        private global::System.String _MENU_TITLE;
        partial void OnMENU_TITLEChanging(global::System.String value);
        partial void OnMENU_TITLEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MENU_URL
        {
            get
            {
                return _MENU_URL;
            }
            set
            {
                OnMENU_URLChanging(value);
                ReportPropertyChanging("MENU_URL");
                _MENU_URL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MENU_URL");
                OnMENU_URLChanged();
            }
        }
        private global::System.String _MENU_URL;
        partial void OnMENU_URLChanging(global::System.String value);
        partial void OnMENU_URLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MENU_POPUP_OPT
        {
            get
            {
                return _MENU_POPUP_OPT;
            }
            set
            {
                OnMENU_POPUP_OPTChanging(value);
                ReportPropertyChanging("MENU_POPUP_OPT");
                _MENU_POPUP_OPT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MENU_POPUP_OPT");
                OnMENU_POPUP_OPTChanged();
            }
        }
        private global::System.String _MENU_POPUP_OPT;
        partial void OnMENU_POPUP_OPTChanging(global::System.String value);
        partial void OnMENU_POPUP_OPTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MENU_REL
        {
            get
            {
                return _MENU_REL;
            }
            set
            {
                OnMENU_RELChanging(value);
                ReportPropertyChanging("MENU_REL");
                _MENU_REL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MENU_REL");
                OnMENU_RELChanged();
            }
        }
        private global::System.String _MENU_REL;
        partial void OnMENU_RELChanging(global::System.String value);
        partial void OnMENU_RELChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MENU_TOOLTIP
        {
            get
            {
                return _MENU_TOOLTIP;
            }
            set
            {
                OnMENU_TOOLTIPChanging(value);
                ReportPropertyChanging("MENU_TOOLTIP");
                _MENU_TOOLTIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MENU_TOOLTIP");
                OnMENU_TOOLTIPChanged();
            }
        }
        private global::System.String _MENU_TOOLTIP;
        partial void OnMENU_TOOLTIPChanging(global::System.String value);
        partial void OnMENU_TOOLTIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MENU_PRIORITY
        {
            get
            {
                return _MENU_PRIORITY;
            }
            set
            {
                OnMENU_PRIORITYChanging(value);
                ReportPropertyChanging("MENU_PRIORITY");
                _MENU_PRIORITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MENU_PRIORITY");
                OnMENU_PRIORITYChanged();
            }
        }
        private Nullable<global::System.Int32> _MENU_PRIORITY;
        partial void OnMENU_PRIORITYChanging(Nullable<global::System.Int32> value);
        partial void OnMENU_PRIORITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> MENU_DEL_FLAG
        {
            get
            {
                return _MENU_DEL_FLAG;
            }
            set
            {
                OnMENU_DEL_FLAGChanging(value);
                ReportPropertyChanging("MENU_DEL_FLAG");
                _MENU_DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MENU_DEL_FLAG");
                OnMENU_DEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _MENU_DEL_FLAG;
        partial void OnMENU_DEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnMENU_DEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATE_AND_MENU_MENU_MASTER", "CATE_AND_MENU")]
        public EntityCollection<CATE_AND_MENU> CATE_AND_MENU
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATE_AND_MENU>("ClassifyModel.FK_CATE_AND_MENU_MENU_MASTER", "CATE_AND_MENU");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATE_AND_MENU>("ClassifyModel.FK_CATE_AND_MENU_MENU_MASTER", "CATE_AND_MENU", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_MENU_MASTER_MENU_MASTER", "MENU_MASTER1")]
        public EntityCollection<MENU_MASTER> MENU_MASTER1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MENU_MASTER>("ClassifyModel.FK_MENU_MASTER_MENU_MASTER", "MENU_MASTER1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MENU_MASTER>("ClassifyModel.FK_MENU_MASTER_MENU_MASTER", "MENU_MASTER1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_MENU_MASTER_MENU_MASTER", "MENU_MASTER")]
        public MENU_MASTER MENU_MASTER2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MENU_MASTER>("ClassifyModel.FK_MENU_MASTER_MENU_MASTER", "MENU_MASTER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MENU_MASTER>("ClassifyModel.FK_MENU_MASTER_MENU_MASTER", "MENU_MASTER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MENU_MASTER> MENU_MASTER2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MENU_MASTER>("ClassifyModel.FK_MENU_MASTER_MENU_MASTER", "MENU_MASTER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MENU_MASTER>("ClassifyModel.FK_MENU_MASTER_MENU_MASTER", "MENU_MASTER", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassifyModel", Name="USER_DATA")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class USER_DATA : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new USER_DATA object.
        /// </summary>
        /// <param name="eMP_ID">Initial value of the EMP_ID property.</param>
        /// <param name="eMP_TITLE">Initial value of the EMP_TITLE property.</param>
        /// <param name="eMP_NAME">Initial value of the EMP_NAME property.</param>
        /// <param name="eMP_SURNAME">Initial value of the EMP_SURNAME property.</param>
        public static USER_DATA CreateUSER_DATA(global::System.String eMP_ID, global::System.String eMP_TITLE, global::System.String eMP_NAME, global::System.String eMP_SURNAME)
        {
            USER_DATA uSER_DATA = new USER_DATA();
            uSER_DATA.EMP_ID = eMP_ID;
            uSER_DATA.EMP_TITLE = eMP_TITLE;
            uSER_DATA.EMP_NAME = eMP_NAME;
            uSER_DATA.EMP_SURNAME = eMP_SURNAME;
            return uSER_DATA;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMP_ID
        {
            get
            {
                return _EMP_ID;
            }
            set
            {
                if (_EMP_ID != value)
                {
                    OnEMP_IDChanging(value);
                    ReportPropertyChanging("EMP_ID");
                    _EMP_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EMP_ID");
                    OnEMP_IDChanged();
                }
            }
        }
        private global::System.String _EMP_ID;
        partial void OnEMP_IDChanging(global::System.String value);
        partial void OnEMP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMP_TITLE
        {
            get
            {
                return _EMP_TITLE;
            }
            set
            {
                OnEMP_TITLEChanging(value);
                ReportPropertyChanging("EMP_TITLE");
                _EMP_TITLE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EMP_TITLE");
                OnEMP_TITLEChanged();
            }
        }
        private global::System.String _EMP_TITLE;
        partial void OnEMP_TITLEChanging(global::System.String value);
        partial void OnEMP_TITLEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMP_NAME
        {
            get
            {
                return _EMP_NAME;
            }
            set
            {
                OnEMP_NAMEChanging(value);
                ReportPropertyChanging("EMP_NAME");
                _EMP_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EMP_NAME");
                OnEMP_NAMEChanged();
            }
        }
        private global::System.String _EMP_NAME;
        partial void OnEMP_NAMEChanging(global::System.String value);
        partial void OnEMP_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMP_SURNAME
        {
            get
            {
                return _EMP_SURNAME;
            }
            set
            {
                OnEMP_SURNAMEChanging(value);
                ReportPropertyChanging("EMP_SURNAME");
                _EMP_SURNAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EMP_SURNAME");
                OnEMP_SURNAMEChanged();
            }
        }
        private global::System.String _EMP_SURNAME;
        partial void OnEMP_SURNAMEChanging(global::System.String value);
        partial void OnEMP_SURNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMP_TITLE_E
        {
            get
            {
                return _EMP_TITLE_E;
            }
            set
            {
                OnEMP_TITLE_EChanging(value);
                ReportPropertyChanging("EMP_TITLE_E");
                _EMP_TITLE_E = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMP_TITLE_E");
                OnEMP_TITLE_EChanged();
            }
        }
        private global::System.String _EMP_TITLE_E;
        partial void OnEMP_TITLE_EChanging(global::System.String value);
        partial void OnEMP_TITLE_EChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMP_NAME_E
        {
            get
            {
                return _EMP_NAME_E;
            }
            set
            {
                OnEMP_NAME_EChanging(value);
                ReportPropertyChanging("EMP_NAME_E");
                _EMP_NAME_E = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMP_NAME_E");
                OnEMP_NAME_EChanged();
            }
        }
        private global::System.String _EMP_NAME_E;
        partial void OnEMP_NAME_EChanging(global::System.String value);
        partial void OnEMP_NAME_EChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMP_SURNAME_E
        {
            get
            {
                return _EMP_SURNAME_E;
            }
            set
            {
                OnEMP_SURNAME_EChanging(value);
                ReportPropertyChanging("EMP_SURNAME_E");
                _EMP_SURNAME_E = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMP_SURNAME_E");
                OnEMP_SURNAME_EChanged();
            }
        }
        private global::System.String _EMP_SURNAME_E;
        partial void OnEMP_SURNAME_EChanging(global::System.String value);
        partial void OnEMP_SURNAME_EChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PASSWD
        {
            get
            {
                return _PASSWD;
            }
            set
            {
                OnPASSWDChanging(value);
                ReportPropertyChanging("PASSWD");
                _PASSWD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PASSWD");
                OnPASSWDChanged();
            }
        }
        private global::System.String _PASSWD;
        partial void OnPASSWDChanging(global::System.String value);
        partial void OnPASSWDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMAIL
        {
            get
            {
                return _EMAIL;
            }
            set
            {
                OnEMAILChanging(value);
                ReportPropertyChanging("EMAIL");
                _EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMAIL");
                OnEMAILChanged();
            }
        }
        private global::System.String _EMAIL;
        partial void OnEMAILChanging(global::System.String value);
        partial void OnEMAILChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PHONE_OFFICE
        {
            get
            {
                return _PHONE_OFFICE;
            }
            set
            {
                OnPHONE_OFFICEChanging(value);
                ReportPropertyChanging("PHONE_OFFICE");
                _PHONE_OFFICE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PHONE_OFFICE");
                OnPHONE_OFFICEChanged();
            }
        }
        private global::System.String _PHONE_OFFICE;
        partial void OnPHONE_OFFICEChanging(global::System.String value);
        partial void OnPHONE_OFFICEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PHONE_HOME
        {
            get
            {
                return _PHONE_HOME;
            }
            set
            {
                OnPHONE_HOMEChanging(value);
                ReportPropertyChanging("PHONE_HOME");
                _PHONE_HOME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PHONE_HOME");
                OnPHONE_HOMEChanged();
            }
        }
        private global::System.String _PHONE_HOME;
        partial void OnPHONE_HOMEChanging(global::System.String value);
        partial void OnPHONE_HOMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PHONE_MOBILE
        {
            get
            {
                return _PHONE_MOBILE;
            }
            set
            {
                OnPHONE_MOBILEChanging(value);
                ReportPropertyChanging("PHONE_MOBILE");
                _PHONE_MOBILE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PHONE_MOBILE");
                OnPHONE_MOBILEChanged();
            }
        }
        private global::System.String _PHONE_MOBILE;
        partial void OnPHONE_MOBILEChanging(global::System.String value);
        partial void OnPHONE_MOBILEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CREATE_DATE
        {
            get
            {
                return _CREATE_DATE;
            }
            set
            {
                OnCREATE_DATEChanging(value);
                ReportPropertyChanging("CREATE_DATE");
                _CREATE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CREATE_DATE");
                OnCREATE_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _CREATE_DATE;
        partial void OnCREATE_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnCREATE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EXPIRE_DATE
        {
            get
            {
                return _EXPIRE_DATE;
            }
            set
            {
                OnEXPIRE_DATEChanging(value);
                ReportPropertyChanging("EXPIRE_DATE");
                _EXPIRE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EXPIRE_DATE");
                OnEXPIRE_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _EXPIRE_DATE;
        partial void OnEXPIRE_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnEXPIRE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UPDATE_DATE
        {
            get
            {
                return _UPDATE_DATE;
            }
            set
            {
                OnUPDATE_DATEChanging(value);
                ReportPropertyChanging("UPDATE_DATE");
                _UPDATE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UPDATE_DATE");
                OnUPDATE_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _UPDATE_DATE;
        partial void OnUPDATE_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnUPDATE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LAST_SIGN_ON_DATE
        {
            get
            {
                return _LAST_SIGN_ON_DATE;
            }
            set
            {
                OnLAST_SIGN_ON_DATEChanging(value);
                ReportPropertyChanging("LAST_SIGN_ON_DATE");
                _LAST_SIGN_ON_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAST_SIGN_ON_DATE");
                OnLAST_SIGN_ON_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _LAST_SIGN_ON_DATE;
        partial void OnLAST_SIGN_ON_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnLAST_SIGN_ON_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LAST_CHANGE_PASS_DATE
        {
            get
            {
                return _LAST_CHANGE_PASS_DATE;
            }
            set
            {
                OnLAST_CHANGE_PASS_DATEChanging(value);
                ReportPropertyChanging("LAST_CHANGE_PASS_DATE");
                _LAST_CHANGE_PASS_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAST_CHANGE_PASS_DATE");
                OnLAST_CHANGE_PASS_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _LAST_CHANGE_PASS_DATE;
        partial void OnLAST_CHANGE_PASS_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnLAST_CHANGE_PASS_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ClassifyModel", "FK_CATE_AND_EMP_USER_DATA", "CATE_AND_EMP")]
        public EntityCollection<CATE_AND_EMP> CATE_AND_EMP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATE_AND_EMP>("ClassifyModel.FK_CATE_AND_EMP_USER_DATA", "CATE_AND_EMP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATE_AND_EMP>("ClassifyModel.FK_CATE_AND_EMP_USER_DATA", "CATE_AND_EMP", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassifyModel", Name="V_001_EXPANDED_CATEGORY_TYPE_1")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_001_EXPANDED_CATEGORY_TYPE_1 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_001_EXPANDED_CATEGORY_TYPE_1 object.
        /// </summary>
        /// <param name="sEARCH_CATEGORY_KEY">Initial value of the SEARCH_CATEGORY_KEY property.</param>
        /// <param name="eXPANDED_CATEGORY_KEY">Initial value of the EXPANDED_CATEGORY_KEY property.</param>
        public static V_001_EXPANDED_CATEGORY_TYPE_1 CreateV_001_EXPANDED_CATEGORY_TYPE_1(global::System.Int32 sEARCH_CATEGORY_KEY, global::System.Int32 eXPANDED_CATEGORY_KEY)
        {
            V_001_EXPANDED_CATEGORY_TYPE_1 v_001_EXPANDED_CATEGORY_TYPE_1 = new V_001_EXPANDED_CATEGORY_TYPE_1();
            v_001_EXPANDED_CATEGORY_TYPE_1.SEARCH_CATEGORY_KEY = sEARCH_CATEGORY_KEY;
            v_001_EXPANDED_CATEGORY_TYPE_1.EXPANDED_CATEGORY_KEY = eXPANDED_CATEGORY_KEY;
            return v_001_EXPANDED_CATEGORY_TYPE_1;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SEARCH_CATEGORY_KEY
        {
            get
            {
                return _SEARCH_CATEGORY_KEY;
            }
            set
            {
                if (_SEARCH_CATEGORY_KEY != value)
                {
                    OnSEARCH_CATEGORY_KEYChanging(value);
                    ReportPropertyChanging("SEARCH_CATEGORY_KEY");
                    _SEARCH_CATEGORY_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SEARCH_CATEGORY_KEY");
                    OnSEARCH_CATEGORY_KEYChanged();
                }
            }
        }
        private global::System.Int32 _SEARCH_CATEGORY_KEY;
        partial void OnSEARCH_CATEGORY_KEYChanging(global::System.Int32 value);
        partial void OnSEARCH_CATEGORY_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EXPANDED_CATEGORY_KEY
        {
            get
            {
                return _EXPANDED_CATEGORY_KEY;
            }
            set
            {
                if (_EXPANDED_CATEGORY_KEY != value)
                {
                    OnEXPANDED_CATEGORY_KEYChanging(value);
                    ReportPropertyChanging("EXPANDED_CATEGORY_KEY");
                    _EXPANDED_CATEGORY_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EXPANDED_CATEGORY_KEY");
                    OnEXPANDED_CATEGORY_KEYChanged();
                }
            }
        }
        private global::System.Int32 _EXPANDED_CATEGORY_KEY;
        partial void OnEXPANDED_CATEGORY_KEYChanging(global::System.Int32 value);
        partial void OnEXPANDED_CATEGORY_KEYChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassifyModel", Name="V_002_CATEGORY_MAP_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_002_CATEGORY_MAP_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_002_CATEGORY_MAP_TYPE object.
        /// </summary>
        /// <param name="cATEGORY_KEY">Initial value of the CATEGORY_KEY property.</param>
        /// <param name="cATEGORY_TYPE_KEY">Initial value of the CATEGORY_TYPE_KEY property.</param>
        public static V_002_CATEGORY_MAP_TYPE CreateV_002_CATEGORY_MAP_TYPE(global::System.Int32 cATEGORY_KEY, global::System.Int32 cATEGORY_TYPE_KEY)
        {
            V_002_CATEGORY_MAP_TYPE v_002_CATEGORY_MAP_TYPE = new V_002_CATEGORY_MAP_TYPE();
            v_002_CATEGORY_MAP_TYPE.CATEGORY_KEY = cATEGORY_KEY;
            v_002_CATEGORY_MAP_TYPE.CATEGORY_TYPE_KEY = cATEGORY_TYPE_KEY;
            return v_002_CATEGORY_MAP_TYPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CATEGORY_KEY
        {
            get
            {
                return _CATEGORY_KEY;
            }
            set
            {
                if (_CATEGORY_KEY != value)
                {
                    OnCATEGORY_KEYChanging(value);
                    ReportPropertyChanging("CATEGORY_KEY");
                    _CATEGORY_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CATEGORY_KEY");
                    OnCATEGORY_KEYChanged();
                }
            }
        }
        private global::System.Int32 _CATEGORY_KEY;
        partial void OnCATEGORY_KEYChanging(global::System.Int32 value);
        partial void OnCATEGORY_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_DESC
        {
            get
            {
                return _CATEGORY_DESC;
            }
            set
            {
                OnCATEGORY_DESCChanging(value);
                ReportPropertyChanging("CATEGORY_DESC");
                _CATEGORY_DESC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_DESC");
                OnCATEGORY_DESCChanged();
            }
        }
        private global::System.String _CATEGORY_DESC;
        partial void OnCATEGORY_DESCChanging(global::System.String value);
        partial void OnCATEGORY_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_DESC_TH
        {
            get
            {
                return _CATEGORY_DESC_TH;
            }
            set
            {
                OnCATEGORY_DESC_THChanging(value);
                ReportPropertyChanging("CATEGORY_DESC_TH");
                _CATEGORY_DESC_TH = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_DESC_TH");
                OnCATEGORY_DESC_THChanged();
            }
        }
        private global::System.String _CATEGORY_DESC_TH;
        partial void OnCATEGORY_DESC_THChanging(global::System.String value);
        partial void OnCATEGORY_DESC_THChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_VALUE
        {
            get
            {
                return _CATEGORY_VALUE;
            }
            set
            {
                OnCATEGORY_VALUEChanging(value);
                ReportPropertyChanging("CATEGORY_VALUE");
                _CATEGORY_VALUE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_VALUE");
                OnCATEGORY_VALUEChanged();
            }
        }
        private global::System.String _CATEGORY_VALUE;
        partial void OnCATEGORY_VALUEChanging(global::System.String value);
        partial void OnCATEGORY_VALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CATEGORY_PRIORITY
        {
            get
            {
                return _CATEGORY_PRIORITY;
            }
            set
            {
                OnCATEGORY_PRIORITYChanging(value);
                ReportPropertyChanging("CATEGORY_PRIORITY");
                _CATEGORY_PRIORITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CATEGORY_PRIORITY");
                OnCATEGORY_PRIORITYChanged();
            }
        }
        private Nullable<global::System.Int32> _CATEGORY_PRIORITY;
        partial void OnCATEGORY_PRIORITYChanging(Nullable<global::System.Int32> value);
        partial void OnCATEGORY_PRIORITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CATEGORY_DEL_FLAG
        {
            get
            {
                return _CATEGORY_DEL_FLAG;
            }
            set
            {
                OnCATEGORY_DEL_FLAGChanging(value);
                ReportPropertyChanging("CATEGORY_DEL_FLAG");
                _CATEGORY_DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CATEGORY_DEL_FLAG");
                OnCATEGORY_DEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _CATEGORY_DEL_FLAG;
        partial void OnCATEGORY_DEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnCATEGORY_DEL_FLAGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CATEGORY_TYPE_KEY
        {
            get
            {
                return _CATEGORY_TYPE_KEY;
            }
            set
            {
                if (_CATEGORY_TYPE_KEY != value)
                {
                    OnCATEGORY_TYPE_KEYChanging(value);
                    ReportPropertyChanging("CATEGORY_TYPE_KEY");
                    _CATEGORY_TYPE_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CATEGORY_TYPE_KEY");
                    OnCATEGORY_TYPE_KEYChanged();
                }
            }
        }
        private global::System.Int32 _CATEGORY_TYPE_KEY;
        partial void OnCATEGORY_TYPE_KEYChanging(global::System.Int32 value);
        partial void OnCATEGORY_TYPE_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_TYPE_DESC
        {
            get
            {
                return _CATEGORY_TYPE_DESC;
            }
            set
            {
                OnCATEGORY_TYPE_DESCChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_DESC");
                _CATEGORY_TYPE_DESC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_TYPE_DESC");
                OnCATEGORY_TYPE_DESCChanged();
            }
        }
        private global::System.String _CATEGORY_TYPE_DESC;
        partial void OnCATEGORY_TYPE_DESCChanging(global::System.String value);
        partial void OnCATEGORY_TYPE_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_TYPE_DESC_TH
        {
            get
            {
                return _CATEGORY_TYPE_DESC_TH;
            }
            set
            {
                OnCATEGORY_TYPE_DESC_THChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_DESC_TH");
                _CATEGORY_TYPE_DESC_TH = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_TYPE_DESC_TH");
                OnCATEGORY_TYPE_DESC_THChanged();
            }
        }
        private global::System.String _CATEGORY_TYPE_DESC_TH;
        partial void OnCATEGORY_TYPE_DESC_THChanging(global::System.String value);
        partial void OnCATEGORY_TYPE_DESC_THChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_TYPE_VALUE
        {
            get
            {
                return _CATEGORY_TYPE_VALUE;
            }
            set
            {
                OnCATEGORY_TYPE_VALUEChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_VALUE");
                _CATEGORY_TYPE_VALUE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_TYPE_VALUE");
                OnCATEGORY_TYPE_VALUEChanged();
            }
        }
        private global::System.String _CATEGORY_TYPE_VALUE;
        partial void OnCATEGORY_TYPE_VALUEChanging(global::System.String value);
        partial void OnCATEGORY_TYPE_VALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CATEGORY_TYPE_PRIORITY
        {
            get
            {
                return _CATEGORY_TYPE_PRIORITY;
            }
            set
            {
                OnCATEGORY_TYPE_PRIORITYChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_PRIORITY");
                _CATEGORY_TYPE_PRIORITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CATEGORY_TYPE_PRIORITY");
                OnCATEGORY_TYPE_PRIORITYChanged();
            }
        }
        private Nullable<global::System.Int32> _CATEGORY_TYPE_PRIORITY;
        partial void OnCATEGORY_TYPE_PRIORITYChanging(Nullable<global::System.Int32> value);
        partial void OnCATEGORY_TYPE_PRIORITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CATEGORY_TYPE_DEL_FLAG
        {
            get
            {
                return _CATEGORY_TYPE_DEL_FLAG;
            }
            set
            {
                OnCATEGORY_TYPE_DEL_FLAGChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_DEL_FLAG");
                _CATEGORY_TYPE_DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CATEGORY_TYPE_DEL_FLAG");
                OnCATEGORY_TYPE_DEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _CATEGORY_TYPE_DEL_FLAG;
        partial void OnCATEGORY_TYPE_DEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnCATEGORY_TYPE_DEL_FLAGChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassifyModel", Name="V_003_LINKED_CATEGORY_TYPE_1_INFO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_003_LINKED_CATEGORY_TYPE_1_INFO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_003_LINKED_CATEGORY_TYPE_1_INFO object.
        /// </summary>
        /// <param name="lINKED_CATEGORY_ID">Initial value of the LINKED_CATEGORY_ID property.</param>
        /// <param name="cATEGORY_KEY">Initial value of the CATEGORY_KEY property.</param>
        /// <param name="cATEGORY_TYPE_KEY">Initial value of the CATEGORY_TYPE_KEY property.</param>
        /// <param name="pARENT_CATEGORY_KEY">Initial value of the PARENT_CATEGORY_KEY property.</param>
        public static V_003_LINKED_CATEGORY_TYPE_1_INFO CreateV_003_LINKED_CATEGORY_TYPE_1_INFO(global::System.Int32 lINKED_CATEGORY_ID, global::System.Int32 cATEGORY_KEY, global::System.Int32 cATEGORY_TYPE_KEY, global::System.Int32 pARENT_CATEGORY_KEY)
        {
            V_003_LINKED_CATEGORY_TYPE_1_INFO v_003_LINKED_CATEGORY_TYPE_1_INFO = new V_003_LINKED_CATEGORY_TYPE_1_INFO();
            v_003_LINKED_CATEGORY_TYPE_1_INFO.LINKED_CATEGORY_ID = lINKED_CATEGORY_ID;
            v_003_LINKED_CATEGORY_TYPE_1_INFO.CATEGORY_KEY = cATEGORY_KEY;
            v_003_LINKED_CATEGORY_TYPE_1_INFO.CATEGORY_TYPE_KEY = cATEGORY_TYPE_KEY;
            v_003_LINKED_CATEGORY_TYPE_1_INFO.PARENT_CATEGORY_KEY = pARENT_CATEGORY_KEY;
            return v_003_LINKED_CATEGORY_TYPE_1_INFO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LINKED_CATEGORY_ID
        {
            get
            {
                return _LINKED_CATEGORY_ID;
            }
            set
            {
                if (_LINKED_CATEGORY_ID != value)
                {
                    OnLINKED_CATEGORY_IDChanging(value);
                    ReportPropertyChanging("LINKED_CATEGORY_ID");
                    _LINKED_CATEGORY_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LINKED_CATEGORY_ID");
                    OnLINKED_CATEGORY_IDChanged();
                }
            }
        }
        private global::System.Int32 _LINKED_CATEGORY_ID;
        partial void OnLINKED_CATEGORY_IDChanging(global::System.Int32 value);
        partial void OnLINKED_CATEGORY_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CATEGORY_KEY
        {
            get
            {
                return _CATEGORY_KEY;
            }
            set
            {
                if (_CATEGORY_KEY != value)
                {
                    OnCATEGORY_KEYChanging(value);
                    ReportPropertyChanging("CATEGORY_KEY");
                    _CATEGORY_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CATEGORY_KEY");
                    OnCATEGORY_KEYChanged();
                }
            }
        }
        private global::System.Int32 _CATEGORY_KEY;
        partial void OnCATEGORY_KEYChanging(global::System.Int32 value);
        partial void OnCATEGORY_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_DESC
        {
            get
            {
                return _CATEGORY_DESC;
            }
            set
            {
                OnCATEGORY_DESCChanging(value);
                ReportPropertyChanging("CATEGORY_DESC");
                _CATEGORY_DESC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_DESC");
                OnCATEGORY_DESCChanged();
            }
        }
        private global::System.String _CATEGORY_DESC;
        partial void OnCATEGORY_DESCChanging(global::System.String value);
        partial void OnCATEGORY_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_DESC_TH
        {
            get
            {
                return _CATEGORY_DESC_TH;
            }
            set
            {
                OnCATEGORY_DESC_THChanging(value);
                ReportPropertyChanging("CATEGORY_DESC_TH");
                _CATEGORY_DESC_TH = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_DESC_TH");
                OnCATEGORY_DESC_THChanged();
            }
        }
        private global::System.String _CATEGORY_DESC_TH;
        partial void OnCATEGORY_DESC_THChanging(global::System.String value);
        partial void OnCATEGORY_DESC_THChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_VALUE
        {
            get
            {
                return _CATEGORY_VALUE;
            }
            set
            {
                OnCATEGORY_VALUEChanging(value);
                ReportPropertyChanging("CATEGORY_VALUE");
                _CATEGORY_VALUE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_VALUE");
                OnCATEGORY_VALUEChanged();
            }
        }
        private global::System.String _CATEGORY_VALUE;
        partial void OnCATEGORY_VALUEChanging(global::System.String value);
        partial void OnCATEGORY_VALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CATEGORY_PRIORITY
        {
            get
            {
                return _CATEGORY_PRIORITY;
            }
            set
            {
                OnCATEGORY_PRIORITYChanging(value);
                ReportPropertyChanging("CATEGORY_PRIORITY");
                _CATEGORY_PRIORITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CATEGORY_PRIORITY");
                OnCATEGORY_PRIORITYChanged();
            }
        }
        private Nullable<global::System.Int32> _CATEGORY_PRIORITY;
        partial void OnCATEGORY_PRIORITYChanging(Nullable<global::System.Int32> value);
        partial void OnCATEGORY_PRIORITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CATEGORY_DEL_FLAG
        {
            get
            {
                return _CATEGORY_DEL_FLAG;
            }
            set
            {
                OnCATEGORY_DEL_FLAGChanging(value);
                ReportPropertyChanging("CATEGORY_DEL_FLAG");
                _CATEGORY_DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CATEGORY_DEL_FLAG");
                OnCATEGORY_DEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _CATEGORY_DEL_FLAG;
        partial void OnCATEGORY_DEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnCATEGORY_DEL_FLAGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CATEGORY_TYPE_KEY
        {
            get
            {
                return _CATEGORY_TYPE_KEY;
            }
            set
            {
                if (_CATEGORY_TYPE_KEY != value)
                {
                    OnCATEGORY_TYPE_KEYChanging(value);
                    ReportPropertyChanging("CATEGORY_TYPE_KEY");
                    _CATEGORY_TYPE_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CATEGORY_TYPE_KEY");
                    OnCATEGORY_TYPE_KEYChanged();
                }
            }
        }
        private global::System.Int32 _CATEGORY_TYPE_KEY;
        partial void OnCATEGORY_TYPE_KEYChanging(global::System.Int32 value);
        partial void OnCATEGORY_TYPE_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_TYPE_DESC
        {
            get
            {
                return _CATEGORY_TYPE_DESC;
            }
            set
            {
                OnCATEGORY_TYPE_DESCChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_DESC");
                _CATEGORY_TYPE_DESC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_TYPE_DESC");
                OnCATEGORY_TYPE_DESCChanged();
            }
        }
        private global::System.String _CATEGORY_TYPE_DESC;
        partial void OnCATEGORY_TYPE_DESCChanging(global::System.String value);
        partial void OnCATEGORY_TYPE_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_TYPE_DESC_TH
        {
            get
            {
                return _CATEGORY_TYPE_DESC_TH;
            }
            set
            {
                OnCATEGORY_TYPE_DESC_THChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_DESC_TH");
                _CATEGORY_TYPE_DESC_TH = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_TYPE_DESC_TH");
                OnCATEGORY_TYPE_DESC_THChanged();
            }
        }
        private global::System.String _CATEGORY_TYPE_DESC_TH;
        partial void OnCATEGORY_TYPE_DESC_THChanging(global::System.String value);
        partial void OnCATEGORY_TYPE_DESC_THChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_TYPE_VALUE
        {
            get
            {
                return _CATEGORY_TYPE_VALUE;
            }
            set
            {
                OnCATEGORY_TYPE_VALUEChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_VALUE");
                _CATEGORY_TYPE_VALUE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_TYPE_VALUE");
                OnCATEGORY_TYPE_VALUEChanged();
            }
        }
        private global::System.String _CATEGORY_TYPE_VALUE;
        partial void OnCATEGORY_TYPE_VALUEChanging(global::System.String value);
        partial void OnCATEGORY_TYPE_VALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CATEGORY_TYPE_PRIORITY
        {
            get
            {
                return _CATEGORY_TYPE_PRIORITY;
            }
            set
            {
                OnCATEGORY_TYPE_PRIORITYChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_PRIORITY");
                _CATEGORY_TYPE_PRIORITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CATEGORY_TYPE_PRIORITY");
                OnCATEGORY_TYPE_PRIORITYChanged();
            }
        }
        private Nullable<global::System.Int32> _CATEGORY_TYPE_PRIORITY;
        partial void OnCATEGORY_TYPE_PRIORITYChanging(Nullable<global::System.Int32> value);
        partial void OnCATEGORY_TYPE_PRIORITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CATEGORY_TYPE_DEL_FLAG
        {
            get
            {
                return _CATEGORY_TYPE_DEL_FLAG;
            }
            set
            {
                OnCATEGORY_TYPE_DEL_FLAGChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_DEL_FLAG");
                _CATEGORY_TYPE_DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CATEGORY_TYPE_DEL_FLAG");
                OnCATEGORY_TYPE_DEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _CATEGORY_TYPE_DEL_FLAG;
        partial void OnCATEGORY_TYPE_DEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnCATEGORY_TYPE_DEL_FLAGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PARENT_CATEGORY_KEY
        {
            get
            {
                return _PARENT_CATEGORY_KEY;
            }
            set
            {
                if (_PARENT_CATEGORY_KEY != value)
                {
                    OnPARENT_CATEGORY_KEYChanging(value);
                    ReportPropertyChanging("PARENT_CATEGORY_KEY");
                    _PARENT_CATEGORY_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PARENT_CATEGORY_KEY");
                    OnPARENT_CATEGORY_KEYChanged();
                }
            }
        }
        private global::System.Int32 _PARENT_CATEGORY_KEY;
        partial void OnPARENT_CATEGORY_KEYChanging(global::System.Int32 value);
        partial void OnPARENT_CATEGORY_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> RECURSIVE_DEL_FLAG
        {
            get
            {
                return _RECURSIVE_DEL_FLAG;
            }
            set
            {
                OnRECURSIVE_DEL_FLAGChanging(value);
                ReportPropertyChanging("RECURSIVE_DEL_FLAG");
                _RECURSIVE_DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RECURSIVE_DEL_FLAG");
                OnRECURSIVE_DEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _RECURSIVE_DEL_FLAG;
        partial void OnRECURSIVE_DEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnRECURSIVE_DEL_FLAGChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ClassifyModel", Name="V_004_LINKED_CATEGORY_TYPE_2_INFO")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class V_004_LINKED_CATEGORY_TYPE_2_INFO : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new V_004_LINKED_CATEGORY_TYPE_2_INFO object.
        /// </summary>
        /// <param name="cATEGORY_KEY">Initial value of the CATEGORY_KEY property.</param>
        /// <param name="lINKED_TYPE_KEY">Initial value of the LINKED_TYPE_KEY property.</param>
        /// <param name="cATEGORY_KEY_LINK">Initial value of the CATEGORY_KEY_LINK property.</param>
        public static V_004_LINKED_CATEGORY_TYPE_2_INFO CreateV_004_LINKED_CATEGORY_TYPE_2_INFO(global::System.Int32 cATEGORY_KEY, global::System.Int32 lINKED_TYPE_KEY, global::System.Int32 cATEGORY_KEY_LINK)
        {
            V_004_LINKED_CATEGORY_TYPE_2_INFO v_004_LINKED_CATEGORY_TYPE_2_INFO = new V_004_LINKED_CATEGORY_TYPE_2_INFO();
            v_004_LINKED_CATEGORY_TYPE_2_INFO.CATEGORY_KEY = cATEGORY_KEY;
            v_004_LINKED_CATEGORY_TYPE_2_INFO.LINKED_TYPE_KEY = lINKED_TYPE_KEY;
            v_004_LINKED_CATEGORY_TYPE_2_INFO.CATEGORY_KEY_LINK = cATEGORY_KEY_LINK;
            return v_004_LINKED_CATEGORY_TYPE_2_INFO;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CATEGORY_KEY
        {
            get
            {
                return _CATEGORY_KEY;
            }
            set
            {
                if (_CATEGORY_KEY != value)
                {
                    OnCATEGORY_KEYChanging(value);
                    ReportPropertyChanging("CATEGORY_KEY");
                    _CATEGORY_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CATEGORY_KEY");
                    OnCATEGORY_KEYChanged();
                }
            }
        }
        private global::System.Int32 _CATEGORY_KEY;
        partial void OnCATEGORY_KEYChanging(global::System.Int32 value);
        partial void OnCATEGORY_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_DESC
        {
            get
            {
                return _CATEGORY_DESC;
            }
            set
            {
                OnCATEGORY_DESCChanging(value);
                ReportPropertyChanging("CATEGORY_DESC");
                _CATEGORY_DESC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_DESC");
                OnCATEGORY_DESCChanged();
            }
        }
        private global::System.String _CATEGORY_DESC;
        partial void OnCATEGORY_DESCChanging(global::System.String value);
        partial void OnCATEGORY_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_DESC_TH
        {
            get
            {
                return _CATEGORY_DESC_TH;
            }
            set
            {
                OnCATEGORY_DESC_THChanging(value);
                ReportPropertyChanging("CATEGORY_DESC_TH");
                _CATEGORY_DESC_TH = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_DESC_TH");
                OnCATEGORY_DESC_THChanged();
            }
        }
        private global::System.String _CATEGORY_DESC_TH;
        partial void OnCATEGORY_DESC_THChanging(global::System.String value);
        partial void OnCATEGORY_DESC_THChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_VALUE
        {
            get
            {
                return _CATEGORY_VALUE;
            }
            set
            {
                OnCATEGORY_VALUEChanging(value);
                ReportPropertyChanging("CATEGORY_VALUE");
                _CATEGORY_VALUE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_VALUE");
                OnCATEGORY_VALUEChanged();
            }
        }
        private global::System.String _CATEGORY_VALUE;
        partial void OnCATEGORY_VALUEChanging(global::System.String value);
        partial void OnCATEGORY_VALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CATEGORY_TYPE_KEY
        {
            get
            {
                return _CATEGORY_TYPE_KEY;
            }
            set
            {
                OnCATEGORY_TYPE_KEYChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_KEY");
                _CATEGORY_TYPE_KEY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CATEGORY_TYPE_KEY");
                OnCATEGORY_TYPE_KEYChanged();
            }
        }
        private Nullable<global::System.Int32> _CATEGORY_TYPE_KEY;
        partial void OnCATEGORY_TYPE_KEYChanging(Nullable<global::System.Int32> value);
        partial void OnCATEGORY_TYPE_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PRIORITY
        {
            get
            {
                return _PRIORITY;
            }
            set
            {
                OnPRIORITYChanging(value);
                ReportPropertyChanging("PRIORITY");
                _PRIORITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRIORITY");
                OnPRIORITYChanged();
            }
        }
        private Nullable<global::System.Int32> _PRIORITY;
        partial void OnPRIORITYChanging(Nullable<global::System.Int32> value);
        partial void OnPRIORITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LINKED_TYPE_KEY
        {
            get
            {
                return _LINKED_TYPE_KEY;
            }
            set
            {
                if (_LINKED_TYPE_KEY != value)
                {
                    OnLINKED_TYPE_KEYChanging(value);
                    ReportPropertyChanging("LINKED_TYPE_KEY");
                    _LINKED_TYPE_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LINKED_TYPE_KEY");
                    OnLINKED_TYPE_KEYChanged();
                }
            }
        }
        private global::System.Int32 _LINKED_TYPE_KEY;
        partial void OnLINKED_TYPE_KEYChanging(global::System.Int32 value);
        partial void OnLINKED_TYPE_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CATEGORY_RECURSIVE_DEL_FLAG
        {
            get
            {
                return _CATEGORY_RECURSIVE_DEL_FLAG;
            }
            set
            {
                OnCATEGORY_RECURSIVE_DEL_FLAGChanging(value);
                ReportPropertyChanging("CATEGORY_RECURSIVE_DEL_FLAG");
                _CATEGORY_RECURSIVE_DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CATEGORY_RECURSIVE_DEL_FLAG");
                OnCATEGORY_RECURSIVE_DEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _CATEGORY_RECURSIVE_DEL_FLAG;
        partial void OnCATEGORY_RECURSIVE_DEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnCATEGORY_RECURSIVE_DEL_FLAGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CATEGORY_KEY_LINK
        {
            get
            {
                return _CATEGORY_KEY_LINK;
            }
            set
            {
                if (_CATEGORY_KEY_LINK != value)
                {
                    OnCATEGORY_KEY_LINKChanging(value);
                    ReportPropertyChanging("CATEGORY_KEY_LINK");
                    _CATEGORY_KEY_LINK = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CATEGORY_KEY_LINK");
                    OnCATEGORY_KEY_LINKChanged();
                }
            }
        }
        private global::System.Int32 _CATEGORY_KEY_LINK;
        partial void OnCATEGORY_KEY_LINKChanging(global::System.Int32 value);
        partial void OnCATEGORY_KEY_LINKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_DESC_LINK
        {
            get
            {
                return _CATEGORY_DESC_LINK;
            }
            set
            {
                OnCATEGORY_DESC_LINKChanging(value);
                ReportPropertyChanging("CATEGORY_DESC_LINK");
                _CATEGORY_DESC_LINK = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_DESC_LINK");
                OnCATEGORY_DESC_LINKChanged();
            }
        }
        private global::System.String _CATEGORY_DESC_LINK;
        partial void OnCATEGORY_DESC_LINKChanging(global::System.String value);
        partial void OnCATEGORY_DESC_LINKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_DESC_TH_LINK
        {
            get
            {
                return _CATEGORY_DESC_TH_LINK;
            }
            set
            {
                OnCATEGORY_DESC_TH_LINKChanging(value);
                ReportPropertyChanging("CATEGORY_DESC_TH_LINK");
                _CATEGORY_DESC_TH_LINK = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_DESC_TH_LINK");
                OnCATEGORY_DESC_TH_LINKChanged();
            }
        }
        private global::System.String _CATEGORY_DESC_TH_LINK;
        partial void OnCATEGORY_DESC_TH_LINKChanging(global::System.String value);
        partial void OnCATEGORY_DESC_TH_LINKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_VALUE_LINK
        {
            get
            {
                return _CATEGORY_VALUE_LINK;
            }
            set
            {
                OnCATEGORY_VALUE_LINKChanging(value);
                ReportPropertyChanging("CATEGORY_VALUE_LINK");
                _CATEGORY_VALUE_LINK = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_VALUE_LINK");
                OnCATEGORY_VALUE_LINKChanged();
            }
        }
        private global::System.String _CATEGORY_VALUE_LINK;
        partial void OnCATEGORY_VALUE_LINKChanging(global::System.String value);
        partial void OnCATEGORY_VALUE_LINKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CATEGORY_TYPE_KEY_LINK
        {
            get
            {
                return _CATEGORY_TYPE_KEY_LINK;
            }
            set
            {
                OnCATEGORY_TYPE_KEY_LINKChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_KEY_LINK");
                _CATEGORY_TYPE_KEY_LINK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CATEGORY_TYPE_KEY_LINK");
                OnCATEGORY_TYPE_KEY_LINKChanged();
            }
        }
        private Nullable<global::System.Int32> _CATEGORY_TYPE_KEY_LINK;
        partial void OnCATEGORY_TYPE_KEY_LINKChanging(Nullable<global::System.Int32> value);
        partial void OnCATEGORY_TYPE_KEY_LINKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PRIORITY_LINK
        {
            get
            {
                return _PRIORITY_LINK;
            }
            set
            {
                OnPRIORITY_LINKChanging(value);
                ReportPropertyChanging("PRIORITY_LINK");
                _PRIORITY_LINK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRIORITY_LINK");
                OnPRIORITY_LINKChanged();
            }
        }
        private Nullable<global::System.Int32> _PRIORITY_LINK;
        partial void OnPRIORITY_LINKChanging(Nullable<global::System.Int32> value);
        partial void OnPRIORITY_LINKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG_LINK
        {
            get
            {
                return _DEL_FLAG_LINK;
            }
            set
            {
                OnDEL_FLAG_LINKChanging(value);
                ReportPropertyChanging("DEL_FLAG_LINK");
                _DEL_FLAG_LINK = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG_LINK");
                OnDEL_FLAG_LINKChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG_LINK;
        partial void OnDEL_FLAG_LINKChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAG_LINKChanged();

        #endregion
    
    }

    #endregion
    
}
