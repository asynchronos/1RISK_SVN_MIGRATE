//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("UserSystemEntitiesModel", "FK_CATE_AND_APP_APPLICATION", "APPLICATION", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SME.UserSystem.Core.APPLICATION), "CATE_AND_APP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SME.UserSystem.Core.CATE_AND_APP), true)]
[assembly: EdmRelationshipAttribute("UserSystemEntitiesModel", "FK_CATE_AND_APP_CATEGORY", "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SME.UserSystem.Core.CATEGORY), "CATE_AND_APP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SME.UserSystem.Core.CATE_AND_APP), true)]
[assembly: EdmRelationshipAttribute("UserSystemEntitiesModel", "FK_CATE_AND_CUS_CATEGORY", "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SME.UserSystem.Core.CATEGORY), "CATE_AND_CUS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SME.UserSystem.Core.CATE_AND_CUS), true)]
[assembly: EdmRelationshipAttribute("UserSystemEntitiesModel", "FK_CATE_AND_EMP_CATEGORY", "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SME.UserSystem.Core.CATEGORY), "CATE_AND_EMP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SME.UserSystem.Core.CATE_AND_EMP), true)]
[assembly: EdmRelationshipAttribute("UserSystemEntitiesModel", "FK_CATE_AND_EMP_USER_DATA", "USER_DATA", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SME.UserSystem.Core.USER_DATA), "CATE_AND_EMP", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SME.UserSystem.Core.CATE_AND_EMP), true)]
[assembly: EdmRelationshipAttribute("UserSystemEntitiesModel", "FK_CATE_AND_MENU_CATEGORY", "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SME.UserSystem.Core.CATEGORY), "CATE_AND_MENU", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SME.UserSystem.Core.CATE_AND_MENU), true)]
[assembly: EdmRelationshipAttribute("UserSystemEntitiesModel", "FK_CATE_AND_MENU_MENU_MASTER", "MENU_MASTER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SME.UserSystem.Core.MENU_MASTER), "CATE_AND_MENU", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SME.UserSystem.Core.CATE_AND_MENU), true)]
[assembly: EdmRelationshipAttribute("UserSystemEntitiesModel", "FK_CATE_LINK_CATE_CATE_LINK_CATE_TYPE", "CATE_LINK_CATE_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SME.UserSystem.Core.CATE_LINK_CATE_TYPE), "CATE_LINK_CATE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SME.UserSystem.Core.CATE_LINK_CATE), true)]
[assembly: EdmRelationshipAttribute("UserSystemEntitiesModel", "FK_CATE_LINK_CATE_CATEGORY", "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SME.UserSystem.Core.CATEGORY), "CATE_LINK_CATE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SME.UserSystem.Core.CATE_LINK_CATE), true)]
[assembly: EdmRelationshipAttribute("UserSystemEntitiesModel", "FK_CATE_LINKED_CATE_CATEGORY", "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SME.UserSystem.Core.CATEGORY), "CATE_LINK_CATE", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SME.UserSystem.Core.CATE_LINK_CATE), true)]
[assembly: EdmRelationshipAttribute("UserSystemEntitiesModel", "FK_CATEGORY_CATEGORY_TYPE", "CATEGORY_TYPE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SME.UserSystem.Core.CATEGORY_TYPE), "CATEGORY", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SME.UserSystem.Core.CATEGORY), true)]
[assembly: EdmRelationshipAttribute("UserSystemEntitiesModel", "FK_MENU_MASTER_MENU_MASTER", "MENU_MASTER", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SME.UserSystem.Core.MENU_MASTER), "MENU_MASTER1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SME.UserSystem.Core.MENU_MASTER), true)]

#endregion

namespace SME.UserSystem.Core
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class UserSystemEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new UserSystemEntities object using the connection string found in the 'UserSystemEntities' section of the application configuration file.
        /// </summary>
        public UserSystemEntities() : base("name=UserSystemEntities", "UserSystemEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UserSystemEntities object.
        /// </summary>
        public UserSystemEntities(string connectionString) : base(connectionString, "UserSystemEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UserSystemEntities object.
        /// </summary>
        public UserSystemEntities(EntityConnection connection) : base(connection, "UserSystemEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<APPLICATION> APPLICATION
        {
            get
            {
                if ((_APPLICATION == null))
                {
                    _APPLICATION = base.CreateObjectSet<APPLICATION>("APPLICATION");
                }
                return _APPLICATION;
            }
        }
        private ObjectSet<APPLICATION> _APPLICATION;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CATE_AND_APP> CATE_AND_APP
        {
            get
            {
                if ((_CATE_AND_APP == null))
                {
                    _CATE_AND_APP = base.CreateObjectSet<CATE_AND_APP>("CATE_AND_APP");
                }
                return _CATE_AND_APP;
            }
        }
        private ObjectSet<CATE_AND_APP> _CATE_AND_APP;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CATE_AND_CUS> CATE_AND_CUS
        {
            get
            {
                if ((_CATE_AND_CUS == null))
                {
                    _CATE_AND_CUS = base.CreateObjectSet<CATE_AND_CUS>("CATE_AND_CUS");
                }
                return _CATE_AND_CUS;
            }
        }
        private ObjectSet<CATE_AND_CUS> _CATE_AND_CUS;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CATE_AND_EMP> CATE_AND_EMP
        {
            get
            {
                if ((_CATE_AND_EMP == null))
                {
                    _CATE_AND_EMP = base.CreateObjectSet<CATE_AND_EMP>("CATE_AND_EMP");
                }
                return _CATE_AND_EMP;
            }
        }
        private ObjectSet<CATE_AND_EMP> _CATE_AND_EMP;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CATE_AND_MENU> CATE_AND_MENU
        {
            get
            {
                if ((_CATE_AND_MENU == null))
                {
                    _CATE_AND_MENU = base.CreateObjectSet<CATE_AND_MENU>("CATE_AND_MENU");
                }
                return _CATE_AND_MENU;
            }
        }
        private ObjectSet<CATE_AND_MENU> _CATE_AND_MENU;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CATE_LINK_CATE> CATE_LINK_CATE
        {
            get
            {
                if ((_CATE_LINK_CATE == null))
                {
                    _CATE_LINK_CATE = base.CreateObjectSet<CATE_LINK_CATE>("CATE_LINK_CATE");
                }
                return _CATE_LINK_CATE;
            }
        }
        private ObjectSet<CATE_LINK_CATE> _CATE_LINK_CATE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CATE_LINK_CATE_TYPE> CATE_LINK_CATE_TYPE
        {
            get
            {
                if ((_CATE_LINK_CATE_TYPE == null))
                {
                    _CATE_LINK_CATE_TYPE = base.CreateObjectSet<CATE_LINK_CATE_TYPE>("CATE_LINK_CATE_TYPE");
                }
                return _CATE_LINK_CATE_TYPE;
            }
        }
        private ObjectSet<CATE_LINK_CATE_TYPE> _CATE_LINK_CATE_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CATEGORY> CATEGORY
        {
            get
            {
                if ((_CATEGORY == null))
                {
                    _CATEGORY = base.CreateObjectSet<CATEGORY>("CATEGORY");
                }
                return _CATEGORY;
            }
        }
        private ObjectSet<CATEGORY> _CATEGORY;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CATEGORY_TYPE> CATEGORY_TYPE
        {
            get
            {
                if ((_CATEGORY_TYPE == null))
                {
                    _CATEGORY_TYPE = base.CreateObjectSet<CATEGORY_TYPE>("CATEGORY_TYPE");
                }
                return _CATEGORY_TYPE;
            }
        }
        private ObjectSet<CATEGORY_TYPE> _CATEGORY_TYPE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MENU_MASTER> MENU_MASTER
        {
            get
            {
                if ((_MENU_MASTER == null))
                {
                    _MENU_MASTER = base.CreateObjectSet<MENU_MASTER>("MENU_MASTER");
                }
                return _MENU_MASTER;
            }
        }
        private ObjectSet<MENU_MASTER> _MENU_MASTER;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TB_EMPLOYEE> TB_EMPLOYEE
        {
            get
            {
                if ((_TB_EMPLOYEE == null))
                {
                    _TB_EMPLOYEE = base.CreateObjectSet<TB_EMPLOYEE>("TB_EMPLOYEE");
                }
                return _TB_EMPLOYEE;
            }
        }
        private ObjectSet<TB_EMPLOYEE> _TB_EMPLOYEE;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<USER_DATA> USER_DATA
        {
            get
            {
                if ((_USER_DATA == null))
                {
                    _USER_DATA = base.CreateObjectSet<USER_DATA>("USER_DATA");
                }
                return _USER_DATA;
            }
        }
        private ObjectSet<USER_DATA> _USER_DATA;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the APPLICATION EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAPPLICATION(APPLICATION aPPLICATION)
        {
            base.AddObject("APPLICATION", aPPLICATION);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CATE_AND_APP EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCATE_AND_APP(CATE_AND_APP cATE_AND_APP)
        {
            base.AddObject("CATE_AND_APP", cATE_AND_APP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CATE_AND_CUS EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCATE_AND_CUS(CATE_AND_CUS cATE_AND_CUS)
        {
            base.AddObject("CATE_AND_CUS", cATE_AND_CUS);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CATE_AND_EMP EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCATE_AND_EMP(CATE_AND_EMP cATE_AND_EMP)
        {
            base.AddObject("CATE_AND_EMP", cATE_AND_EMP);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CATE_AND_MENU EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCATE_AND_MENU(CATE_AND_MENU cATE_AND_MENU)
        {
            base.AddObject("CATE_AND_MENU", cATE_AND_MENU);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CATE_LINK_CATE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCATE_LINK_CATE(CATE_LINK_CATE cATE_LINK_CATE)
        {
            base.AddObject("CATE_LINK_CATE", cATE_LINK_CATE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CATE_LINK_CATE_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCATE_LINK_CATE_TYPE(CATE_LINK_CATE_TYPE cATE_LINK_CATE_TYPE)
        {
            base.AddObject("CATE_LINK_CATE_TYPE", cATE_LINK_CATE_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CATEGORY EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCATEGORY(CATEGORY cATEGORY)
        {
            base.AddObject("CATEGORY", cATEGORY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CATEGORY_TYPE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCATEGORY_TYPE(CATEGORY_TYPE cATEGORY_TYPE)
        {
            base.AddObject("CATEGORY_TYPE", cATEGORY_TYPE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MENU_MASTER EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMENU_MASTER(MENU_MASTER mENU_MASTER)
        {
            base.AddObject("MENU_MASTER", mENU_MASTER);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TB_EMPLOYEE EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTB_EMPLOYEE(TB_EMPLOYEE tB_EMPLOYEE)
        {
            base.AddObject("TB_EMPLOYEE", tB_EMPLOYEE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the USER_DATA EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUSER_DATA(USER_DATA uSER_DATA)
        {
            base.AddObject("USER_DATA", uSER_DATA);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserSystemEntitiesModel", Name="APPLICATION")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class APPLICATION : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new APPLICATION object.
        /// </summary>
        /// <param name="aPP_KEY">Initial value of the APP_KEY property.</param>
        /// <param name="aPP_DESC">Initial value of the APP_DESC property.</param>
        public static APPLICATION CreateAPPLICATION(global::System.Int32 aPP_KEY, global::System.String aPP_DESC)
        {
            APPLICATION aPPLICATION = new APPLICATION();
            aPPLICATION.APP_KEY = aPP_KEY;
            aPPLICATION.APP_DESC = aPP_DESC;
            return aPPLICATION;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 APP_KEY
        {
            get
            {
                return _APP_KEY;
            }
            set
            {
                if (_APP_KEY != value)
                {
                    OnAPP_KEYChanging(value);
                    ReportPropertyChanging("APP_KEY");
                    _APP_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("APP_KEY");
                    OnAPP_KEYChanged();
                }
            }
        }
        private global::System.Int32 _APP_KEY;
        partial void OnAPP_KEYChanging(global::System.Int32 value);
        partial void OnAPP_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String APP_DESC
        {
            get
            {
                return _APP_DESC;
            }
            set
            {
                OnAPP_DESCChanging(value);
                ReportPropertyChanging("APP_DESC");
                _APP_DESC = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("APP_DESC");
                OnAPP_DESCChanged();
            }
        }
        private global::System.String _APP_DESC;
        partial void OnAPP_DESCChanging(global::System.String value);
        partial void OnAPP_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PRIORITY
        {
            get
            {
                return _PRIORITY;
            }
            set
            {
                OnPRIORITYChanging(value);
                ReportPropertyChanging("PRIORITY");
                _PRIORITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRIORITY");
                OnPRIORITYChanged();
            }
        }
        private Nullable<global::System.Int32> _PRIORITY;
        partial void OnPRIORITYChanging(Nullable<global::System.Int32> value);
        partial void OnPRIORITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_AND_APP_APPLICATION", "CATE_AND_APP")]
        public EntityCollection<CATE_AND_APP> CATE_AND_APP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATE_AND_APP>("UserSystemEntitiesModel.FK_CATE_AND_APP_APPLICATION", "CATE_AND_APP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATE_AND_APP>("UserSystemEntitiesModel.FK_CATE_AND_APP_APPLICATION", "CATE_AND_APP", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserSystemEntitiesModel", Name="CATE_AND_APP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATE_AND_APP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CATE_AND_APP object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static CATE_AND_APP CreateCATE_AND_APP(global::System.Int32 id)
        {
            CATE_AND_APP cATE_AND_APP = new CATE_AND_APP();
            cATE_AND_APP.ID = id;
            return cATE_AND_APP;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CATEGORY_KEY
        {
            get
            {
                return _CATEGORY_KEY;
            }
            set
            {
                OnCATEGORY_KEYChanging(value);
                ReportPropertyChanging("CATEGORY_KEY");
                _CATEGORY_KEY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CATEGORY_KEY");
                OnCATEGORY_KEYChanged();
            }
        }
        private Nullable<global::System.Int32> _CATEGORY_KEY;
        partial void OnCATEGORY_KEYChanging(Nullable<global::System.Int32> value);
        partial void OnCATEGORY_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> APP_KEY
        {
            get
            {
                return _APP_KEY;
            }
            set
            {
                OnAPP_KEYChanging(value);
                ReportPropertyChanging("APP_KEY");
                _APP_KEY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("APP_KEY");
                OnAPP_KEYChanged();
            }
        }
        private Nullable<global::System.Int32> _APP_KEY;
        partial void OnAPP_KEYChanging(Nullable<global::System.Int32> value);
        partial void OnAPP_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_AND_APP_APPLICATION", "APPLICATION")]
        public APPLICATION APPLICATION
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPLICATION>("UserSystemEntitiesModel.FK_CATE_AND_APP_APPLICATION", "APPLICATION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPLICATION>("UserSystemEntitiesModel.FK_CATE_AND_APP_APPLICATION", "APPLICATION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<APPLICATION> APPLICATIONReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<APPLICATION>("UserSystemEntitiesModel.FK_CATE_AND_APP_APPLICATION", "APPLICATION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<APPLICATION>("UserSystemEntitiesModel.FK_CATE_AND_APP_APPLICATION", "APPLICATION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_AND_APP_CATEGORY", "CATEGORY")]
        public CATEGORY CATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_AND_APP_CATEGORY", "CATEGORY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_AND_APP_CATEGORY", "CATEGORY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY> CATEGORYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_AND_APP_CATEGORY", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_AND_APP_CATEGORY", "CATEGORY", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserSystemEntitiesModel", Name="CATE_AND_CUS")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATE_AND_CUS : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CATE_AND_CUS object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="cATEGORY_KEY">Initial value of the CATEGORY_KEY property.</param>
        /// <param name="cIF">Initial value of the CIF property.</param>
        public static CATE_AND_CUS CreateCATE_AND_CUS(global::System.Int32 id, global::System.Int32 cATEGORY_KEY, global::System.Int32 cIF)
        {
            CATE_AND_CUS cATE_AND_CUS = new CATE_AND_CUS();
            cATE_AND_CUS.ID = id;
            cATE_AND_CUS.CATEGORY_KEY = cATEGORY_KEY;
            cATE_AND_CUS.CIF = cIF;
            return cATE_AND_CUS;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CATEGORY_KEY
        {
            get
            {
                return _CATEGORY_KEY;
            }
            set
            {
                OnCATEGORY_KEYChanging(value);
                ReportPropertyChanging("CATEGORY_KEY");
                _CATEGORY_KEY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CATEGORY_KEY");
                OnCATEGORY_KEYChanged();
            }
        }
        private global::System.Int32 _CATEGORY_KEY;
        partial void OnCATEGORY_KEYChanging(global::System.Int32 value);
        partial void OnCATEGORY_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CIF
        {
            get
            {
                return _CIF;
            }
            set
            {
                OnCIFChanging(value);
                ReportPropertyChanging("CIF");
                _CIF = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CIF");
                OnCIFChanged();
            }
        }
        private global::System.Int32 _CIF;
        partial void OnCIFChanging(global::System.Int32 value);
        partial void OnCIFChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_AND_CUS_CATEGORY", "CATEGORY")]
        public CATEGORY CATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_AND_CUS_CATEGORY", "CATEGORY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_AND_CUS_CATEGORY", "CATEGORY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY> CATEGORYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_AND_CUS_CATEGORY", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_AND_CUS_CATEGORY", "CATEGORY", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserSystemEntitiesModel", Name="CATE_AND_EMP")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATE_AND_EMP : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CATE_AND_EMP object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="cATEGORY_KEY">Initial value of the CATEGORY_KEY property.</param>
        /// <param name="eMP_ID">Initial value of the EMP_ID property.</param>
        public static CATE_AND_EMP CreateCATE_AND_EMP(global::System.Int32 id, global::System.Int32 cATEGORY_KEY, global::System.String eMP_ID)
        {
            CATE_AND_EMP cATE_AND_EMP = new CATE_AND_EMP();
            cATE_AND_EMP.ID = id;
            cATE_AND_EMP.CATEGORY_KEY = cATEGORY_KEY;
            cATE_AND_EMP.EMP_ID = eMP_ID;
            return cATE_AND_EMP;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CATEGORY_KEY
        {
            get
            {
                return _CATEGORY_KEY;
            }
            set
            {
                OnCATEGORY_KEYChanging(value);
                ReportPropertyChanging("CATEGORY_KEY");
                _CATEGORY_KEY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CATEGORY_KEY");
                OnCATEGORY_KEYChanged();
            }
        }
        private global::System.Int32 _CATEGORY_KEY;
        partial void OnCATEGORY_KEYChanging(global::System.Int32 value);
        partial void OnCATEGORY_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMP_ID
        {
            get
            {
                return _EMP_ID;
            }
            set
            {
                OnEMP_IDChanging(value);
                ReportPropertyChanging("EMP_ID");
                _EMP_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EMP_ID");
                OnEMP_IDChanged();
            }
        }
        private global::System.String _EMP_ID;
        partial void OnEMP_IDChanging(global::System.String value);
        partial void OnEMP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HEAD_PRIORITY
        {
            get
            {
                return _HEAD_PRIORITY;
            }
            set
            {
                OnHEAD_PRIORITYChanging(value);
                ReportPropertyChanging("HEAD_PRIORITY");
                _HEAD_PRIORITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HEAD_PRIORITY");
                OnHEAD_PRIORITYChanged();
            }
        }
        private Nullable<global::System.Int32> _HEAD_PRIORITY;
        partial void OnHEAD_PRIORITYChanging(Nullable<global::System.Int32> value);
        partial void OnHEAD_PRIORITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_AND_EMP_CATEGORY", "CATEGORY")]
        public CATEGORY CATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_AND_EMP_CATEGORY", "CATEGORY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_AND_EMP_CATEGORY", "CATEGORY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY> CATEGORYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_AND_EMP_CATEGORY", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_AND_EMP_CATEGORY", "CATEGORY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_AND_EMP_USER_DATA", "USER_DATA")]
        public USER_DATA USER_DATA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USER_DATA>("UserSystemEntitiesModel.FK_CATE_AND_EMP_USER_DATA", "USER_DATA").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USER_DATA>("UserSystemEntitiesModel.FK_CATE_AND_EMP_USER_DATA", "USER_DATA").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<USER_DATA> USER_DATAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<USER_DATA>("UserSystemEntitiesModel.FK_CATE_AND_EMP_USER_DATA", "USER_DATA");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<USER_DATA>("UserSystemEntitiesModel.FK_CATE_AND_EMP_USER_DATA", "USER_DATA", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserSystemEntitiesModel", Name="CATE_AND_MENU")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATE_AND_MENU : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CATE_AND_MENU object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static CATE_AND_MENU CreateCATE_AND_MENU(global::System.Int32 id)
        {
            CATE_AND_MENU cATE_AND_MENU = new CATE_AND_MENU();
            cATE_AND_MENU.ID = id;
            return cATE_AND_MENU;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CATEGORY_KEY
        {
            get
            {
                return _CATEGORY_KEY;
            }
            set
            {
                OnCATEGORY_KEYChanging(value);
                ReportPropertyChanging("CATEGORY_KEY");
                _CATEGORY_KEY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CATEGORY_KEY");
                OnCATEGORY_KEYChanged();
            }
        }
        private Nullable<global::System.Int32> _CATEGORY_KEY;
        partial void OnCATEGORY_KEYChanging(Nullable<global::System.Int32> value);
        partial void OnCATEGORY_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MENU_KEY
        {
            get
            {
                return _MENU_KEY;
            }
            set
            {
                OnMENU_KEYChanging(value);
                ReportPropertyChanging("MENU_KEY");
                _MENU_KEY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MENU_KEY");
                OnMENU_KEYChanged();
            }
        }
        private Nullable<global::System.Int32> _MENU_KEY;
        partial void OnMENU_KEYChanging(Nullable<global::System.Int32> value);
        partial void OnMENU_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_AND_MENU_CATEGORY", "CATEGORY")]
        public CATEGORY CATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_AND_MENU_CATEGORY", "CATEGORY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_AND_MENU_CATEGORY", "CATEGORY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY> CATEGORYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_AND_MENU_CATEGORY", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_AND_MENU_CATEGORY", "CATEGORY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_AND_MENU_MENU_MASTER", "MENU_MASTER")]
        public MENU_MASTER MENU_MASTER
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MENU_MASTER>("UserSystemEntitiesModel.FK_CATE_AND_MENU_MENU_MASTER", "MENU_MASTER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MENU_MASTER>("UserSystemEntitiesModel.FK_CATE_AND_MENU_MENU_MASTER", "MENU_MASTER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MENU_MASTER> MENU_MASTERReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MENU_MASTER>("UserSystemEntitiesModel.FK_CATE_AND_MENU_MENU_MASTER", "MENU_MASTER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MENU_MASTER>("UserSystemEntitiesModel.FK_CATE_AND_MENU_MENU_MASTER", "MENU_MASTER", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserSystemEntitiesModel", Name="CATE_LINK_CATE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATE_LINK_CATE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CATE_LINK_CATE object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="cATEGORY_KEY">Initial value of the CATEGORY_KEY property.</param>
        /// <param name="lINK_TO_CATEGORY_KEY">Initial value of the LINK_TO_CATEGORY_KEY property.</param>
        /// <param name="lINKED_TYPE_KEY">Initial value of the LINKED_TYPE_KEY property.</param>
        public static CATE_LINK_CATE CreateCATE_LINK_CATE(global::System.Int32 id, global::System.Int32 cATEGORY_KEY, global::System.Int32 lINK_TO_CATEGORY_KEY, global::System.Int32 lINKED_TYPE_KEY)
        {
            CATE_LINK_CATE cATE_LINK_CATE = new CATE_LINK_CATE();
            cATE_LINK_CATE.ID = id;
            cATE_LINK_CATE.CATEGORY_KEY = cATEGORY_KEY;
            cATE_LINK_CATE.LINK_TO_CATEGORY_KEY = lINK_TO_CATEGORY_KEY;
            cATE_LINK_CATE.LINKED_TYPE_KEY = lINKED_TYPE_KEY;
            return cATE_LINK_CATE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CATEGORY_KEY
        {
            get
            {
                return _CATEGORY_KEY;
            }
            set
            {
                OnCATEGORY_KEYChanging(value);
                ReportPropertyChanging("CATEGORY_KEY");
                _CATEGORY_KEY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CATEGORY_KEY");
                OnCATEGORY_KEYChanged();
            }
        }
        private global::System.Int32 _CATEGORY_KEY;
        partial void OnCATEGORY_KEYChanging(global::System.Int32 value);
        partial void OnCATEGORY_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LINK_TO_CATEGORY_KEY
        {
            get
            {
                return _LINK_TO_CATEGORY_KEY;
            }
            set
            {
                OnLINK_TO_CATEGORY_KEYChanging(value);
                ReportPropertyChanging("LINK_TO_CATEGORY_KEY");
                _LINK_TO_CATEGORY_KEY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LINK_TO_CATEGORY_KEY");
                OnLINK_TO_CATEGORY_KEYChanged();
            }
        }
        private global::System.Int32 _LINK_TO_CATEGORY_KEY;
        partial void OnLINK_TO_CATEGORY_KEYChanging(global::System.Int32 value);
        partial void OnLINK_TO_CATEGORY_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LINKED_TYPE_KEY
        {
            get
            {
                return _LINKED_TYPE_KEY;
            }
            set
            {
                OnLINKED_TYPE_KEYChanging(value);
                ReportPropertyChanging("LINKED_TYPE_KEY");
                _LINKED_TYPE_KEY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LINKED_TYPE_KEY");
                OnLINKED_TYPE_KEYChanged();
            }
        }
        private global::System.Int32 _LINKED_TYPE_KEY;
        partial void OnLINKED_TYPE_KEYChanging(global::System.Int32 value);
        partial void OnLINKED_TYPE_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_LINK_CATE_CATE_LINK_CATE_TYPE", "CATE_LINK_CATE_TYPE")]
        public CATE_LINK_CATE_TYPE CATE_LINK_CATE_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATE_LINK_CATE_TYPE>("UserSystemEntitiesModel.FK_CATE_LINK_CATE_CATE_LINK_CATE_TYPE", "CATE_LINK_CATE_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATE_LINK_CATE_TYPE>("UserSystemEntitiesModel.FK_CATE_LINK_CATE_CATE_LINK_CATE_TYPE", "CATE_LINK_CATE_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATE_LINK_CATE_TYPE> CATE_LINK_CATE_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATE_LINK_CATE_TYPE>("UserSystemEntitiesModel.FK_CATE_LINK_CATE_CATE_LINK_CATE_TYPE", "CATE_LINK_CATE_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATE_LINK_CATE_TYPE>("UserSystemEntitiesModel.FK_CATE_LINK_CATE_CATE_LINK_CATE_TYPE", "CATE_LINK_CATE_TYPE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_LINK_CATE_CATEGORY", "CATEGORY")]
        public CATEGORY CATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_LINK_CATE_CATEGORY", "CATEGORY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_LINK_CATE_CATEGORY", "CATEGORY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY> CATEGORYReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_LINK_CATE_CATEGORY", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_LINK_CATE_CATEGORY", "CATEGORY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_LINKED_CATE_CATEGORY", "CATEGORY")]
        public CATEGORY CATEGORY1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_LINKED_CATE_CATEGORY", "CATEGORY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_LINKED_CATE_CATEGORY", "CATEGORY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY> CATEGORY1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_LINKED_CATE_CATEGORY", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY>("UserSystemEntitiesModel.FK_CATE_LINKED_CATE_CATEGORY", "CATEGORY", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserSystemEntitiesModel", Name="CATE_LINK_CATE_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATE_LINK_CATE_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CATE_LINK_CATE_TYPE object.
        /// </summary>
        /// <param name="lINKED_TYPE_KEY">Initial value of the LINKED_TYPE_KEY property.</param>
        /// <param name="dESCRIPTION">Initial value of the DESCRIPTION property.</param>
        public static CATE_LINK_CATE_TYPE CreateCATE_LINK_CATE_TYPE(global::System.Int32 lINKED_TYPE_KEY, global::System.String dESCRIPTION)
        {
            CATE_LINK_CATE_TYPE cATE_LINK_CATE_TYPE = new CATE_LINK_CATE_TYPE();
            cATE_LINK_CATE_TYPE.LINKED_TYPE_KEY = lINKED_TYPE_KEY;
            cATE_LINK_CATE_TYPE.DESCRIPTION = dESCRIPTION;
            return cATE_LINK_CATE_TYPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LINKED_TYPE_KEY
        {
            get
            {
                return _LINKED_TYPE_KEY;
            }
            set
            {
                if (_LINKED_TYPE_KEY != value)
                {
                    OnLINKED_TYPE_KEYChanging(value);
                    ReportPropertyChanging("LINKED_TYPE_KEY");
                    _LINKED_TYPE_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LINKED_TYPE_KEY");
                    OnLINKED_TYPE_KEYChanged();
                }
            }
        }
        private global::System.Int32 _LINKED_TYPE_KEY;
        partial void OnLINKED_TYPE_KEYChanging(global::System.Int32 value);
        partial void OnLINKED_TYPE_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DESCRIPTION
        {
            get
            {
                return _DESCRIPTION;
            }
            set
            {
                OnDESCRIPTIONChanging(value);
                ReportPropertyChanging("DESCRIPTION");
                _DESCRIPTION = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DESCRIPTION");
                OnDESCRIPTIONChanged();
            }
        }
        private global::System.String _DESCRIPTION;
        partial void OnDESCRIPTIONChanging(global::System.String value);
        partial void OnDESCRIPTIONChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_LINK_CATE_CATE_LINK_CATE_TYPE", "CATE_LINK_CATE")]
        public EntityCollection<CATE_LINK_CATE> CATE_LINK_CATE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATE_LINK_CATE>("UserSystemEntitiesModel.FK_CATE_LINK_CATE_CATE_LINK_CATE_TYPE", "CATE_LINK_CATE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATE_LINK_CATE>("UserSystemEntitiesModel.FK_CATE_LINK_CATE_CATE_LINK_CATE_TYPE", "CATE_LINK_CATE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserSystemEntitiesModel", Name="CATEGORY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATEGORY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CATEGORY object.
        /// </summary>
        /// <param name="cATEGORY_KEY">Initial value of the CATEGORY_KEY property.</param>
        public static CATEGORY CreateCATEGORY(global::System.Int32 cATEGORY_KEY)
        {
            CATEGORY cATEGORY = new CATEGORY();
            cATEGORY.CATEGORY_KEY = cATEGORY_KEY;
            return cATEGORY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CATEGORY_KEY
        {
            get
            {
                return _CATEGORY_KEY;
            }
            set
            {
                if (_CATEGORY_KEY != value)
                {
                    OnCATEGORY_KEYChanging(value);
                    ReportPropertyChanging("CATEGORY_KEY");
                    _CATEGORY_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CATEGORY_KEY");
                    OnCATEGORY_KEYChanged();
                }
            }
        }
        private global::System.Int32 _CATEGORY_KEY;
        partial void OnCATEGORY_KEYChanging(global::System.Int32 value);
        partial void OnCATEGORY_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_DESC
        {
            get
            {
                return _CATEGORY_DESC;
            }
            set
            {
                OnCATEGORY_DESCChanging(value);
                ReportPropertyChanging("CATEGORY_DESC");
                _CATEGORY_DESC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_DESC");
                OnCATEGORY_DESCChanged();
            }
        }
        private global::System.String _CATEGORY_DESC;
        partial void OnCATEGORY_DESCChanging(global::System.String value);
        partial void OnCATEGORY_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_DESC_TH
        {
            get
            {
                return _CATEGORY_DESC_TH;
            }
            set
            {
                OnCATEGORY_DESC_THChanging(value);
                ReportPropertyChanging("CATEGORY_DESC_TH");
                _CATEGORY_DESC_TH = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_DESC_TH");
                OnCATEGORY_DESC_THChanged();
            }
        }
        private global::System.String _CATEGORY_DESC_TH;
        partial void OnCATEGORY_DESC_THChanging(global::System.String value);
        partial void OnCATEGORY_DESC_THChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_VALUE
        {
            get
            {
                return _CATEGORY_VALUE;
            }
            set
            {
                OnCATEGORY_VALUEChanging(value);
                ReportPropertyChanging("CATEGORY_VALUE");
                _CATEGORY_VALUE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_VALUE");
                OnCATEGORY_VALUEChanged();
            }
        }
        private global::System.String _CATEGORY_VALUE;
        partial void OnCATEGORY_VALUEChanging(global::System.String value);
        partial void OnCATEGORY_VALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CATEGORY_TYPE_KEY
        {
            get
            {
                return _CATEGORY_TYPE_KEY;
            }
            set
            {
                OnCATEGORY_TYPE_KEYChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_KEY");
                _CATEGORY_TYPE_KEY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CATEGORY_TYPE_KEY");
                OnCATEGORY_TYPE_KEYChanged();
            }
        }
        private Nullable<global::System.Int32> _CATEGORY_TYPE_KEY;
        partial void OnCATEGORY_TYPE_KEYChanging(Nullable<global::System.Int32> value);
        partial void OnCATEGORY_TYPE_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PRIORITY
        {
            get
            {
                return _PRIORITY;
            }
            set
            {
                OnPRIORITYChanging(value);
                ReportPropertyChanging("PRIORITY");
                _PRIORITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRIORITY");
                OnPRIORITYChanged();
            }
        }
        private Nullable<global::System.Int32> _PRIORITY;
        partial void OnPRIORITYChanging(Nullable<global::System.Int32> value);
        partial void OnPRIORITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_AND_APP_CATEGORY", "CATE_AND_APP")]
        public EntityCollection<CATE_AND_APP> CATE_AND_APP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATE_AND_APP>("UserSystemEntitiesModel.FK_CATE_AND_APP_CATEGORY", "CATE_AND_APP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATE_AND_APP>("UserSystemEntitiesModel.FK_CATE_AND_APP_CATEGORY", "CATE_AND_APP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_AND_CUS_CATEGORY", "CATE_AND_CUS")]
        public EntityCollection<CATE_AND_CUS> CATE_AND_CUS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATE_AND_CUS>("UserSystemEntitiesModel.FK_CATE_AND_CUS_CATEGORY", "CATE_AND_CUS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATE_AND_CUS>("UserSystemEntitiesModel.FK_CATE_AND_CUS_CATEGORY", "CATE_AND_CUS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_AND_EMP_CATEGORY", "CATE_AND_EMP")]
        public EntityCollection<CATE_AND_EMP> CATE_AND_EMP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATE_AND_EMP>("UserSystemEntitiesModel.FK_CATE_AND_EMP_CATEGORY", "CATE_AND_EMP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATE_AND_EMP>("UserSystemEntitiesModel.FK_CATE_AND_EMP_CATEGORY", "CATE_AND_EMP", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_AND_MENU_CATEGORY", "CATE_AND_MENU")]
        public EntityCollection<CATE_AND_MENU> CATE_AND_MENU
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATE_AND_MENU>("UserSystemEntitiesModel.FK_CATE_AND_MENU_CATEGORY", "CATE_AND_MENU");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATE_AND_MENU>("UserSystemEntitiesModel.FK_CATE_AND_MENU_CATEGORY", "CATE_AND_MENU", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_LINK_CATE_CATEGORY", "CATE_LINK_CATE")]
        public EntityCollection<CATE_LINK_CATE> CATE_LINK_CATE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATE_LINK_CATE>("UserSystemEntitiesModel.FK_CATE_LINK_CATE_CATEGORY", "CATE_LINK_CATE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATE_LINK_CATE>("UserSystemEntitiesModel.FK_CATE_LINK_CATE_CATEGORY", "CATE_LINK_CATE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_LINKED_CATE_CATEGORY", "CATE_LINK_CATE")]
        public EntityCollection<CATE_LINK_CATE> CATE_LINK_CATE1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATE_LINK_CATE>("UserSystemEntitiesModel.FK_CATE_LINKED_CATE_CATEGORY", "CATE_LINK_CATE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATE_LINK_CATE>("UserSystemEntitiesModel.FK_CATE_LINKED_CATE_CATEGORY", "CATE_LINK_CATE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATEGORY_CATEGORY_TYPE", "CATEGORY_TYPE")]
        public CATEGORY_TYPE CATEGORY_TYPE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY_TYPE>("UserSystemEntitiesModel.FK_CATEGORY_CATEGORY_TYPE", "CATEGORY_TYPE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY_TYPE>("UserSystemEntitiesModel.FK_CATEGORY_CATEGORY_TYPE", "CATEGORY_TYPE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CATEGORY_TYPE> CATEGORY_TYPEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CATEGORY_TYPE>("UserSystemEntitiesModel.FK_CATEGORY_CATEGORY_TYPE", "CATEGORY_TYPE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CATEGORY_TYPE>("UserSystemEntitiesModel.FK_CATEGORY_CATEGORY_TYPE", "CATEGORY_TYPE", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserSystemEntitiesModel", Name="CATEGORY_TYPE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CATEGORY_TYPE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CATEGORY_TYPE object.
        /// </summary>
        /// <param name="cATEGORY_TYPE_KEY">Initial value of the CATEGORY_TYPE_KEY property.</param>
        public static CATEGORY_TYPE CreateCATEGORY_TYPE(global::System.Int32 cATEGORY_TYPE_KEY)
        {
            CATEGORY_TYPE cATEGORY_TYPE = new CATEGORY_TYPE();
            cATEGORY_TYPE.CATEGORY_TYPE_KEY = cATEGORY_TYPE_KEY;
            return cATEGORY_TYPE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CATEGORY_TYPE_KEY
        {
            get
            {
                return _CATEGORY_TYPE_KEY;
            }
            set
            {
                if (_CATEGORY_TYPE_KEY != value)
                {
                    OnCATEGORY_TYPE_KEYChanging(value);
                    ReportPropertyChanging("CATEGORY_TYPE_KEY");
                    _CATEGORY_TYPE_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CATEGORY_TYPE_KEY");
                    OnCATEGORY_TYPE_KEYChanged();
                }
            }
        }
        private global::System.Int32 _CATEGORY_TYPE_KEY;
        partial void OnCATEGORY_TYPE_KEYChanging(global::System.Int32 value);
        partial void OnCATEGORY_TYPE_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_TYPE_DESC
        {
            get
            {
                return _CATEGORY_TYPE_DESC;
            }
            set
            {
                OnCATEGORY_TYPE_DESCChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_DESC");
                _CATEGORY_TYPE_DESC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_TYPE_DESC");
                OnCATEGORY_TYPE_DESCChanged();
            }
        }
        private global::System.String _CATEGORY_TYPE_DESC;
        partial void OnCATEGORY_TYPE_DESCChanging(global::System.String value);
        partial void OnCATEGORY_TYPE_DESCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_TYPE_DESC_TH
        {
            get
            {
                return _CATEGORY_TYPE_DESC_TH;
            }
            set
            {
                OnCATEGORY_TYPE_DESC_THChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_DESC_TH");
                _CATEGORY_TYPE_DESC_TH = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_TYPE_DESC_TH");
                OnCATEGORY_TYPE_DESC_THChanged();
            }
        }
        private global::System.String _CATEGORY_TYPE_DESC_TH;
        partial void OnCATEGORY_TYPE_DESC_THChanging(global::System.String value);
        partial void OnCATEGORY_TYPE_DESC_THChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CATEGORY_TYPE_VALUE
        {
            get
            {
                return _CATEGORY_TYPE_VALUE;
            }
            set
            {
                OnCATEGORY_TYPE_VALUEChanging(value);
                ReportPropertyChanging("CATEGORY_TYPE_VALUE");
                _CATEGORY_TYPE_VALUE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CATEGORY_TYPE_VALUE");
                OnCATEGORY_TYPE_VALUEChanged();
            }
        }
        private global::System.String _CATEGORY_TYPE_VALUE;
        partial void OnCATEGORY_TYPE_VALUEChanging(global::System.String value);
        partial void OnCATEGORY_TYPE_VALUEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PRIORITY
        {
            get
            {
                return _PRIORITY;
            }
            set
            {
                OnPRIORITYChanging(value);
                ReportPropertyChanging("PRIORITY");
                _PRIORITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PRIORITY");
                OnPRIORITYChanged();
            }
        }
        private Nullable<global::System.Int32> _PRIORITY;
        partial void OnPRIORITYChanging(Nullable<global::System.Int32> value);
        partial void OnPRIORITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATEGORY_CATEGORY_TYPE", "CATEGORY")]
        public EntityCollection<CATEGORY> CATEGORY
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATEGORY>("UserSystemEntitiesModel.FK_CATEGORY_CATEGORY_TYPE", "CATEGORY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATEGORY>("UserSystemEntitiesModel.FK_CATEGORY_CATEGORY_TYPE", "CATEGORY", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserSystemEntitiesModel", Name="MENU_MASTER")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MENU_MASTER : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MENU_MASTER object.
        /// </summary>
        /// <param name="mENU_KEY">Initial value of the MENU_KEY property.</param>
        public static MENU_MASTER CreateMENU_MASTER(global::System.Int32 mENU_KEY)
        {
            MENU_MASTER mENU_MASTER = new MENU_MASTER();
            mENU_MASTER.MENU_KEY = mENU_KEY;
            return mENU_MASTER;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MENU_KEY
        {
            get
            {
                return _MENU_KEY;
            }
            set
            {
                if (_MENU_KEY != value)
                {
                    OnMENU_KEYChanging(value);
                    ReportPropertyChanging("MENU_KEY");
                    _MENU_KEY = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MENU_KEY");
                    OnMENU_KEYChanged();
                }
            }
        }
        private global::System.Int32 _MENU_KEY;
        partial void OnMENU_KEYChanging(global::System.Int32 value);
        partial void OnMENU_KEYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MENU_TITLE
        {
            get
            {
                return _MENU_TITLE;
            }
            set
            {
                OnMENU_TITLEChanging(value);
                ReportPropertyChanging("MENU_TITLE");
                _MENU_TITLE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MENU_TITLE");
                OnMENU_TITLEChanged();
            }
        }
        private global::System.String _MENU_TITLE;
        partial void OnMENU_TITLEChanging(global::System.String value);
        partial void OnMENU_TITLEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MENU_URL
        {
            get
            {
                return _MENU_URL;
            }
            set
            {
                OnMENU_URLChanging(value);
                ReportPropertyChanging("MENU_URL");
                _MENU_URL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MENU_URL");
                OnMENU_URLChanged();
            }
        }
        private global::System.String _MENU_URL;
        partial void OnMENU_URLChanging(global::System.String value);
        partial void OnMENU_URLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MENU_POPUP_OPT
        {
            get
            {
                return _MENU_POPUP_OPT;
            }
            set
            {
                OnMENU_POPUP_OPTChanging(value);
                ReportPropertyChanging("MENU_POPUP_OPT");
                _MENU_POPUP_OPT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MENU_POPUP_OPT");
                OnMENU_POPUP_OPTChanged();
            }
        }
        private global::System.String _MENU_POPUP_OPT;
        partial void OnMENU_POPUP_OPTChanging(global::System.String value);
        partial void OnMENU_POPUP_OPTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MENU_REL
        {
            get
            {
                return _MENU_REL;
            }
            set
            {
                OnMENU_RELChanging(value);
                ReportPropertyChanging("MENU_REL");
                _MENU_REL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MENU_REL");
                OnMENU_RELChanged();
            }
        }
        private global::System.String _MENU_REL;
        partial void OnMENU_RELChanging(global::System.String value);
        partial void OnMENU_RELChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MENU_TOOLTIP
        {
            get
            {
                return _MENU_TOOLTIP;
            }
            set
            {
                OnMENU_TOOLTIPChanging(value);
                ReportPropertyChanging("MENU_TOOLTIP");
                _MENU_TOOLTIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MENU_TOOLTIP");
                OnMENU_TOOLTIPChanged();
            }
        }
        private global::System.String _MENU_TOOLTIP;
        partial void OnMENU_TOOLTIPChanging(global::System.String value);
        partial void OnMENU_TOOLTIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MENU_PRIORITY
        {
            get
            {
                return _MENU_PRIORITY;
            }
            set
            {
                OnMENU_PRIORITYChanging(value);
                ReportPropertyChanging("MENU_PRIORITY");
                _MENU_PRIORITY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MENU_PRIORITY");
                OnMENU_PRIORITYChanged();
            }
        }
        private Nullable<global::System.Int32> _MENU_PRIORITY;
        partial void OnMENU_PRIORITYChanging(Nullable<global::System.Int32> value);
        partial void OnMENU_PRIORITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> MENU_DEL_FLAG
        {
            get
            {
                return _MENU_DEL_FLAG;
            }
            set
            {
                OnMENU_DEL_FLAGChanging(value);
                ReportPropertyChanging("MENU_DEL_FLAG");
                _MENU_DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MENU_DEL_FLAG");
                OnMENU_DEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _MENU_DEL_FLAG;
        partial void OnMENU_DEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnMENU_DEL_FLAGChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MENU_PARENT_KEY
        {
            get
            {
                return _MENU_PARENT_KEY;
            }
            set
            {
                OnMENU_PARENT_KEYChanging(value);
                ReportPropertyChanging("MENU_PARENT_KEY");
                _MENU_PARENT_KEY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MENU_PARENT_KEY");
                OnMENU_PARENT_KEYChanged();
            }
        }
        private Nullable<global::System.Int32> _MENU_PARENT_KEY;
        partial void OnMENU_PARENT_KEYChanging(Nullable<global::System.Int32> value);
        partial void OnMENU_PARENT_KEYChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_AND_MENU_MENU_MASTER", "CATE_AND_MENU")]
        public EntityCollection<CATE_AND_MENU> CATE_AND_MENU
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATE_AND_MENU>("UserSystemEntitiesModel.FK_CATE_AND_MENU_MENU_MASTER", "CATE_AND_MENU");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATE_AND_MENU>("UserSystemEntitiesModel.FK_CATE_AND_MENU_MENU_MASTER", "CATE_AND_MENU", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_MENU_MASTER_MENU_MASTER", "MENU_MASTER1")]
        public EntityCollection<MENU_MASTER> MENU_MASTER1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MENU_MASTER>("UserSystemEntitiesModel.FK_MENU_MASTER_MENU_MASTER", "MENU_MASTER1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MENU_MASTER>("UserSystemEntitiesModel.FK_MENU_MASTER_MENU_MASTER", "MENU_MASTER1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_MENU_MASTER_MENU_MASTER", "MENU_MASTER")]
        public MENU_MASTER MENU_MASTER2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MENU_MASTER>("UserSystemEntitiesModel.FK_MENU_MASTER_MENU_MASTER", "MENU_MASTER").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MENU_MASTER>("UserSystemEntitiesModel.FK_MENU_MASTER_MENU_MASTER", "MENU_MASTER").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MENU_MASTER> MENU_MASTER2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MENU_MASTER>("UserSystemEntitiesModel.FK_MENU_MASTER_MENU_MASTER", "MENU_MASTER");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MENU_MASTER>("UserSystemEntitiesModel.FK_MENU_MASTER_MENU_MASTER", "MENU_MASTER", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserSystemEntitiesModel", Name="TB_EMPLOYEE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TB_EMPLOYEE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TB_EMPLOYEE object.
        /// </summary>
        /// <param name="eMP_ID">Initial value of the EMP_ID property.</param>
        public static TB_EMPLOYEE CreateTB_EMPLOYEE(global::System.String eMP_ID)
        {
            TB_EMPLOYEE tB_EMPLOYEE = new TB_EMPLOYEE();
            tB_EMPLOYEE.EMP_ID = eMP_ID;
            return tB_EMPLOYEE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMP_ID
        {
            get
            {
                return _EMP_ID;
            }
            set
            {
                if (_EMP_ID != value)
                {
                    OnEMP_IDChanging(value);
                    ReportPropertyChanging("EMP_ID");
                    _EMP_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EMP_ID");
                    OnEMP_IDChanged();
                }
            }
        }
        private global::System.String _EMP_ID;
        partial void OnEMP_IDChanging(global::System.String value);
        partial void OnEMP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> TITLE_CODE
        {
            get
            {
                return _TITLE_CODE;
            }
            set
            {
                OnTITLE_CODEChanging(value);
                ReportPropertyChanging("TITLE_CODE");
                _TITLE_CODE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TITLE_CODE");
                OnTITLE_CODEChanged();
            }
        }
        private Nullable<global::System.Byte> _TITLE_CODE;
        partial void OnTITLE_CODEChanging(Nullable<global::System.Byte> value);
        partial void OnTITLE_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMPNAME
        {
            get
            {
                return _EMPNAME;
            }
            set
            {
                OnEMPNAMEChanging(value);
                ReportPropertyChanging("EMPNAME");
                _EMPNAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMPNAME");
                OnEMPNAMEChanged();
            }
        }
        private global::System.String _EMPNAME;
        partial void OnEMPNAMEChanging(global::System.String value);
        partial void OnEMPNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMPSURNAME
        {
            get
            {
                return _EMPSURNAME;
            }
            set
            {
                OnEMPSURNAMEChanging(value);
                ReportPropertyChanging("EMPSURNAME");
                _EMPSURNAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMPSURNAME");
                OnEMPSURNAMEChanged();
            }
        }
        private global::System.String _EMPSURNAME;
        partial void OnEMPSURNAMEChanging(global::System.String value);
        partial void OnEMPSURNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMPNAME_E
        {
            get
            {
                return _EMPNAME_E;
            }
            set
            {
                OnEMPNAME_EChanging(value);
                ReportPropertyChanging("EMPNAME_E");
                _EMPNAME_E = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMPNAME_E");
                OnEMPNAME_EChanged();
            }
        }
        private global::System.String _EMPNAME_E;
        partial void OnEMPNAME_EChanging(global::System.String value);
        partial void OnEMPNAME_EChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMPSURNAME_E
        {
            get
            {
                return _EMPSURNAME_E;
            }
            set
            {
                OnEMPSURNAME_EChanging(value);
                ReportPropertyChanging("EMPSURNAME_E");
                _EMPSURNAME_E = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMPSURNAME_E");
                OnEMPSURNAME_EChanged();
            }
        }
        private global::System.String _EMPSURNAME_E;
        partial void OnEMPSURNAME_EChanging(global::System.String value);
        partial void OnEMPSURNAME_EChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMAIL
        {
            get
            {
                return _EMAIL;
            }
            set
            {
                OnEMAILChanging(value);
                ReportPropertyChanging("EMAIL");
                _EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMAIL");
                OnEMAILChanged();
            }
        }
        private global::System.String _EMAIL;
        partial void OnEMAILChanging(global::System.String value);
        partial void OnEMAILChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IDCARD
        {
            get
            {
                return _IDCARD;
            }
            set
            {
                OnIDCARDChanging(value);
                ReportPropertyChanging("IDCARD");
                _IDCARD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IDCARD");
                OnIDCARDChanged();
            }
        }
        private global::System.String _IDCARD;
        partial void OnIDCARDChanging(global::System.String value);
        partial void OnIDCARDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TAX_NO
        {
            get
            {
                return _TAX_NO;
            }
            set
            {
                OnTAX_NOChanging(value);
                ReportPropertyChanging("TAX_NO");
                _TAX_NO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TAX_NO");
                OnTAX_NOChanged();
            }
        }
        private global::System.String _TAX_NO;
        partial void OnTAX_NOChanging(global::System.String value);
        partial void OnTAX_NOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ACCNO
        {
            get
            {
                return _ACCNO;
            }
            set
            {
                OnACCNOChanging(value);
                ReportPropertyChanging("ACCNO");
                _ACCNO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ACCNO");
                OnACCNOChanged();
            }
        }
        private global::System.String _ACCNO;
        partial void OnACCNOChanging(global::System.String value);
        partial void OnACCNOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ADDRESS
        {
            get
            {
                return _ADDRESS;
            }
            set
            {
                OnADDRESSChanging(value);
                ReportPropertyChanging("ADDRESS");
                _ADDRESS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ADDRESS");
                OnADDRESSChanged();
            }
        }
        private global::System.String _ADDRESS;
        partial void OnADDRESSChanging(global::System.String value);
        partial void OnADDRESSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SOI
        {
            get
            {
                return _SOI;
            }
            set
            {
                OnSOIChanging(value);
                ReportPropertyChanging("SOI");
                _SOI = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SOI");
                OnSOIChanged();
            }
        }
        private global::System.String _SOI;
        partial void OnSOIChanging(global::System.String value);
        partial void OnSOIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ROAD
        {
            get
            {
                return _ROAD;
            }
            set
            {
                OnROADChanging(value);
                ReportPropertyChanging("ROAD");
                _ROAD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ROAD");
                OnROADChanged();
            }
        }
        private global::System.String _ROAD;
        partial void OnROADChanging(global::System.String value);
        partial void OnROADChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LOCALITY
        {
            get
            {
                return _LOCALITY;
            }
            set
            {
                OnLOCALITYChanging(value);
                ReportPropertyChanging("LOCALITY");
                _LOCALITY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LOCALITY");
                OnLOCALITYChanged();
            }
        }
        private global::System.String _LOCALITY;
        partial void OnLOCALITYChanging(global::System.String value);
        partial void OnLOCALITYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DISTRINCT
        {
            get
            {
                return _DISTRINCT;
            }
            set
            {
                OnDISTRINCTChanging(value);
                ReportPropertyChanging("DISTRINCT");
                _DISTRINCT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DISTRINCT");
                OnDISTRINCTChanged();
            }
        }
        private global::System.String _DISTRINCT;
        partial void OnDISTRINCTChanging(global::System.String value);
        partial void OnDISTRINCTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PROV_CODE
        {
            get
            {
                return _PROV_CODE;
            }
            set
            {
                OnPROV_CODEChanging(value);
                ReportPropertyChanging("PROV_CODE");
                _PROV_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PROV_CODE");
                OnPROV_CODEChanged();
            }
        }
        private global::System.String _PROV_CODE;
        partial void OnPROV_CODEChanging(global::System.String value);
        partial void OnPROV_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZIPCODE
        {
            get
            {
                return _ZIPCODE;
            }
            set
            {
                OnZIPCODEChanging(value);
                ReportPropertyChanging("ZIPCODE");
                _ZIPCODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZIPCODE");
                OnZIPCODEChanged();
            }
        }
        private global::System.String _ZIPCODE;
        partial void OnZIPCODEChanging(global::System.String value);
        partial void OnZIPCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TEL_HOME
        {
            get
            {
                return _TEL_HOME;
            }
            set
            {
                OnTEL_HOMEChanging(value);
                ReportPropertyChanging("TEL_HOME");
                _TEL_HOME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TEL_HOME");
                OnTEL_HOMEChanged();
            }
        }
        private global::System.String _TEL_HOME;
        partial void OnTEL_HOMEChanging(global::System.String value);
        partial void OnTEL_HOMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TEL_MOBILE
        {
            get
            {
                return _TEL_MOBILE;
            }
            set
            {
                OnTEL_MOBILEChanging(value);
                ReportPropertyChanging("TEL_MOBILE");
                _TEL_MOBILE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TEL_MOBILE");
                OnTEL_MOBILEChanged();
            }
        }
        private global::System.String _TEL_MOBILE;
        partial void OnTEL_MOBILEChanging(global::System.String value);
        partial void OnTEL_MOBILEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TEL_INDOOR
        {
            get
            {
                return _TEL_INDOOR;
            }
            set
            {
                OnTEL_INDOORChanging(value);
                ReportPropertyChanging("TEL_INDOOR");
                _TEL_INDOOR = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TEL_INDOOR");
                OnTEL_INDOORChanged();
            }
        }
        private global::System.String _TEL_INDOOR;
        partial void OnTEL_INDOORChanging(global::System.String value);
        partial void OnTEL_INDOORChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DATEOFBIRTH
        {
            get
            {
                return _DATEOFBIRTH;
            }
            set
            {
                OnDATEOFBIRTHChanging(value);
                ReportPropertyChanging("DATEOFBIRTH");
                _DATEOFBIRTH = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEOFBIRTH");
                OnDATEOFBIRTHChanged();
            }
        }
        private Nullable<global::System.DateTime> _DATEOFBIRTH;
        partial void OnDATEOFBIRTHChanging(Nullable<global::System.DateTime> value);
        partial void OnDATEOFBIRTHChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IMAGENAME
        {
            get
            {
                return _IMAGENAME;
            }
            set
            {
                OnIMAGENAMEChanging(value);
                ReportPropertyChanging("IMAGENAME");
                _IMAGENAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IMAGENAME");
                OnIMAGENAMEChanged();
            }
        }
        private global::System.String _IMAGENAME;
        partial void OnIMAGENAMEChanging(global::System.String value);
        partial void OnIMAGENAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DATEOFSTART
        {
            get
            {
                return _DATEOFSTART;
            }
            set
            {
                OnDATEOFSTARTChanging(value);
                ReportPropertyChanging("DATEOFSTART");
                _DATEOFSTART = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DATEOFSTART");
                OnDATEOFSTARTChanged();
            }
        }
        private Nullable<global::System.DateTime> _DATEOFSTART;
        partial void OnDATEOFSTARTChanging(Nullable<global::System.DateTime> value);
        partial void OnDATEOFSTARTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String STATUS
        {
            get
            {
                return _STATUS;
            }
            set
            {
                OnSTATUSChanging(value);
                ReportPropertyChanging("STATUS");
                _STATUS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("STATUS");
                OnSTATUSChanged();
            }
        }
        private global::System.String _STATUS;
        partial void OnSTATUSChanging(global::System.String value);
        partial void OnSTATUSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TEAM_ID
        {
            get
            {
                return _TEAM_ID;
            }
            set
            {
                OnTEAM_IDChanging(value);
                ReportPropertyChanging("TEAM_ID");
                _TEAM_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TEAM_ID");
                OnTEAM_IDChanged();
            }
        }
        private global::System.String _TEAM_ID;
        partial void OnTEAM_IDChanging(global::System.String value);
        partial void OnTEAM_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GROUP_HEAD
        {
            get
            {
                return _GROUP_HEAD;
            }
            set
            {
                OnGROUP_HEADChanging(value);
                ReportPropertyChanging("GROUP_HEAD");
                _GROUP_HEAD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GROUP_HEAD");
                OnGROUP_HEADChanged();
            }
        }
        private global::System.String _GROUP_HEAD;
        partial void OnGROUP_HEADChanging(global::System.String value);
        partial void OnGROUP_HEADChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> ROLE
        {
            get
            {
                return _ROLE;
            }
            set
            {
                OnROLEChanging(value);
                ReportPropertyChanging("ROLE");
                _ROLE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ROLE");
                OnROLEChanged();
            }
        }
        private Nullable<global::System.Byte> _ROLE;
        partial void OnROLEChanging(Nullable<global::System.Byte> value);
        partial void OnROLEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PERMIT
        {
            get
            {
                return _PERMIT;
            }
            set
            {
                OnPERMITChanging(value);
                ReportPropertyChanging("PERMIT");
                _PERMIT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PERMIT");
                OnPERMITChanged();
            }
        }
        private global::System.String _PERMIT;
        partial void OnPERMITChanging(global::System.String value);
        partial void OnPERMITChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String USERNAME
        {
            get
            {
                return _USERNAME;
            }
            set
            {
                OnUSERNAMEChanging(value);
                ReportPropertyChanging("USERNAME");
                _USERNAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("USERNAME");
                OnUSERNAMEChanged();
            }
        }
        private global::System.String _USERNAME;
        partial void OnUSERNAMEChanging(global::System.String value);
        partial void OnUSERNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PASSWD
        {
            get
            {
                return _PASSWD;
            }
            set
            {
                OnPASSWDChanging(value);
                ReportPropertyChanging("PASSWD");
                _PASSWD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PASSWD");
                OnPASSWDChanged();
            }
        }
        private global::System.String _PASSWD;
        partial void OnPASSWDChanging(global::System.String value);
        partial void OnPASSWDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UP_DT
        {
            get
            {
                return _UP_DT;
            }
            set
            {
                OnUP_DTChanging(value);
                ReportPropertyChanging("UP_DT");
                _UP_DT = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UP_DT");
                OnUP_DTChanged();
            }
        }
        private Nullable<global::System.DateTime> _UP_DT;
        partial void OnUP_DTChanging(Nullable<global::System.DateTime> value);
        partial void OnUP_DTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Dept
        {
            get
            {
                return _Dept;
            }
            set
            {
                OnDeptChanging(value);
                ReportPropertyChanging("Dept");
                _Dept = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Dept");
                OnDeptChanged();
            }
        }
        private Nullable<global::System.Int16> _Dept;
        partial void OnDeptChanging(Nullable<global::System.Int16> value);
        partial void OnDeptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Id_Region
        {
            get
            {
                return _Id_Region;
            }
            set
            {
                OnId_RegionChanging(value);
                ReportPropertyChanging("Id_Region");
                _Id_Region = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Region");
                OnId_RegionChanged();
            }
        }
        private Nullable<global::System.Int16> _Id_Region;
        partial void OnId_RegionChanging(Nullable<global::System.Int16> value);
        partial void OnId_RegionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Id_Branch
        {
            get
            {
                return _Id_Branch;
            }
            set
            {
                OnId_BranchChanging(value);
                ReportPropertyChanging("Id_Branch");
                _Id_Branch = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id_Branch");
                OnId_BranchChanged();
            }
        }
        private Nullable<global::System.Int16> _Id_Branch;
        partial void OnId_BranchChanging(Nullable<global::System.Int16> value);
        partial void OnId_BranchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String POSITION_CODE
        {
            get
            {
                return _POSITION_CODE;
            }
            set
            {
                OnPOSITION_CODEChanging(value);
                ReportPropertyChanging("POSITION_CODE");
                _POSITION_CODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("POSITION_CODE");
                OnPOSITION_CODEChanged();
            }
        }
        private global::System.String _POSITION_CODE;
        partial void OnPOSITION_CODEChanging(global::System.String value);
        partial void OnPOSITION_CODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Id_Region_Group
        {
            get
            {
                return _Id_Region_Group;
            }
            set
            {
                OnId_Region_GroupChanging(value);
                ReportPropertyChanging("Id_Region_Group");
                _Id_Region_Group = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Id_Region_Group");
                OnId_Region_GroupChanged();
            }
        }
        private global::System.String _Id_Region_Group;
        partial void OnId_Region_GroupChanging(global::System.String value);
        partial void OnId_Region_GroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Id_Branch_Group
        {
            get
            {
                return _Id_Branch_Group;
            }
            set
            {
                OnId_Branch_GroupChanging(value);
                ReportPropertyChanging("Id_Branch_Group");
                _Id_Branch_Group = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Id_Branch_Group");
                OnId_Branch_GroupChanged();
            }
        }
        private global::System.String _Id_Branch_Group;
        partial void OnId_Branch_GroupChanging(global::System.String value);
        partial void OnId_Branch_GroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Id_Group_Group
        {
            get
            {
                return _Id_Group_Group;
            }
            set
            {
                OnId_Group_GroupChanging(value);
                ReportPropertyChanging("Id_Group_Group");
                _Id_Group_Group = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Id_Group_Group");
                OnId_Group_GroupChanged();
            }
        }
        private global::System.String _Id_Group_Group;
        partial void OnId_Group_GroupChanging(global::System.String value);
        partial void OnId_Group_GroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String level_id
        {
            get
            {
                return _level_id;
            }
            set
            {
                Onlevel_idChanging(value);
                ReportPropertyChanging("level_id");
                _level_id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("level_id");
                Onlevel_idChanged();
            }
        }
        private global::System.String _level_id;
        partial void Onlevel_idChanging(global::System.String value);
        partial void Onlevel_idChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UserSystemEntitiesModel", Name="USER_DATA")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class USER_DATA : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new USER_DATA object.
        /// </summary>
        /// <param name="eMP_ID">Initial value of the EMP_ID property.</param>
        /// <param name="eMP_TITLE">Initial value of the EMP_TITLE property.</param>
        /// <param name="eMP_NAME">Initial value of the EMP_NAME property.</param>
        /// <param name="eMP_SURNAME">Initial value of the EMP_SURNAME property.</param>
        public static USER_DATA CreateUSER_DATA(global::System.String eMP_ID, global::System.String eMP_TITLE, global::System.String eMP_NAME, global::System.String eMP_SURNAME)
        {
            USER_DATA uSER_DATA = new USER_DATA();
            uSER_DATA.EMP_ID = eMP_ID;
            uSER_DATA.EMP_TITLE = eMP_TITLE;
            uSER_DATA.EMP_NAME = eMP_NAME;
            uSER_DATA.EMP_SURNAME = eMP_SURNAME;
            return uSER_DATA;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMP_ID
        {
            get
            {
                return _EMP_ID;
            }
            set
            {
                if (_EMP_ID != value)
                {
                    OnEMP_IDChanging(value);
                    ReportPropertyChanging("EMP_ID");
                    _EMP_ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("EMP_ID");
                    OnEMP_IDChanged();
                }
            }
        }
        private global::System.String _EMP_ID;
        partial void OnEMP_IDChanging(global::System.String value);
        partial void OnEMP_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMP_TITLE
        {
            get
            {
                return _EMP_TITLE;
            }
            set
            {
                OnEMP_TITLEChanging(value);
                ReportPropertyChanging("EMP_TITLE");
                _EMP_TITLE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EMP_TITLE");
                OnEMP_TITLEChanged();
            }
        }
        private global::System.String _EMP_TITLE;
        partial void OnEMP_TITLEChanging(global::System.String value);
        partial void OnEMP_TITLEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMP_NAME
        {
            get
            {
                return _EMP_NAME;
            }
            set
            {
                OnEMP_NAMEChanging(value);
                ReportPropertyChanging("EMP_NAME");
                _EMP_NAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EMP_NAME");
                OnEMP_NAMEChanged();
            }
        }
        private global::System.String _EMP_NAME;
        partial void OnEMP_NAMEChanging(global::System.String value);
        partial void OnEMP_NAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMP_SURNAME
        {
            get
            {
                return _EMP_SURNAME;
            }
            set
            {
                OnEMP_SURNAMEChanging(value);
                ReportPropertyChanging("EMP_SURNAME");
                _EMP_SURNAME = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EMP_SURNAME");
                OnEMP_SURNAMEChanged();
            }
        }
        private global::System.String _EMP_SURNAME;
        partial void OnEMP_SURNAMEChanging(global::System.String value);
        partial void OnEMP_SURNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMP_TITLE_E
        {
            get
            {
                return _EMP_TITLE_E;
            }
            set
            {
                OnEMP_TITLE_EChanging(value);
                ReportPropertyChanging("EMP_TITLE_E");
                _EMP_TITLE_E = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMP_TITLE_E");
                OnEMP_TITLE_EChanged();
            }
        }
        private global::System.String _EMP_TITLE_E;
        partial void OnEMP_TITLE_EChanging(global::System.String value);
        partial void OnEMP_TITLE_EChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMP_NAME_E
        {
            get
            {
                return _EMP_NAME_E;
            }
            set
            {
                OnEMP_NAME_EChanging(value);
                ReportPropertyChanging("EMP_NAME_E");
                _EMP_NAME_E = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMP_NAME_E");
                OnEMP_NAME_EChanged();
            }
        }
        private global::System.String _EMP_NAME_E;
        partial void OnEMP_NAME_EChanging(global::System.String value);
        partial void OnEMP_NAME_EChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMP_SURNAME_E
        {
            get
            {
                return _EMP_SURNAME_E;
            }
            set
            {
                OnEMP_SURNAME_EChanging(value);
                ReportPropertyChanging("EMP_SURNAME_E");
                _EMP_SURNAME_E = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMP_SURNAME_E");
                OnEMP_SURNAME_EChanged();
            }
        }
        private global::System.String _EMP_SURNAME_E;
        partial void OnEMP_SURNAME_EChanging(global::System.String value);
        partial void OnEMP_SURNAME_EChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PASSWD
        {
            get
            {
                return _PASSWD;
            }
            set
            {
                OnPASSWDChanging(value);
                ReportPropertyChanging("PASSWD");
                _PASSWD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PASSWD");
                OnPASSWDChanged();
            }
        }
        private global::System.String _PASSWD;
        partial void OnPASSWDChanging(global::System.String value);
        partial void OnPASSWDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EMAIL
        {
            get
            {
                return _EMAIL;
            }
            set
            {
                OnEMAILChanging(value);
                ReportPropertyChanging("EMAIL");
                _EMAIL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EMAIL");
                OnEMAILChanged();
            }
        }
        private global::System.String _EMAIL;
        partial void OnEMAILChanging(global::System.String value);
        partial void OnEMAILChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CREATE_DATE
        {
            get
            {
                return _CREATE_DATE;
            }
            set
            {
                OnCREATE_DATEChanging(value);
                ReportPropertyChanging("CREATE_DATE");
                _CREATE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CREATE_DATE");
                OnCREATE_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _CREATE_DATE;
        partial void OnCREATE_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnCREATE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EXPIRE_DATE
        {
            get
            {
                return _EXPIRE_DATE;
            }
            set
            {
                OnEXPIRE_DATEChanging(value);
                ReportPropertyChanging("EXPIRE_DATE");
                _EXPIRE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EXPIRE_DATE");
                OnEXPIRE_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _EXPIRE_DATE;
        partial void OnEXPIRE_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnEXPIRE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UPDATE_DATE
        {
            get
            {
                return _UPDATE_DATE;
            }
            set
            {
                OnUPDATE_DATEChanging(value);
                ReportPropertyChanging("UPDATE_DATE");
                _UPDATE_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UPDATE_DATE");
                OnUPDATE_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _UPDATE_DATE;
        partial void OnUPDATE_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnUPDATE_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LAST_SIGN_ON_DATE
        {
            get
            {
                return _LAST_SIGN_ON_DATE;
            }
            set
            {
                OnLAST_SIGN_ON_DATEChanging(value);
                ReportPropertyChanging("LAST_SIGN_ON_DATE");
                _LAST_SIGN_ON_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAST_SIGN_ON_DATE");
                OnLAST_SIGN_ON_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _LAST_SIGN_ON_DATE;
        partial void OnLAST_SIGN_ON_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnLAST_SIGN_ON_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LAST_CHANGE_PASS_DATE
        {
            get
            {
                return _LAST_CHANGE_PASS_DATE;
            }
            set
            {
                OnLAST_CHANGE_PASS_DATEChanging(value);
                ReportPropertyChanging("LAST_CHANGE_PASS_DATE");
                _LAST_CHANGE_PASS_DATE = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LAST_CHANGE_PASS_DATE");
                OnLAST_CHANGE_PASS_DATEChanged();
            }
        }
        private Nullable<global::System.DateTime> _LAST_CHANGE_PASS_DATE;
        partial void OnLAST_CHANGE_PASS_DATEChanging(Nullable<global::System.DateTime> value);
        partial void OnLAST_CHANGE_PASS_DATEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DEL_FLAG
        {
            get
            {
                return _DEL_FLAG;
            }
            set
            {
                OnDEL_FLAGChanging(value);
                ReportPropertyChanging("DEL_FLAG");
                _DEL_FLAG = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DEL_FLAG");
                OnDEL_FLAGChanged();
            }
        }
        private Nullable<global::System.Boolean> _DEL_FLAG;
        partial void OnDEL_FLAGChanging(Nullable<global::System.Boolean> value);
        partial void OnDEL_FLAGChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UserSystemEntitiesModel", "FK_CATE_AND_EMP_USER_DATA", "CATE_AND_EMP")]
        public EntityCollection<CATE_AND_EMP> CATE_AND_EMP
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CATE_AND_EMP>("UserSystemEntitiesModel.FK_CATE_AND_EMP_USER_DATA", "CATE_AND_EMP");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CATE_AND_EMP>("UserSystemEntitiesModel.FK_CATE_AND_EMP_USER_DATA", "CATE_AND_EMP", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
