'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.3053
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection
Imports System.Runtime.Serialization

Namespace webservice.linq
	
	<System.Data.Linq.Mapping.DatabaseAttribute(Name:="Bay01_test")>  _
	Partial Public Class CustomerLinqDataContext
		Inherits System.Data.Linq.DataContext
		
		Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertCUSTOMER(instance As CUSTOMER)
    End Sub
    Partial Private Sub UpdateCUSTOMER(instance As CUSTOMER)
    End Sub
    Partial Private Sub DeleteCUSTOMER(instance As CUSTOMER)
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("BAY01ConnectionString").ConnectionString, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public ReadOnly Property CUSTOMERs() As System.Data.Linq.Table(Of CUSTOMER)
			Get
				Return Me.GetTable(Of CUSTOMER)
			End Get
		End Property
		
		<FunctionAttribute(Name:="dbo.SP_CUSTOMER_SME_SELECT_BY_CIF")>  _
		Public Function SP_CUSTOMER_SME_SELECT_BY_CIF(<Parameter(Name:="CIF", DbType:="Int")> ByVal cIF As System.Nullable(Of Integer)) As ISingleResult(Of SP_CUSTOMER_SME_SELECT_BY_CIFResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), cIF)
			Return CType(result.ReturnValue,ISingleResult(Of SP_CUSTOMER_SME_SELECT_BY_CIFResult))
		End Function
		
		<FunctionAttribute(Name:="dbo.P_GET_EXPORTER_PRE_DETAIL_BY_CIF")>  _
		Public Function P_GET_EXPORTER_PRE_DETAIL_BY_CIF(<Parameter(Name:="CIF", DbType:="Int")> ByVal cIF As System.Nullable(Of Integer)) As ISingleResult(Of P_GET_EXPORTER_PRE_DETAIL_BY_CIFResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), cIF)
			Return CType(result.ReturnValue,ISingleResult(Of P_GET_EXPORTER_PRE_DETAIL_BY_CIFResult))
		End Function
		
		<FunctionAttribute(Name:="dbo.P_GET_EXPORTER_DETAIL_BY_CIF")>  _
		Public Function P_GET_EXPORTER_DETAIL_BY_CIF(<Parameter(Name:="CIF", DbType:="Int")> ByVal cIF As System.Nullable(Of Integer)) As ISingleResult(Of P_GET_EXPORTER_DETAIL_BY_CIFResult)
			Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), cIF)
			Return CType(result.ReturnValue,ISingleResult(Of P_GET_EXPORTER_DETAIL_BY_CIFResult))
		End Function
	End Class
	
	<Table(Name:="dbo.CUSTOMER"),  _
	 DataContract()>  _
	Partial Public Class CUSTOMER
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _CIF As Integer
		
		Private _CUS_TITLE As String
		
		Private _CUS_FIRST As String
		
		Private _CUS_LAST As String
		
		Private _CUS1_TITLE As String
		
		Private _CUS1_FIRST As String
		
		Private _CUS1_LAST As String
		
		Private _CUS2_TITLE As String
		
		Private _CUS2_FIRST As String
		
		Private _CUS2_LAST As String
		
		Private _CUS3_TITLE As String
		
		Private _CUS3_FIRST As String
		
		Private _CUS3_LAST As String
		
		Private _CTITLE_E As String
		
		Private _CFIRST_E As String
		
		Private _CLAST_E As String
		
		Private _CifType As System.Nullable(Of Char)
		
		Private _BOTID As System.Nullable(Of Integer)
		
		Private _MAIN_CUST As System.Nullable(Of Integer)
		
		Private _GROUP_CUST As System.Nullable(Of Char)
		
		Private _GROUPCIF As System.Nullable(Of Integer)
		
		Private _BAYRATING As String
		
		Private _RATING As String
		
		Private _ADDR1 As String
		
		Private _ADDR2 As String
		
		Private _PROV As String
		
		Private _ZIPCODE As System.Nullable(Of Integer)
		
		Private _TEL_HOME As String
		
		Private _TEL_OFF As String
		
		Private _TAX_NO As String
		
		Private _CUS_TYPE As String
		
		Private _BUSI_TYPE As String
		
		Private _CLASS As System.Nullable(Of Char)
		
		Private _IDCARD As String
		
		Private _OFFICR_ID As System.Nullable(Of Long)
		
		Private _DATEFAS As System.Nullable(Of Date)
		
		Private _BEINGCUST As System.Nullable(Of Date)
		
		Private _BTHDATE As System.Nullable(Of Date)
		
		Private _DEPTFLAG As System.Nullable(Of Byte)
		
		Private _DEPTTRAN As System.Nullable(Of Integer)
		
		Private _CIF0 As System.Nullable(Of Integer)
		
		Private _CIF1 As System.Nullable(Of Integer)
		
		Private _CIF2 As System.Nullable(Of Integer)
		
		Private _PROVSHOP As String
		
		Private _SEX As System.Nullable(Of Char)
		
		Private _ADDRWORK1 As String
		
		Private _ADDRWORK2 As String
		
		Private _ZIPSHOP As System.Nullable(Of Integer)
		
		Private _CARDTYPE As String
		
		Private _CARDNO As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCIFChanging(value As Integer)
    End Sub
    Partial Private Sub OnCIFChanged()
    End Sub
    Partial Private Sub OnCUS_TITLEChanging(value As String)
    End Sub
    Partial Private Sub OnCUS_TITLEChanged()
    End Sub
    Partial Private Sub OnCUS_FIRSTChanging(value As String)
    End Sub
    Partial Private Sub OnCUS_FIRSTChanged()
    End Sub
    Partial Private Sub OnCUS_LASTChanging(value As String)
    End Sub
    Partial Private Sub OnCUS_LASTChanged()
    End Sub
    Partial Private Sub OnCUS1_TITLEChanging(value As String)
    End Sub
    Partial Private Sub OnCUS1_TITLEChanged()
    End Sub
    Partial Private Sub OnCUS1_FIRSTChanging(value As String)
    End Sub
    Partial Private Sub OnCUS1_FIRSTChanged()
    End Sub
    Partial Private Sub OnCUS1_LASTChanging(value As String)
    End Sub
    Partial Private Sub OnCUS1_LASTChanged()
    End Sub
    Partial Private Sub OnCUS2_TITLEChanging(value As String)
    End Sub
    Partial Private Sub OnCUS2_TITLEChanged()
    End Sub
    Partial Private Sub OnCUS2_FIRSTChanging(value As String)
    End Sub
    Partial Private Sub OnCUS2_FIRSTChanged()
    End Sub
    Partial Private Sub OnCUS2_LASTChanging(value As String)
    End Sub
    Partial Private Sub OnCUS2_LASTChanged()
    End Sub
    Partial Private Sub OnCUS3_TITLEChanging(value As String)
    End Sub
    Partial Private Sub OnCUS3_TITLEChanged()
    End Sub
    Partial Private Sub OnCUS3_FIRSTChanging(value As String)
    End Sub
    Partial Private Sub OnCUS3_FIRSTChanged()
    End Sub
    Partial Private Sub OnCUS3_LASTChanging(value As String)
    End Sub
    Partial Private Sub OnCUS3_LASTChanged()
    End Sub
    Partial Private Sub OnCTITLE_EChanging(value As String)
    End Sub
    Partial Private Sub OnCTITLE_EChanged()
    End Sub
    Partial Private Sub OnCFIRST_EChanging(value As String)
    End Sub
    Partial Private Sub OnCFIRST_EChanged()
    End Sub
    Partial Private Sub OnCLAST_EChanging(value As String)
    End Sub
    Partial Private Sub OnCLAST_EChanged()
    End Sub
    Partial Private Sub OnCifTypeChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnCifTypeChanged()
    End Sub
    Partial Private Sub OnBOTIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBOTIDChanged()
    End Sub
    Partial Private Sub OnMAIN_CUSTChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMAIN_CUSTChanged()
    End Sub
    Partial Private Sub OnGROUP_CUSTChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnGROUP_CUSTChanged()
    End Sub
    Partial Private Sub OnGROUPCIFChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGROUPCIFChanged()
    End Sub
    Partial Private Sub OnBAYRATINGChanging(value As String)
    End Sub
    Partial Private Sub OnBAYRATINGChanged()
    End Sub
    Partial Private Sub OnRATINGChanging(value As String)
    End Sub
    Partial Private Sub OnRATINGChanged()
    End Sub
    Partial Private Sub OnADDR1Changing(value As String)
    End Sub
    Partial Private Sub OnADDR1Changed()
    End Sub
    Partial Private Sub OnADDR2Changing(value As String)
    End Sub
    Partial Private Sub OnADDR2Changed()
    End Sub
    Partial Private Sub OnPROVChanging(value As String)
    End Sub
    Partial Private Sub OnPROVChanged()
    End Sub
    Partial Private Sub OnZIPCODEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnZIPCODEChanged()
    End Sub
    Partial Private Sub OnTEL_HOMEChanging(value As String)
    End Sub
    Partial Private Sub OnTEL_HOMEChanged()
    End Sub
    Partial Private Sub OnTEL_OFFChanging(value As String)
    End Sub
    Partial Private Sub OnTEL_OFFChanged()
    End Sub
    Partial Private Sub OnTAX_NOChanging(value As String)
    End Sub
    Partial Private Sub OnTAX_NOChanged()
    End Sub
    Partial Private Sub OnCUS_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnCUS_TYPEChanged()
    End Sub
    Partial Private Sub OnBUSI_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnBUSI_TYPEChanged()
    End Sub
    Partial Private Sub OnCLASSChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnCLASSChanged()
    End Sub
    Partial Private Sub OnIDCARDChanging(value As String)
    End Sub
    Partial Private Sub OnIDCARDChanged()
    End Sub
    Partial Private Sub OnOFFICR_IDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnOFFICR_IDChanged()
    End Sub
    Partial Private Sub OnDATEFASChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDATEFASChanged()
    End Sub
    Partial Private Sub OnBEINGCUSTChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBEINGCUSTChanged()
    End Sub
    Partial Private Sub OnBTHDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBTHDATEChanged()
    End Sub
    Partial Private Sub OnDEPTFLAGChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDEPTFLAGChanged()
    End Sub
    Partial Private Sub OnDEPTTRANChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDEPTTRANChanged()
    End Sub
    Partial Private Sub OnCIF0Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCIF0Changed()
    End Sub
    Partial Private Sub OnCIF1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCIF1Changed()
    End Sub
    Partial Private Sub OnCIF2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCIF2Changed()
    End Sub
    Partial Private Sub OnPROVSHOPChanging(value As String)
    End Sub
    Partial Private Sub OnPROVSHOPChanged()
    End Sub
    Partial Private Sub OnSEXChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnSEXChanged()
    End Sub
    Partial Private Sub OnADDRWORK1Changing(value As String)
    End Sub
    Partial Private Sub OnADDRWORK1Changed()
    End Sub
    Partial Private Sub OnADDRWORK2Changing(value As String)
    End Sub
    Partial Private Sub OnADDRWORK2Changed()
    End Sub
    Partial Private Sub OnZIPSHOPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnZIPSHOPChanged()
    End Sub
    Partial Private Sub OnCARDTYPEChanging(value As String)
    End Sub
    Partial Private Sub OnCARDTYPEChanged()
    End Sub
    Partial Private Sub OnCARDNOChanging(value As String)
    End Sub
    Partial Private Sub OnCARDNOChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Column(Storage:="_CIF", DbType:="Int NOT NULL", IsPrimaryKey:=true),  _
		 DataMember(Order:=1)>  _
		Public Property CIF() As Integer
			Get
				Return Me._CIF
			End Get
			Set
				If ((Me._CIF = value)  _
							= false) Then
					Me.OnCIFChanging(value)
					Me.SendPropertyChanging
					Me._CIF = value
					Me.SendPropertyChanged("CIF")
					Me.OnCIFChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CUS_TITLE", DbType:="NVarChar(10)"),  _
		 DataMember(Order:=2)>  _
		Public Property CUS_TITLE() As String
			Get
				Return Me._CUS_TITLE
			End Get
			Set
				If (String.Equals(Me._CUS_TITLE, value) = false) Then
					Me.OnCUS_TITLEChanging(value)
					Me.SendPropertyChanging
					Me._CUS_TITLE = value
					Me.SendPropertyChanged("CUS_TITLE")
					Me.OnCUS_TITLEChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CUS_FIRST", DbType:="NVarChar(30)"),  _
		 DataMember(Order:=3)>  _
		Public Property CUS_FIRST() As String
			Get
				Return Me._CUS_FIRST
			End Get
			Set
				If (String.Equals(Me._CUS_FIRST, value) = false) Then
					Me.OnCUS_FIRSTChanging(value)
					Me.SendPropertyChanging
					Me._CUS_FIRST = value
					Me.SendPropertyChanged("CUS_FIRST")
					Me.OnCUS_FIRSTChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CUS_LAST", DbType:="NVarChar(30)"),  _
		 DataMember(Order:=4)>  _
		Public Property CUS_LAST() As String
			Get
				Return Me._CUS_LAST
			End Get
			Set
				If (String.Equals(Me._CUS_LAST, value) = false) Then
					Me.OnCUS_LASTChanging(value)
					Me.SendPropertyChanging
					Me._CUS_LAST = value
					Me.SendPropertyChanged("CUS_LAST")
					Me.OnCUS_LASTChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CUS1_TITLE", DbType:="NVarChar(10)"),  _
		 DataMember(Order:=5)>  _
		Public Property CUS1_TITLE() As String
			Get
				Return Me._CUS1_TITLE
			End Get
			Set
				If (String.Equals(Me._CUS1_TITLE, value) = false) Then
					Me.OnCUS1_TITLEChanging(value)
					Me.SendPropertyChanging
					Me._CUS1_TITLE = value
					Me.SendPropertyChanged("CUS1_TITLE")
					Me.OnCUS1_TITLEChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CUS1_FIRST", DbType:="NVarChar(30)"),  _
		 DataMember(Order:=6)>  _
		Public Property CUS1_FIRST() As String
			Get
				Return Me._CUS1_FIRST
			End Get
			Set
				If (String.Equals(Me._CUS1_FIRST, value) = false) Then
					Me.OnCUS1_FIRSTChanging(value)
					Me.SendPropertyChanging
					Me._CUS1_FIRST = value
					Me.SendPropertyChanged("CUS1_FIRST")
					Me.OnCUS1_FIRSTChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CUS1_LAST", DbType:="NVarChar(30)"),  _
		 DataMember(Order:=7)>  _
		Public Property CUS1_LAST() As String
			Get
				Return Me._CUS1_LAST
			End Get
			Set
				If (String.Equals(Me._CUS1_LAST, value) = false) Then
					Me.OnCUS1_LASTChanging(value)
					Me.SendPropertyChanging
					Me._CUS1_LAST = value
					Me.SendPropertyChanged("CUS1_LAST")
					Me.OnCUS1_LASTChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CUS2_TITLE", DbType:="NVarChar(10)"),  _
		 DataMember(Order:=8)>  _
		Public Property CUS2_TITLE() As String
			Get
				Return Me._CUS2_TITLE
			End Get
			Set
				If (String.Equals(Me._CUS2_TITLE, value) = false) Then
					Me.OnCUS2_TITLEChanging(value)
					Me.SendPropertyChanging
					Me._CUS2_TITLE = value
					Me.SendPropertyChanged("CUS2_TITLE")
					Me.OnCUS2_TITLEChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CUS2_FIRST", DbType:="NVarChar(30)"),  _
		 DataMember(Order:=9)>  _
		Public Property CUS2_FIRST() As String
			Get
				Return Me._CUS2_FIRST
			End Get
			Set
				If (String.Equals(Me._CUS2_FIRST, value) = false) Then
					Me.OnCUS2_FIRSTChanging(value)
					Me.SendPropertyChanging
					Me._CUS2_FIRST = value
					Me.SendPropertyChanged("CUS2_FIRST")
					Me.OnCUS2_FIRSTChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CUS2_LAST", DbType:="NVarChar(30)"),  _
		 DataMember(Order:=10)>  _
		Public Property CUS2_LAST() As String
			Get
				Return Me._CUS2_LAST
			End Get
			Set
				If (String.Equals(Me._CUS2_LAST, value) = false) Then
					Me.OnCUS2_LASTChanging(value)
					Me.SendPropertyChanging
					Me._CUS2_LAST = value
					Me.SendPropertyChanged("CUS2_LAST")
					Me.OnCUS2_LASTChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CUS3_TITLE", DbType:="NVarChar(10)"),  _
		 DataMember(Order:=11)>  _
		Public Property CUS3_TITLE() As String
			Get
				Return Me._CUS3_TITLE
			End Get
			Set
				If (String.Equals(Me._CUS3_TITLE, value) = false) Then
					Me.OnCUS3_TITLEChanging(value)
					Me.SendPropertyChanging
					Me._CUS3_TITLE = value
					Me.SendPropertyChanged("CUS3_TITLE")
					Me.OnCUS3_TITLEChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CUS3_FIRST", DbType:="NVarChar(30)"),  _
		 DataMember(Order:=12)>  _
		Public Property CUS3_FIRST() As String
			Get
				Return Me._CUS3_FIRST
			End Get
			Set
				If (String.Equals(Me._CUS3_FIRST, value) = false) Then
					Me.OnCUS3_FIRSTChanging(value)
					Me.SendPropertyChanging
					Me._CUS3_FIRST = value
					Me.SendPropertyChanged("CUS3_FIRST")
					Me.OnCUS3_FIRSTChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CUS3_LAST", DbType:="NVarChar(30)"),  _
		 DataMember(Order:=13)>  _
		Public Property CUS3_LAST() As String
			Get
				Return Me._CUS3_LAST
			End Get
			Set
				If (String.Equals(Me._CUS3_LAST, value) = false) Then
					Me.OnCUS3_LASTChanging(value)
					Me.SendPropertyChanging
					Me._CUS3_LAST = value
					Me.SendPropertyChanged("CUS3_LAST")
					Me.OnCUS3_LASTChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CTITLE_E", DbType:="NVarChar(15)"),  _
		 DataMember(Order:=14)>  _
		Public Property CTITLE_E() As String
			Get
				Return Me._CTITLE_E
			End Get
			Set
				If (String.Equals(Me._CTITLE_E, value) = false) Then
					Me.OnCTITLE_EChanging(value)
					Me.SendPropertyChanging
					Me._CTITLE_E = value
					Me.SendPropertyChanged("CTITLE_E")
					Me.OnCTITLE_EChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CFIRST_E", DbType:="NVarChar(40)"),  _
		 DataMember(Order:=15)>  _
		Public Property CFIRST_E() As String
			Get
				Return Me._CFIRST_E
			End Get
			Set
				If (String.Equals(Me._CFIRST_E, value) = false) Then
					Me.OnCFIRST_EChanging(value)
					Me.SendPropertyChanging
					Me._CFIRST_E = value
					Me.SendPropertyChanged("CFIRST_E")
					Me.OnCFIRST_EChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CLAST_E", DbType:="NVarChar(40)"),  _
		 DataMember(Order:=16)>  _
		Public Property CLAST_E() As String
			Get
				Return Me._CLAST_E
			End Get
			Set
				If (String.Equals(Me._CLAST_E, value) = false) Then
					Me.OnCLAST_EChanging(value)
					Me.SendPropertyChanging
					Me._CLAST_E = value
					Me.SendPropertyChanged("CLAST_E")
					Me.OnCLAST_EChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CifType", DbType:="NVarChar(1)"),  _
		 DataMember(Order:=17)>  _
		Public Property CifType() As System.Nullable(Of Char)
			Get
				Return Me._CifType
			End Get
			Set
				If (Me._CifType.Equals(value) = false) Then
					Me.OnCifTypeChanging(value)
					Me.SendPropertyChanging
					Me._CifType = value
					Me.SendPropertyChanged("CifType")
					Me.OnCifTypeChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_BOTID", DbType:="Int"),  _
		 DataMember(Order:=18)>  _
		Public Property BOTID() As System.Nullable(Of Integer)
			Get
				Return Me._BOTID
			End Get
			Set
				If (Me._BOTID.Equals(value) = false) Then
					Me.OnBOTIDChanging(value)
					Me.SendPropertyChanging
					Me._BOTID = value
					Me.SendPropertyChanged("BOTID")
					Me.OnBOTIDChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_MAIN_CUST", DbType:="Int"),  _
		 DataMember(Order:=19)>  _
		Public Property MAIN_CUST() As System.Nullable(Of Integer)
			Get
				Return Me._MAIN_CUST
			End Get
			Set
				If (Me._MAIN_CUST.Equals(value) = false) Then
					Me.OnMAIN_CUSTChanging(value)
					Me.SendPropertyChanging
					Me._MAIN_CUST = value
					Me.SendPropertyChanged("MAIN_CUST")
					Me.OnMAIN_CUSTChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_GROUP_CUST", DbType:="NVarChar(1)"),  _
		 DataMember(Order:=20)>  _
		Public Property GROUP_CUST() As System.Nullable(Of Char)
			Get
				Return Me._GROUP_CUST
			End Get
			Set
				If (Me._GROUP_CUST.Equals(value) = false) Then
					Me.OnGROUP_CUSTChanging(value)
					Me.SendPropertyChanging
					Me._GROUP_CUST = value
					Me.SendPropertyChanged("GROUP_CUST")
					Me.OnGROUP_CUSTChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_GROUPCIF", DbType:="Int"),  _
		 DataMember(Order:=21)>  _
		Public Property GROUPCIF() As System.Nullable(Of Integer)
			Get
				Return Me._GROUPCIF
			End Get
			Set
				If (Me._GROUPCIF.Equals(value) = false) Then
					Me.OnGROUPCIFChanging(value)
					Me.SendPropertyChanging
					Me._GROUPCIF = value
					Me.SendPropertyChanged("GROUPCIF")
					Me.OnGROUPCIFChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_BAYRATING", DbType:="NVarChar(2)"),  _
		 DataMember(Order:=22)>  _
		Public Property BAYRATING() As String
			Get
				Return Me._BAYRATING
			End Get
			Set
				If (String.Equals(Me._BAYRATING, value) = false) Then
					Me.OnBAYRATINGChanging(value)
					Me.SendPropertyChanging
					Me._BAYRATING = value
					Me.SendPropertyChanged("BAYRATING")
					Me.OnBAYRATINGChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_RATING", DbType:="NVarChar(5)"),  _
		 DataMember(Order:=23)>  _
		Public Property RATING() As String
			Get
				Return Me._RATING
			End Get
			Set
				If (String.Equals(Me._RATING, value) = false) Then
					Me.OnRATINGChanging(value)
					Me.SendPropertyChanging
					Me._RATING = value
					Me.SendPropertyChanged("RATING")
					Me.OnRATINGChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_ADDR1", DbType:="NVarChar(110)"),  _
		 DataMember(Order:=24)>  _
		Public Property ADDR1() As String
			Get
				Return Me._ADDR1
			End Get
			Set
				If (String.Equals(Me._ADDR1, value) = false) Then
					Me.OnADDR1Changing(value)
					Me.SendPropertyChanging
					Me._ADDR1 = value
					Me.SendPropertyChanged("ADDR1")
					Me.OnADDR1Changed
				End If
			End Set
		End Property
		
		<Column(Storage:="_ADDR2", DbType:="NVarChar(70)"),  _
		 DataMember(Order:=25)>  _
		Public Property ADDR2() As String
			Get
				Return Me._ADDR2
			End Get
			Set
				If (String.Equals(Me._ADDR2, value) = false) Then
					Me.OnADDR2Changing(value)
					Me.SendPropertyChanging
					Me._ADDR2 = value
					Me.SendPropertyChanged("ADDR2")
					Me.OnADDR2Changed
				End If
			End Set
		End Property
		
		<Column(Storage:="_PROV", DbType:="NVarChar(2)"),  _
		 DataMember(Order:=26)>  _
		Public Property PROV() As String
			Get
				Return Me._PROV
			End Get
			Set
				If (String.Equals(Me._PROV, value) = false) Then
					Me.OnPROVChanging(value)
					Me.SendPropertyChanging
					Me._PROV = value
					Me.SendPropertyChanged("PROV")
					Me.OnPROVChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_ZIPCODE", DbType:="Int"),  _
		 DataMember(Order:=27)>  _
		Public Property ZIPCODE() As System.Nullable(Of Integer)
			Get
				Return Me._ZIPCODE
			End Get
			Set
				If (Me._ZIPCODE.Equals(value) = false) Then
					Me.OnZIPCODEChanging(value)
					Me.SendPropertyChanging
					Me._ZIPCODE = value
					Me.SendPropertyChanged("ZIPCODE")
					Me.OnZIPCODEChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_TEL_HOME", DbType:="NVarChar(20)"),  _
		 DataMember(Order:=28)>  _
		Public Property TEL_HOME() As String
			Get
				Return Me._TEL_HOME
			End Get
			Set
				If (String.Equals(Me._TEL_HOME, value) = false) Then
					Me.OnTEL_HOMEChanging(value)
					Me.SendPropertyChanging
					Me._TEL_HOME = value
					Me.SendPropertyChanged("TEL_HOME")
					Me.OnTEL_HOMEChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_TEL_OFF", DbType:="NVarChar(20)"),  _
		 DataMember(Order:=29)>  _
		Public Property TEL_OFF() As String
			Get
				Return Me._TEL_OFF
			End Get
			Set
				If (String.Equals(Me._TEL_OFF, value) = false) Then
					Me.OnTEL_OFFChanging(value)
					Me.SendPropertyChanging
					Me._TEL_OFF = value
					Me.SendPropertyChanged("TEL_OFF")
					Me.OnTEL_OFFChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_TAX_NO", DbType:="NVarChar(10)"),  _
		 DataMember(Order:=30)>  _
		Public Property TAX_NO() As String
			Get
				Return Me._TAX_NO
			End Get
			Set
				If (String.Equals(Me._TAX_NO, value) = false) Then
					Me.OnTAX_NOChanging(value)
					Me.SendPropertyChanging
					Me._TAX_NO = value
					Me.SendPropertyChanged("TAX_NO")
					Me.OnTAX_NOChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CUS_TYPE", DbType:="NVarChar(4)"),  _
		 DataMember(Order:=31)>  _
		Public Property CUS_TYPE() As String
			Get
				Return Me._CUS_TYPE
			End Get
			Set
				If (String.Equals(Me._CUS_TYPE, value) = false) Then
					Me.OnCUS_TYPEChanging(value)
					Me.SendPropertyChanging
					Me._CUS_TYPE = value
					Me.SendPropertyChanged("CUS_TYPE")
					Me.OnCUS_TYPEChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_BUSI_TYPE", DbType:="NVarChar(6)"),  _
		 DataMember(Order:=32)>  _
		Public Property BUSI_TYPE() As String
			Get
				Return Me._BUSI_TYPE
			End Get
			Set
				If (String.Equals(Me._BUSI_TYPE, value) = false) Then
					Me.OnBUSI_TYPEChanging(value)
					Me.SendPropertyChanging
					Me._BUSI_TYPE = value
					Me.SendPropertyChanged("BUSI_TYPE")
					Me.OnBUSI_TYPEChanged
				End If
			End Set
		End Property
		
		<Column(Name:="CLASS", Storage:="_CLASS", DbType:="NVarChar(1)"),  _
		 DataMember(Order:=33)>  _
		Public Property [CLASS]() As System.Nullable(Of Char)
			Get
				Return Me._CLASS
			End Get
			Set
				If (Me._CLASS.Equals(value) = false) Then
					Me.OnCLASSChanging(value)
					Me.SendPropertyChanging
					Me._CLASS = value
					Me.SendPropertyChanged("[CLASS]")
					Me.OnCLASSChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_IDCARD", DbType:="NVarChar(13)"),  _
		 DataMember(Order:=34)>  _
		Public Property IDCARD() As String
			Get
				Return Me._IDCARD
			End Get
			Set
				If (String.Equals(Me._IDCARD, value) = false) Then
					Me.OnIDCARDChanging(value)
					Me.SendPropertyChanging
					Me._IDCARD = value
					Me.SendPropertyChanged("IDCARD")
					Me.OnIDCARDChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_OFFICR_ID", DbType:="BigInt"),  _
		 DataMember(Order:=35)>  _
		Public Property OFFICR_ID() As System.Nullable(Of Long)
			Get
				Return Me._OFFICR_ID
			End Get
			Set
				If (Me._OFFICR_ID.Equals(value) = false) Then
					Me.OnOFFICR_IDChanging(value)
					Me.SendPropertyChanging
					Me._OFFICR_ID = value
					Me.SendPropertyChanged("OFFICR_ID")
					Me.OnOFFICR_IDChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_DATEFAS", DbType:="DateTime"),  _
		 DataMember(Order:=36)>  _
		Public Property DATEFAS() As System.Nullable(Of Date)
			Get
				Return Me._DATEFAS
			End Get
			Set
				If (Me._DATEFAS.Equals(value) = false) Then
					Me.OnDATEFASChanging(value)
					Me.SendPropertyChanging
					Me._DATEFAS = value
					Me.SendPropertyChanged("DATEFAS")
					Me.OnDATEFASChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_BEINGCUST", DbType:="DateTime"),  _
		 DataMember(Order:=37)>  _
		Public Property BEINGCUST() As System.Nullable(Of Date)
			Get
				Return Me._BEINGCUST
			End Get
			Set
				If (Me._BEINGCUST.Equals(value) = false) Then
					Me.OnBEINGCUSTChanging(value)
					Me.SendPropertyChanging
					Me._BEINGCUST = value
					Me.SendPropertyChanged("BEINGCUST")
					Me.OnBEINGCUSTChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_BTHDATE", DbType:="DateTime"),  _
		 DataMember(Order:=38)>  _
		Public Property BTHDATE() As System.Nullable(Of Date)
			Get
				Return Me._BTHDATE
			End Get
			Set
				If (Me._BTHDATE.Equals(value) = false) Then
					Me.OnBTHDATEChanging(value)
					Me.SendPropertyChanging
					Me._BTHDATE = value
					Me.SendPropertyChanged("BTHDATE")
					Me.OnBTHDATEChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_DEPTFLAG", DbType:="TinyInt"),  _
		 DataMember(Order:=39)>  _
		Public Property DEPTFLAG() As System.Nullable(Of Byte)
			Get
				Return Me._DEPTFLAG
			End Get
			Set
				If (Me._DEPTFLAG.Equals(value) = false) Then
					Me.OnDEPTFLAGChanging(value)
					Me.SendPropertyChanging
					Me._DEPTFLAG = value
					Me.SendPropertyChanged("DEPTFLAG")
					Me.OnDEPTFLAGChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_DEPTTRAN", DbType:="Int"),  _
		 DataMember(Order:=40)>  _
		Public Property DEPTTRAN() As System.Nullable(Of Integer)
			Get
				Return Me._DEPTTRAN
			End Get
			Set
				If (Me._DEPTTRAN.Equals(value) = false) Then
					Me.OnDEPTTRANChanging(value)
					Me.SendPropertyChanging
					Me._DEPTTRAN = value
					Me.SendPropertyChanged("DEPTTRAN")
					Me.OnDEPTTRANChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CIF0", DbType:="Int"),  _
		 DataMember(Order:=41)>  _
		Public Property CIF0() As System.Nullable(Of Integer)
			Get
				Return Me._CIF0
			End Get
			Set
				If (Me._CIF0.Equals(value) = false) Then
					Me.OnCIF0Changing(value)
					Me.SendPropertyChanging
					Me._CIF0 = value
					Me.SendPropertyChanged("CIF0")
					Me.OnCIF0Changed
				End If
			End Set
		End Property
		
		<Column(Storage:="_CIF1", DbType:="Int"),  _
		 DataMember(Order:=42)>  _
		Public Property CIF1() As System.Nullable(Of Integer)
			Get
				Return Me._CIF1
			End Get
			Set
				If (Me._CIF1.Equals(value) = false) Then
					Me.OnCIF1Changing(value)
					Me.SendPropertyChanging
					Me._CIF1 = value
					Me.SendPropertyChanged("CIF1")
					Me.OnCIF1Changed
				End If
			End Set
		End Property
		
		<Column(Storage:="_CIF2", DbType:="Int"),  _
		 DataMember(Order:=43)>  _
		Public Property CIF2() As System.Nullable(Of Integer)
			Get
				Return Me._CIF2
			End Get
			Set
				If (Me._CIF2.Equals(value) = false) Then
					Me.OnCIF2Changing(value)
					Me.SendPropertyChanging
					Me._CIF2 = value
					Me.SendPropertyChanged("CIF2")
					Me.OnCIF2Changed
				End If
			End Set
		End Property
		
		<Column(Storage:="_PROVSHOP", DbType:="NVarChar(2)"),  _
		 DataMember(Order:=44)>  _
		Public Property PROVSHOP() As String
			Get
				Return Me._PROVSHOP
			End Get
			Set
				If (String.Equals(Me._PROVSHOP, value) = false) Then
					Me.OnPROVSHOPChanging(value)
					Me.SendPropertyChanging
					Me._PROVSHOP = value
					Me.SendPropertyChanged("PROVSHOP")
					Me.OnPROVSHOPChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_SEX", DbType:="Char(1)"),  _
		 DataMember(Order:=45)>  _
		Public Property SEX() As System.Nullable(Of Char)
			Get
				Return Me._SEX
			End Get
			Set
				If (Me._SEX.Equals(value) = false) Then
					Me.OnSEXChanging(value)
					Me.SendPropertyChanging
					Me._SEX = value
					Me.SendPropertyChanged("SEX")
					Me.OnSEXChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_ADDRWORK1", DbType:="NVarChar(110)"),  _
		 DataMember(Order:=46)>  _
		Public Property ADDRWORK1() As String
			Get
				Return Me._ADDRWORK1
			End Get
			Set
				If (String.Equals(Me._ADDRWORK1, value) = false) Then
					Me.OnADDRWORK1Changing(value)
					Me.SendPropertyChanging
					Me._ADDRWORK1 = value
					Me.SendPropertyChanged("ADDRWORK1")
					Me.OnADDRWORK1Changed
				End If
			End Set
		End Property
		
		<Column(Storage:="_ADDRWORK2", DbType:="NVarChar(70)"),  _
		 DataMember(Order:=47)>  _
		Public Property ADDRWORK2() As String
			Get
				Return Me._ADDRWORK2
			End Get
			Set
				If (String.Equals(Me._ADDRWORK2, value) = false) Then
					Me.OnADDRWORK2Changing(value)
					Me.SendPropertyChanging
					Me._ADDRWORK2 = value
					Me.SendPropertyChanged("ADDRWORK2")
					Me.OnADDRWORK2Changed
				End If
			End Set
		End Property
		
		<Column(Storage:="_ZIPSHOP", DbType:="Int"),  _
		 DataMember(Order:=48)>  _
		Public Property ZIPSHOP() As System.Nullable(Of Integer)
			Get
				Return Me._ZIPSHOP
			End Get
			Set
				If (Me._ZIPSHOP.Equals(value) = false) Then
					Me.OnZIPSHOPChanging(value)
					Me.SendPropertyChanging
					Me._ZIPSHOP = value
					Me.SendPropertyChanged("ZIPSHOP")
					Me.OnZIPSHOPChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CARDTYPE", DbType:="NVarChar(10)"),  _
		 DataMember(Order:=49)>  _
		Public Property CARDTYPE() As String
			Get
				Return Me._CARDTYPE
			End Get
			Set
				If (String.Equals(Me._CARDTYPE, value) = false) Then
					Me.OnCARDTYPEChanging(value)
					Me.SendPropertyChanging
					Me._CARDTYPE = value
					Me.SendPropertyChanged("CARDTYPE")
					Me.OnCARDTYPEChanged
				End If
			End Set
		End Property
		
		<Column(Storage:="_CARDNO", DbType:="NVarChar(10)"),  _
		 DataMember(Order:=50)>  _
		Public Property CARDNO() As String
			Get
				Return Me._CARDNO
			End Get
			Set
				If (String.Equals(Me._CARDNO, value) = false) Then
					Me.OnCARDNOChanging(value)
					Me.SendPropertyChanging
					Me._CARDNO = value
					Me.SendPropertyChanged("CARDNO")
					Me.OnCARDNOChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<OnDeserializing(),  _
		 System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<DataContract()>  _
	Partial Public Class SP_CUSTOMER_SME_SELECT_BY_CIFResult
		
		Private _CIF As Integer
		
		Private _CUSTOMER_NAME As String
		
		Private _GROUP_ID As System.Nullable(Of Integer)
		
		Private _CM_CODE As String
		
		Private _CM_NAME As String
		
		Private _OLD_CM_CODE As String
		
		Private _OLD_CM_NAME As String
		
		Private _BRANCH_ID As System.Nullable(Of Short)
		
		Private _BRANCH_NAME As String
		
		Private _GROUP_SIZE_ID As Short
		
		Private _JUDGEMENT_ID As String
		
		Private _BUSI_RISK1_ID As System.Nullable(Of Integer)
		
		Private _BUSI_RISK1_DETAIL As String
		
		Private _BUSI_RISK2_ID As System.Nullable(Of Integer)
		
		Private _BUSI_RISK2_DETAIL As String
		
		Private _BUSI_RISK3_ID As System.Nullable(Of Integer)
		
		Private _BUSI_RISK3_DETAIL As String
		
		Private _UPDATE_BY As String
		
		Private _UPDATE_BY_NAME As String
		
		Private _UPDATE_DATE As Date
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Column(Storage:="_CIF", DbType:="Int NOT NULL"),  _
		 DataMember(Order:=1)>  _
		Public Property CIF() As Integer
			Get
				Return Me._CIF
			End Get
			Set
				If ((Me._CIF = value)  _
							= false) Then
					Me._CIF = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_CUSTOMER_NAME", DbType:="NVarChar(72) NOT NULL", CanBeNull:=false),  _
		 DataMember(Order:=2)>  _
		Public Property CUSTOMER_NAME() As String
			Get
				Return Me._CUSTOMER_NAME
			End Get
			Set
				If (String.Equals(Me._CUSTOMER_NAME, value) = false) Then
					Me._CUSTOMER_NAME = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_GROUP_ID", DbType:="Int"),  _
		 DataMember(Order:=3)>  _
		Public Property GROUP_ID() As System.Nullable(Of Integer)
			Get
				Return Me._GROUP_ID
			End Get
			Set
				If (Me._GROUP_ID.Equals(value) = false) Then
					Me._GROUP_ID = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_CM_CODE", DbType:="NVarChar(10)"),  _
		 DataMember(Order:=4)>  _
		Public Property CM_CODE() As String
			Get
				Return Me._CM_CODE
			End Get
			Set
				If (String.Equals(Me._CM_CODE, value) = false) Then
					Me._CM_CODE = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_CM_NAME", DbType:="NVarChar(121) NOT NULL", CanBeNull:=false),  _
		 DataMember(Order:=5)>  _
		Public Property CM_NAME() As String
			Get
				Return Me._CM_NAME
			End Get
			Set
				If (String.Equals(Me._CM_NAME, value) = false) Then
					Me._CM_NAME = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_OLD_CM_CODE", DbType:="NVarChar(10)"),  _
		 DataMember(Order:=6)>  _
		Public Property OLD_CM_CODE() As String
			Get
				Return Me._OLD_CM_CODE
			End Get
			Set
				If (String.Equals(Me._OLD_CM_CODE, value) = false) Then
					Me._OLD_CM_CODE = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_OLD_CM_NAME", DbType:="NVarChar(121) NOT NULL", CanBeNull:=false),  _
		 DataMember(Order:=7)>  _
		Public Property OLD_CM_NAME() As String
			Get
				Return Me._OLD_CM_NAME
			End Get
			Set
				If (String.Equals(Me._OLD_CM_NAME, value) = false) Then
					Me._OLD_CM_NAME = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_BRANCH_ID", DbType:="SmallInt"),  _
		 DataMember(Order:=8)>  _
		Public Property BRANCH_ID() As System.Nullable(Of Short)
			Get
				Return Me._BRANCH_ID
			End Get
			Set
				If (Me._BRANCH_ID.Equals(value) = false) Then
					Me._BRANCH_ID = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_BRANCH_NAME", DbType:="NVarChar(50)"),  _
		 DataMember(Order:=9)>  _
		Public Property BRANCH_NAME() As String
			Get
				Return Me._BRANCH_NAME
			End Get
			Set
				If (String.Equals(Me._BRANCH_NAME, value) = false) Then
					Me._BRANCH_NAME = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_GROUP_SIZE_ID", DbType:="SmallInt NOT NULL"),  _
		 DataMember(Order:=10)>  _
		Public Property GROUP_SIZE_ID() As Short
			Get
				Return Me._GROUP_SIZE_ID
			End Get
			Set
				If ((Me._GROUP_SIZE_ID = value)  _
							= false) Then
					Me._GROUP_SIZE_ID = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_JUDGEMENT_ID", DbType:="NVarChar(5) NOT NULL", CanBeNull:=false),  _
		 DataMember(Order:=11)>  _
		Public Property JUDGEMENT_ID() As String
			Get
				Return Me._JUDGEMENT_ID
			End Get
			Set
				If (String.Equals(Me._JUDGEMENT_ID, value) = false) Then
					Me._JUDGEMENT_ID = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_BUSI_RISK1_ID", DbType:="Int"),  _
		 DataMember(Order:=12)>  _
		Public Property BUSI_RISK1_ID() As System.Nullable(Of Integer)
			Get
				Return Me._BUSI_RISK1_ID
			End Get
			Set
				If (Me._BUSI_RISK1_ID.Equals(value) = false) Then
					Me._BUSI_RISK1_ID = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_BUSI_RISK1_DETAIL", DbType:="NVarChar(255)"),  _
		 DataMember(Order:=13)>  _
		Public Property BUSI_RISK1_DETAIL() As String
			Get
				Return Me._BUSI_RISK1_DETAIL
			End Get
			Set
				If (String.Equals(Me._BUSI_RISK1_DETAIL, value) = false) Then
					Me._BUSI_RISK1_DETAIL = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_BUSI_RISK2_ID", DbType:="Int"),  _
		 DataMember(Order:=14)>  _
		Public Property BUSI_RISK2_ID() As System.Nullable(Of Integer)
			Get
				Return Me._BUSI_RISK2_ID
			End Get
			Set
				If (Me._BUSI_RISK2_ID.Equals(value) = false) Then
					Me._BUSI_RISK2_ID = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_BUSI_RISK2_DETAIL", DbType:="NVarChar(255)"),  _
		 DataMember(Order:=15)>  _
		Public Property BUSI_RISK2_DETAIL() As String
			Get
				Return Me._BUSI_RISK2_DETAIL
			End Get
			Set
				If (String.Equals(Me._BUSI_RISK2_DETAIL, value) = false) Then
					Me._BUSI_RISK2_DETAIL = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_BUSI_RISK3_ID", DbType:="Int"),  _
		 DataMember(Order:=16)>  _
		Public Property BUSI_RISK3_ID() As System.Nullable(Of Integer)
			Get
				Return Me._BUSI_RISK3_ID
			End Get
			Set
				If (Me._BUSI_RISK3_ID.Equals(value) = false) Then
					Me._BUSI_RISK3_ID = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_BUSI_RISK3_DETAIL", DbType:="NVarChar(255)"),  _
		 DataMember(Order:=17)>  _
		Public Property BUSI_RISK3_DETAIL() As String
			Get
				Return Me._BUSI_RISK3_DETAIL
			End Get
			Set
				If (String.Equals(Me._BUSI_RISK3_DETAIL, value) = false) Then
					Me._BUSI_RISK3_DETAIL = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_UPDATE_BY", DbType:="NVarChar(10)"),  _
		 DataMember(Order:=18)>  _
		Public Property UPDATE_BY() As String
			Get
				Return Me._UPDATE_BY
			End Get
			Set
				If (String.Equals(Me._UPDATE_BY, value) = false) Then
					Me._UPDATE_BY = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_UPDATE_BY_NAME", DbType:="NVarChar(121) NOT NULL", CanBeNull:=false),  _
		 DataMember(Order:=19)>  _
		Public Property UPDATE_BY_NAME() As String
			Get
				Return Me._UPDATE_BY_NAME
			End Get
			Set
				If (String.Equals(Me._UPDATE_BY_NAME, value) = false) Then
					Me._UPDATE_BY_NAME = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_UPDATE_DATE", DbType:="DateTime NOT NULL"),  _
		 DataMember(Order:=20)>  _
		Public Property UPDATE_DATE() As Date
			Get
				Return Me._UPDATE_DATE
			End Get
			Set
				If ((Me._UPDATE_DATE = value)  _
							= false) Then
					Me._UPDATE_DATE = value
				End If
			End Set
		End Property
	End Class
	
	<DataContract()>  _
	Partial Public Class P_GET_EXPORTER_PRE_DETAIL_BY_CIFResult
		
		Private _CIF As Integer
		
		Private _Name As String
		
		Private _BUSINESS_1 As String
		
		Private _Total_OS As System.Nullable(Of Decimal)
		
		Private _OS_AsOf As System.Nullable(Of Date)
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Column(Storage:="_CIF", DbType:="Int NOT NULL"),  _
		 DataMember(Order:=1)>  _
		Public Property CIF() As Integer
			Get
				Return Me._CIF
			End Get
			Set
				If ((Me._CIF = value)  _
							= false) Then
					Me._CIF = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_Name", DbType:="NVarChar(120)"),  _
		 DataMember(Order:=2)>  _
		Public Property Name() As String
			Get
				Return Me._Name
			End Get
			Set
				If (String.Equals(Me._Name, value) = false) Then
					Me._Name = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_BUSINESS_1", DbType:="VarChar(255)"),  _
		 DataMember(Order:=3)>  _
		Public Property BUSINESS_1() As String
			Get
				Return Me._BUSINESS_1
			End Get
			Set
				If (String.Equals(Me._BUSINESS_1, value) = false) Then
					Me._BUSINESS_1 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_Total_OS", DbType:="Money"),  _
		 DataMember(Order:=4)>  _
		Public Property Total_OS() As System.Nullable(Of Decimal)
			Get
				Return Me._Total_OS
			End Get
			Set
				If (Me._Total_OS.Equals(value) = false) Then
					Me._Total_OS = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_OS_AsOf", DbType:="SmallDateTime"),  _
		 DataMember(Order:=5)>  _
		Public Property OS_AsOf() As System.Nullable(Of Date)
			Get
				Return Me._OS_AsOf
			End Get
			Set
				If (Me._OS_AsOf.Equals(value) = false) Then
					Me._OS_AsOf = value
				End If
			End Set
		End Property
	End Class
	
	<DataContract()>  _
	Partial Public Class P_GET_EXPORTER_DETAIL_BY_CIFResult
		
		Private _CIF As Integer
		
		Private _Name As String
		
		Private _BUSINESS_1 As String
		
		Private _TOTAL_LIMIT As System.Nullable(Of Decimal)
		
		Private _Total_OS As System.Nullable(Of Decimal)
		
		Private _OS_AsOf As System.Nullable(Of Date)
		
		Private _GROUP_EXPOSURE As System.Nullable(Of Decimal)
		
		Private _EXPORT_TO_1 As System.Nullable(Of Integer)
		
		Private _EXPORT_TO_2 As System.Nullable(Of Integer)
		
		Private _EXPORT_TO_3 As System.Nullable(Of Integer)
		
		Private _REVENUE As System.Nullable(Of Decimal)
		
		Private _REVENUE_EXPORT As System.Nullable(Of Decimal)
		
		Private _REVENUE_LOCAL As System.Nullable(Of Decimal)
		
		Private _EX_CURRENCY_TYPE_1 As System.Nullable(Of Integer)
		
		Private _EX_PERCENTAGE_1 As System.Nullable(Of Decimal)
		
		Private _EX_CURRENCY_TYPE_2 As System.Nullable(Of Integer)
		
		Private _EX_PERCENTAGE_2 As System.Nullable(Of Decimal)
		
		Private _EX_CURRENCY_TYPE_3 As System.Nullable(Of Integer)
		
		Private _EX_PERCENTAGE_3 As System.Nullable(Of Decimal)
		
		Private _COGS As System.Nullable(Of Decimal)
		
		Private _COGS_IMPORT As System.Nullable(Of Decimal)
		
		Private _COGS_LOCAL As System.Nullable(Of Decimal)
		
		Private _IM_CURRENCY_TYPE_1 As System.Nullable(Of Integer)
		
		Private _IM_PERCENTAGE_1 As System.Nullable(Of Decimal)
		
		Private _IM_CURRENCY_TYPE_2 As System.Nullable(Of Integer)
		
		Private _IM_PERCENTAGE_2 As System.Nullable(Of Decimal)
		
		Private _IM_CURRENCY_TYPE_3 As System.Nullable(Of Integer)
		
		Private _IM_PERCENTAGE_3 As System.Nullable(Of Decimal)
		
		Private _GROSS_MARGIN As System.Nullable(Of Decimal)
		
		Private _SG_AND_A As System.Nullable(Of Decimal)
		
		Private _NET_MARGIN As System.Nullable(Of Decimal)
		
		Private _PAY_INTEREST As System.Nullable(Of Decimal)
		
		Private _PAY_PRINCIPAL As System.Nullable(Of Decimal)
		
		Private _UPDATE_BY As String
		
		Private _UPDATE_DATE As System.Nullable(Of Date)
		
		Private _UPDATE_NAME As String
		
		Public Sub New()
			MyBase.New
		End Sub
		
		<Column(Storage:="_CIF", DbType:="Int NOT NULL"),  _
		 DataMember(Order:=1)>  _
		Public Property CIF() As Integer
			Get
				Return Me._CIF
			End Get
			Set
				If ((Me._CIF = value)  _
							= false) Then
					Me._CIF = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_Name", DbType:="NVarChar(120)"),  _
		 DataMember(Order:=2)>  _
		Public Property Name() As String
			Get
				Return Me._Name
			End Get
			Set
				If (String.Equals(Me._Name, value) = false) Then
					Me._Name = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_BUSINESS_1", DbType:="VarChar(255)"),  _
		 DataMember(Order:=3)>  _
		Public Property BUSINESS_1() As String
			Get
				Return Me._BUSINESS_1
			End Get
			Set
				If (String.Equals(Me._BUSINESS_1, value) = false) Then
					Me._BUSINESS_1 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_TOTAL_LIMIT", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=4)>  _
		Public Property TOTAL_LIMIT() As System.Nullable(Of Decimal)
			Get
				Return Me._TOTAL_LIMIT
			End Get
			Set
				If (Me._TOTAL_LIMIT.Equals(value) = false) Then
					Me._TOTAL_LIMIT = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_Total_OS", DbType:="Money"),  _
		 DataMember(Order:=5)>  _
		Public Property Total_OS() As System.Nullable(Of Decimal)
			Get
				Return Me._Total_OS
			End Get
			Set
				If (Me._Total_OS.Equals(value) = false) Then
					Me._Total_OS = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_OS_AsOf", DbType:="SmallDateTime"),  _
		 DataMember(Order:=6)>  _
		Public Property OS_AsOf() As System.Nullable(Of Date)
			Get
				Return Me._OS_AsOf
			End Get
			Set
				If (Me._OS_AsOf.Equals(value) = false) Then
					Me._OS_AsOf = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_GROUP_EXPOSURE", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=7)>  _
		Public Property GROUP_EXPOSURE() As System.Nullable(Of Decimal)
			Get
				Return Me._GROUP_EXPOSURE
			End Get
			Set
				If (Me._GROUP_EXPOSURE.Equals(value) = false) Then
					Me._GROUP_EXPOSURE = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_EXPORT_TO_1", DbType:="Int"),  _
		 DataMember(Order:=8)>  _
		Public Property EXPORT_TO_1() As System.Nullable(Of Integer)
			Get
				Return Me._EXPORT_TO_1
			End Get
			Set
				If (Me._EXPORT_TO_1.Equals(value) = false) Then
					Me._EXPORT_TO_1 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_EXPORT_TO_2", DbType:="Int"),  _
		 DataMember(Order:=9)>  _
		Public Property EXPORT_TO_2() As System.Nullable(Of Integer)
			Get
				Return Me._EXPORT_TO_2
			End Get
			Set
				If (Me._EXPORT_TO_2.Equals(value) = false) Then
					Me._EXPORT_TO_2 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_EXPORT_TO_3", DbType:="Int"),  _
		 DataMember(Order:=10)>  _
		Public Property EXPORT_TO_3() As System.Nullable(Of Integer)
			Get
				Return Me._EXPORT_TO_3
			End Get
			Set
				If (Me._EXPORT_TO_3.Equals(value) = false) Then
					Me._EXPORT_TO_3 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_REVENUE", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=11)>  _
		Public Property REVENUE() As System.Nullable(Of Decimal)
			Get
				Return Me._REVENUE
			End Get
			Set
				If (Me._REVENUE.Equals(value) = false) Then
					Me._REVENUE = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_REVENUE_EXPORT", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=12)>  _
		Public Property REVENUE_EXPORT() As System.Nullable(Of Decimal)
			Get
				Return Me._REVENUE_EXPORT
			End Get
			Set
				If (Me._REVENUE_EXPORT.Equals(value) = false) Then
					Me._REVENUE_EXPORT = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_REVENUE_LOCAL", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=13)>  _
		Public Property REVENUE_LOCAL() As System.Nullable(Of Decimal)
			Get
				Return Me._REVENUE_LOCAL
			End Get
			Set
				If (Me._REVENUE_LOCAL.Equals(value) = false) Then
					Me._REVENUE_LOCAL = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_EX_CURRENCY_TYPE_1", DbType:="Int"),  _
		 DataMember(Order:=14)>  _
		Public Property EX_CURRENCY_TYPE_1() As System.Nullable(Of Integer)
			Get
				Return Me._EX_CURRENCY_TYPE_1
			End Get
			Set
				If (Me._EX_CURRENCY_TYPE_1.Equals(value) = false) Then
					Me._EX_CURRENCY_TYPE_1 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_EX_PERCENTAGE_1", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=15)>  _
		Public Property EX_PERCENTAGE_1() As System.Nullable(Of Decimal)
			Get
				Return Me._EX_PERCENTAGE_1
			End Get
			Set
				If (Me._EX_PERCENTAGE_1.Equals(value) = false) Then
					Me._EX_PERCENTAGE_1 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_EX_CURRENCY_TYPE_2", DbType:="Int"),  _
		 DataMember(Order:=16)>  _
		Public Property EX_CURRENCY_TYPE_2() As System.Nullable(Of Integer)
			Get
				Return Me._EX_CURRENCY_TYPE_2
			End Get
			Set
				If (Me._EX_CURRENCY_TYPE_2.Equals(value) = false) Then
					Me._EX_CURRENCY_TYPE_2 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_EX_PERCENTAGE_2", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=17)>  _
		Public Property EX_PERCENTAGE_2() As System.Nullable(Of Decimal)
			Get
				Return Me._EX_PERCENTAGE_2
			End Get
			Set
				If (Me._EX_PERCENTAGE_2.Equals(value) = false) Then
					Me._EX_PERCENTAGE_2 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_EX_CURRENCY_TYPE_3", DbType:="Int"),  _
		 DataMember(Order:=18)>  _
		Public Property EX_CURRENCY_TYPE_3() As System.Nullable(Of Integer)
			Get
				Return Me._EX_CURRENCY_TYPE_3
			End Get
			Set
				If (Me._EX_CURRENCY_TYPE_3.Equals(value) = false) Then
					Me._EX_CURRENCY_TYPE_3 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_EX_PERCENTAGE_3", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=19)>  _
		Public Property EX_PERCENTAGE_3() As System.Nullable(Of Decimal)
			Get
				Return Me._EX_PERCENTAGE_3
			End Get
			Set
				If (Me._EX_PERCENTAGE_3.Equals(value) = false) Then
					Me._EX_PERCENTAGE_3 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_COGS", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=20)>  _
		Public Property COGS() As System.Nullable(Of Decimal)
			Get
				Return Me._COGS
			End Get
			Set
				If (Me._COGS.Equals(value) = false) Then
					Me._COGS = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_COGS_IMPORT", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=21)>  _
		Public Property COGS_IMPORT() As System.Nullable(Of Decimal)
			Get
				Return Me._COGS_IMPORT
			End Get
			Set
				If (Me._COGS_IMPORT.Equals(value) = false) Then
					Me._COGS_IMPORT = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_COGS_LOCAL", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=22)>  _
		Public Property COGS_LOCAL() As System.Nullable(Of Decimal)
			Get
				Return Me._COGS_LOCAL
			End Get
			Set
				If (Me._COGS_LOCAL.Equals(value) = false) Then
					Me._COGS_LOCAL = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_IM_CURRENCY_TYPE_1", DbType:="Int"),  _
		 DataMember(Order:=23)>  _
		Public Property IM_CURRENCY_TYPE_1() As System.Nullable(Of Integer)
			Get
				Return Me._IM_CURRENCY_TYPE_1
			End Get
			Set
				If (Me._IM_CURRENCY_TYPE_1.Equals(value) = false) Then
					Me._IM_CURRENCY_TYPE_1 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_IM_PERCENTAGE_1", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=24)>  _
		Public Property IM_PERCENTAGE_1() As System.Nullable(Of Decimal)
			Get
				Return Me._IM_PERCENTAGE_1
			End Get
			Set
				If (Me._IM_PERCENTAGE_1.Equals(value) = false) Then
					Me._IM_PERCENTAGE_1 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_IM_CURRENCY_TYPE_2", DbType:="Int"),  _
		 DataMember(Order:=25)>  _
		Public Property IM_CURRENCY_TYPE_2() As System.Nullable(Of Integer)
			Get
				Return Me._IM_CURRENCY_TYPE_2
			End Get
			Set
				If (Me._IM_CURRENCY_TYPE_2.Equals(value) = false) Then
					Me._IM_CURRENCY_TYPE_2 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_IM_PERCENTAGE_2", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=26)>  _
		Public Property IM_PERCENTAGE_2() As System.Nullable(Of Decimal)
			Get
				Return Me._IM_PERCENTAGE_2
			End Get
			Set
				If (Me._IM_PERCENTAGE_2.Equals(value) = false) Then
					Me._IM_PERCENTAGE_2 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_IM_CURRENCY_TYPE_3", DbType:="Int"),  _
		 DataMember(Order:=27)>  _
		Public Property IM_CURRENCY_TYPE_3() As System.Nullable(Of Integer)
			Get
				Return Me._IM_CURRENCY_TYPE_3
			End Get
			Set
				If (Me._IM_CURRENCY_TYPE_3.Equals(value) = false) Then
					Me._IM_CURRENCY_TYPE_3 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_IM_PERCENTAGE_3", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=28)>  _
		Public Property IM_PERCENTAGE_3() As System.Nullable(Of Decimal)
			Get
				Return Me._IM_PERCENTAGE_3
			End Get
			Set
				If (Me._IM_PERCENTAGE_3.Equals(value) = false) Then
					Me._IM_PERCENTAGE_3 = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_GROSS_MARGIN", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=29)>  _
		Public Property GROSS_MARGIN() As System.Nullable(Of Decimal)
			Get
				Return Me._GROSS_MARGIN
			End Get
			Set
				If (Me._GROSS_MARGIN.Equals(value) = false) Then
					Me._GROSS_MARGIN = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_SG_AND_A", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=30)>  _
		Public Property SG_AND_A() As System.Nullable(Of Decimal)
			Get
				Return Me._SG_AND_A
			End Get
			Set
				If (Me._SG_AND_A.Equals(value) = false) Then
					Me._SG_AND_A = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_NET_MARGIN", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=31)>  _
		Public Property NET_MARGIN() As System.Nullable(Of Decimal)
			Get
				Return Me._NET_MARGIN
			End Get
			Set
				If (Me._NET_MARGIN.Equals(value) = false) Then
					Me._NET_MARGIN = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_PAY_INTEREST", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=32)>  _
		Public Property PAY_INTEREST() As System.Nullable(Of Decimal)
			Get
				Return Me._PAY_INTEREST
			End Get
			Set
				If (Me._PAY_INTEREST.Equals(value) = false) Then
					Me._PAY_INTEREST = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_PAY_PRINCIPAL", DbType:="Decimal(0,0)"),  _
		 DataMember(Order:=33)>  _
		Public Property PAY_PRINCIPAL() As System.Nullable(Of Decimal)
			Get
				Return Me._PAY_PRINCIPAL
			End Get
			Set
				If (Me._PAY_PRINCIPAL.Equals(value) = false) Then
					Me._PAY_PRINCIPAL = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_UPDATE_BY", DbType:="NVarChar(10)"),  _
		 DataMember(Order:=34)>  _
		Public Property UPDATE_BY() As String
			Get
				Return Me._UPDATE_BY
			End Get
			Set
				If (String.Equals(Me._UPDATE_BY, value) = false) Then
					Me._UPDATE_BY = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_UPDATE_DATE", DbType:="DateTime"),  _
		 DataMember(Order:=35)>  _
		Public Property UPDATE_DATE() As System.Nullable(Of Date)
			Get
				Return Me._UPDATE_DATE
			End Get
			Set
				If (Me._UPDATE_DATE.Equals(value) = false) Then
					Me._UPDATE_DATE = value
				End If
			End Set
		End Property
		
		<Column(Storage:="_UPDATE_NAME", DbType:="NVarChar(120)"),  _
		 DataMember(Order:=36)>  _
		Public Property UPDATE_NAME() As String
			Get
				Return Me._UPDATE_NAME
			End Get
			Set
				If (String.Equals(Me._UPDATE_NAME, value) = false) Then
					Me._UPDATE_NAME = value
				End If
			End Set
		End Property
	End Class
End Namespace
